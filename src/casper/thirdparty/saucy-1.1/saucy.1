.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "SAUCY" "1" "08 February 2005" "University of Michigan" ""

.SH NAME
saucy \- graph automorphism generator generator
.SH SYNOPSIS

\fBsaucy\fR [ \fB-sqzg\fR ] [ \fB-p \fIcount\fB\fR ] [ \fB-t \fIsecs\fB\fR ] \fB\fIfile\fB\fR

.SH "DESCRIPTION"
.PP
\fBsaucy\fR reads a graph from
\fIfile\fR in its native format, or if
\fB-g\fR is specified, in the GAP format used by Shatter.
Generators implicitly representing the automorphism group of the
graph are computed and sent to standard output.
.SH "OPTIONS"
.TP
\fB-s\fR
Output computation statistics to standard error.
.TP
\fB-q\fR
Quiet mode: do not output the generators discovered during the search.
This is primarily useful in conjunction with \fB-s\fR\&.
.TP
\fB-z\fR
Stop the search once the first discrete partition is found.  Again,
primarily useful in debugging refinement in conjunction with
\fB-s\fR\&.
.TP
\fB-g\fR
Use GAP as the input and output format, for use with Shatter.
.TP
\fB-t \fIsecs\fB\fR
Force \fBsaucy\fR to end computation after at least
\fIsecs\fR seconds.  \fBsaucy\fR
may not terminate immediately, depending on the current state of the
computation.  In particular, it will not terminate in the middle of
outputting an automorphism.
.TP
\fB-p \fIcount\fB\fR
Cache \fIcount\fR automorphisms for efficient
backtracking.  The default \fIcount\fR is
60 automorphisms.  This cache is used only during backtracking, and
thus increasing its size will not improve performance on many graphs.
If the cache is needed, a larger cache can improve the effectiveness
of the backtracking, but at the expense of time and memory overhead.
.SH "INPUT"
.PP
\fBsaucy\fR uses a very simplistic input format for graphs.
Note that the brackets below are not part of the syntax, and that the
vertices of a graph are numbered from 0.
.PP
{\fIvertices\fR}
{\fIedges\fR}
{\fIcells\fR}
{\fIstarts...\fR}
{\fIv1 v2\fR}
{\fI\&...\fR}
.TP
\fB\fIvertices\fB\fR
Total number of vertices in the graph.
.TP
\fB\fIedges\fB\fR
Total number of edges in the graph.
.TP
\fB\fIcells\fB\fR
Number of cells in the initial coloring.  \fBsaucy\fR
operates on ordered partitions, or colorings, of the set of vertices of
the graph.  The \fIcells\fR attribute specifies the
number of colors present in the initial coloring of the graph.  If the
graph is initially uncolored, then all vertices are indistinguished and
\fIcells\fR should be 1.
.TP
\fB\fIstarts\fB\fR
Locations of the starts of cells in the initial coloring.
\fBsaucy\fR reads \fIcells\fR-1
starts, each identifying the beginning of the new cell in the
partition.  The first cell starts from zero, and is omitted.
.TP
\fB\fIv1 v2\fB\fR
Add an edge between these two vertices.  The remainder of the file
consists of \fIedges\fR pairs of vertices.
\fIv1\fR and \fIv2\fR are not
allowed to be equal.
.SH "NOTES"
.PP
\fBsaucy\fR assumes that its input file is well-formed,
and will not behave gracefully if it is not.
.SH "AUTHOR"
.PP
This program is written and maintained by Paul T. Darga
<pdarga@umich.edu> with help from Mark Liffiton
<liffiton@umich.edu>\&.  The underlying mathematics,
search tree, and basic refinement algorithms are all due to Brendan
D. McKay and his \fBnauty\fR package.  The algorithms are
published in McKay, B. D., "Practical Graph Isomorphism", Congressus
Numerantium 30 (1981), pp.45-87.
.PP
\fBsaucy\fR was originally inspired by the work of DoRon B.
Motter on his \fBAutoGraph\fR project.
.PP
This work was funded in part by NSF ITR grant 0205288.
