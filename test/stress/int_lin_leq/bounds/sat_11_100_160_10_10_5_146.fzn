predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..160] of var 1..10: q :: output_array([1..160]);
constraint int_lin_le([-4, 5, 4, -4, -4, -2, 3, 1, -5, -1, 2, -1, -1, 4, -4, 5, 3, 3, 4, -5, 4, 2, -3, 2, -3, -2, -1, 4, 2, -3, -2, -2, 4, 1, -1, 1, -1, -4, 4, 1, -4, -1, 2, -2, -2, -1, -4, 2, -1, 3, 1, -1, 4, -3, -5, -1, -5, -2, -4, -1, -1, -2, 5, -1, -2, 5, 3, -3, -1, -1, -1, 4, -5, 2, 5, -1, -1, 2, 3, 1, -4, 3, 4, -5, 5, -1, -2, 3, -1, 3, -1, -1, -4, -5, -2, -1, -4, -5, 4, -4], [q[3], q[4], q[6], q[7], q[9], q[10], q[11], q[12], q[13], q[14], q[15], q[16], q[17], q[18], q[20], q[21], q[24], q[25], q[27], q[28], q[30], q[31], q[32], q[33], q[34], q[35], q[37], q[42], q[45], q[46], q[47], q[48], q[49], q[50], q[51], q[52], q[53], q[54], q[58], q[59], q[60], q[61], q[62], q[63], q[66], q[70], q[71], q[72], q[75], q[76], q[77], q[79], q[80], q[81], q[82], q[83], q[84], q[87], q[88], q[89], q[91], q[92], q[93], q[94], q[95], q[99], q[100], q[101], q[103], q[105], q[106], q[107], q[108], q[111], q[112], q[113], q[114], q[115], q[116], q[117], q[119], q[122], q[124], q[127], q[131], q[132], q[133], q[134], q[135], q[136], q[137], q[140], q[141], q[142], q[144], q[148], q[149], q[150], q[154], q[160]], -98);
constraint int_lin_le([-2, -3, -3, -1, -5, 1, -5, -1, -4, 5, 5, -5, 2, 3, -2, 5, -2, 1, -1, 4, 3, 3, 5, 4, -3, 2, 5, 1, 5, -2, 1, 4, -1, -2, 3, -5, 2, -4, 5, -5, 1, -5, 2, 1, 1, 3, 1, 3, 5, 1, 3, 5, -1, -5, -5, 1, 5, 5, -4, 4, -4, -1, -3, -1, -2, -2, -1, -3, 5, -2, 5, -4, 4, 5, -5, 1, -4, 4, 5, 3, 1, 3, -1, -3, -4, 1, 1, -1, 1, -4, -4, -4, -2, -5, -2, 2, -3, 5, 1, -2], [q[1], q[3], q[4], q[5], q[6], q[8], q[10], q[11], q[13], q[14], q[15], q[16], q[19], q[20], q[22], q[24], q[25], q[29], q[30], q[32], q[33], q[35], q[36], q[38], q[39], q[40], q[42], q[43], q[44], q[45], q[46], q[47], q[49], q[51], q[52], q[55], q[56], q[59], q[60], q[61], q[62], q[63], q[64], q[65], q[69], q[70], q[71], q[76], q[78], q[80], q[81], q[82], q[83], q[84], q[85], q[87], q[89], q[90], q[93], q[96], q[97], q[99], q[101], q[102], q[103], q[109], q[110], q[111], q[113], q[114], q[115], q[116], q[117], q[118], q[122], q[123], q[126], q[127], q[129], q[131], q[132], q[133], q[134], q[136], q[138], q[140], q[141], q[142], q[143], q[145], q[147], q[148], q[152], q[153], q[155], q[156], q[157], q[158], q[159], q[160]], 34);
constraint int_lin_le([-1, -3, 1, 4, 3, -1, -3, 3, 5, 1, -4, -2, -4, 2, -2, 5, 1, 3, -4, 5, -5, -5, 1, -5, 5, -2, 2, -4, -3, -4, 2, 4, -3, -5, -3, 2, 4, 3, 5, -2, 1, -4, 1, 2, -2, -5, 4, -5, 5, 1, 3, 1, 3, -4, 4, 1, 1, 1, 1, -3, -3, 1, -1, 5, -1, 2, 3, 5, 2, -2, 1, 4, 1, 4, -4, 3, 1, 4, 4, 4, -3, 5, 4, 1, -5, -3, 1, 5, 2, 5, -1, -1, -4, -4, 3, -2, 1, 3, 2, -5], [q[1], q[5], q[7], q[9], q[13], q[14], q[16], q[17], q[18], q[19], q[20], q[22], q[27], q[28], q[29], q[30], q[31], q[35], q[36], q[37], q[39], q[40], q[41], q[42], q[44], q[47], q[50], q[51], q[52], q[53], q[55], q[56], q[58], q[59], q[60], q[61], q[62], q[64], q[65], q[67], q[69], q[70], q[71], q[72], q[73], q[74], q[75], q[76], q[84], q[85], q[87], q[89], q[91], q[93], q[95], q[96], q[97], q[98], q[99], q[100], q[101], q[102], q[105], q[106], q[109], q[112], q[113], q[119], q[120], q[121], q[122], q[123], q[125], q[126], q[127], q[128], q[129], q[130], q[132], q[133], q[134], q[135], q[136], q[138], q[139], q[140], q[141], q[145], q[146], q[147], q[148], q[150], q[151], q[152], q[153], q[155], q[156], q[157], q[158], q[160]], 255);
constraint int_lin_le([-1, 2, -4, 1, -1, -4, 5, 4, 3, -3, -3, -3, -1, 4, -4, -3, 4, 4, 3, 5, 4, 1, 3, 1, 1, 1, -5, 2, -4, 1, 1, -2, 5, 4, -4, -3, 1, -2, 1, -5, 1, 5, 1, -5, 1, -5, -2, 4, -3, 3, 5, 1, -1, -4, -5, 1, -3, 4, -2, 4, -1, -3, -1, -1, 2, 5, 5, 1, -5, 1, -1, -4, -1, -4, -3, -4, 1, 2, 1, 4, -5, -2, -2, 3, 5, 5, 4, -3, -3, 3, 3, 1, 5, -1, 2, 1, 2, 5, 2, 5], [q[2], q[4], q[5], q[6], q[7], q[8], q[9], q[10], q[12], q[14], q[16], q[18], q[20], q[23], q[24], q[25], q[26], q[27], q[29], q[33], q[34], q[36], q[37], q[42], q[43], q[45], q[46], q[48], q[49], q[51], q[52], q[53], q[54], q[57], q[58], q[59], q[60], q[63], q[65], q[66], q[67], q[69], q[71], q[72], q[74], q[78], q[79], q[80], q[81], q[83], q[85], q[89], q[90], q[91], q[92], q[93], q[94], q[97], q[98], q[99], q[100], q[101], q[104], q[105], q[106], q[108], q[109], q[110], q[111], q[112], q[113], q[114], q[115], q[116], q[119], q[120], q[123], q[124], q[126], q[127], q[128], q[130], q[131], q[132], q[134], q[137], q[138], q[139], q[140], q[141], q[142], q[143], q[144], q[147], q[150], q[152], q[154], q[155], q[156], q[159]], 183);
constraint int_lin_le([1, -3, -2, 3, -5, 5, -4, 3, 2, -1, -4, 2, -2, -4, 1, 3, -1, 4, 2, 2, 4, -2, -4, 5, -2, -2, 4, -1, -3, 1, 1, -1, -3, 2, 2, 4, -4, 4, -3, 5, -4, -4, 2, 2, -5, 5, 4, -3, -1, -1, -1, -2, -2, -2, -2, -5, -5, 2, -2, 5, -3, 2, 3, -1, 5, -1, 5, -4, 1, -1, 2, -1, -1, 2, 1, 2, -5, -5, 4, 2, -1, -4, 5, 1, -4, 1, -1, -2, 5, 2, 2, -1, -3, 2, -2, 2, 3, 5, 2, -3], [q[1], q[2], q[4], q[5], q[6], q[7], q[8], q[9], q[14], q[15], q[16], q[17], q[18], q[19], q[20], q[23], q[24], q[25], q[26], q[27], q[28], q[29], q[30], q[32], q[34], q[36], q[37], q[39], q[41], q[46], q[47], q[48], q[49], q[50], q[51], q[53], q[54], q[58], q[59], q[60], q[61], q[64], q[66], q[70], q[72], q[73], q[74], q[75], q[76], q[77], q[81], q[82], q[83], q[85], q[87], q[89], q[90], q[91], q[92], q[93], q[96], q[97], q[99], q[100], q[101], q[102], q[103], q[105], q[107], q[109], q[110], q[112], q[113], q[114], q[115], q[118], q[120], q[121], q[122], q[123], q[124], q[125], q[126], q[128], q[129], q[131], q[134], q[139], q[142], q[144], q[145], q[146], q[147], q[148], q[149], q[150], q[153], q[154], q[157], q[159]], 54);
constraint int_lin_le([1, -2, -3, 5, -5, -4, -1, 3, -5, 3, -1, -4, -2, 2, -1, -1, -1, 3, -5, -1, -4, -4, -4, -4, -1, 5, 4, 5, 3, -4, -2, 1, -1, -2, 3, -5, 4, 4, 2, -4, 4, 3, 4, 1, -4, 5, 3, 3, 2, -5, 3, -1, 5, -5, 2, -2, -4, 5, -2, 4, -5, -5, 1, 2, -3, -5, 3, -5, 2, -1, 1, -2, -1, -1, -3, 5, 1, 5, 2, -3, 5, -2, 1, 3, -5, -1, -4, -2, 1, 3, 2, -2, 1, -1, -1, 1, -3, 2, -4, -5], [q[5], q[6], q[7], q[10], q[11], q[12], q[15], q[16], q[17], q[21], q[22], q[23], q[25], q[26], q[27], q[30], q[31], q[32], q[33], q[35], q[36], q[39], q[40], q[41], q[44], q[45], q[46], q[48], q[49], q[50], q[52], q[54], q[55], q[58], q[59], q[63], q[65], q[66], q[67], q[68], q[69], q[71], q[72], q[73], q[74], q[75], q[76], q[79], q[80], q[81], q[87], q[88], q[91], q[92], q[94], q[98], q[100], q[101], q[102], q[103], q[105], q[106], q[107], q[109], q[111], q[114], q[118], q[119], q[121], q[122], q[123], q[124], q[125], q[126], q[128], q[129], q[131], q[133], q[134], q[135], q[138], q[139], q[140], q[141], q[142], q[143], q[145], q[147], q[148], q[149], q[150], q[151], q[152], q[153], q[155], q[156], q[157], q[158], q[159], q[160]], -264);
constraint int_lin_le([1, 1, 1, -4, 3, 3, 2, 1, -1, 2, -5, 2, -2, 3, 1, -1, 1, -3, 1, -4, 1, -1, 3, -4, -4, 5, 3, 1, -2, 2, 2, -1, -5, 5, 1, 5, 2, -1, 1, 3, -2, 2, -1, 1, 2, 5, 4, 5, 5, 1, 1, 4, 1, -2, -4, -3, 2, 1, -2, 4, -4, -5, -3, 1, 1, -2, -4, 5, 4, -4, -1, -2, 1, -1, -3, -5, 1, 2, 3, 3, 2, -4, -3, 2, 1, 4, -3, 1, 3, 1, 3, 5, 5, 5, -5, 1, 2, 1, -4, 4], [q[1], q[2], q[4], q[5], q[9], q[10], q[11], q[13], q[14], q[15], q[16], q[18], q[19], q[20], q[23], q[24], q[26], q[27], q[30], q[31], q[34], q[35], q[36], q[37], q[38], q[39], q[41], q[45], q[47], q[48], q[49], q[51], q[52], q[53], q[54], q[56], q[59], q[61], q[63], q[64], q[67], q[68], q[70], q[71], q[77], q[78], q[79], q[80], q[81], q[83], q[84], q[86], q[87], q[89], q[90], q[91], q[94], q[96], q[97], q[98], q[100], q[101], q[106], q[109], q[111], q[112], q[113], q[116], q[117], q[119], q[120], q[122], q[123], q[124], q[126], q[127], q[128], q[129], q[130], q[133], q[135], q[138], q[139], q[140], q[141], q[142], q[143], q[144], q[145], q[146], q[147], q[151], q[152], q[153], q[154], q[155], q[157], q[158], q[159], q[160]], 336);
constraint int_lin_le([2, -2, 3, 5, 4, -1, 1, 1, -5, 1, -1, 5, 1, 5, -1, -2, -1, 3, -4, -4, -4, 3, 3, -5, 3, -1, -1, -3, 2, 4, -5, -2, 3, -1, -4, -1, -1, -2, -5, 1, 5, 4, 2, -3, -1, 5, 4, -2, -3, -1, 2, -1, -1, -1, -1, 1, 4, 2, -1, 5, 3, 5, 3, -2, 1, -2, 5, 1, 2, -1, 1, -3, 3, -4, -3, -1, -4, -5, 1, -3, 1, -1, -1, 5, -4, 4, -3, -2, -1, -4, 1, -2, 2, 2, 1, 1, -5, -3, 3, 5], [q[1], q[2], q[4], q[5], q[8], q[10], q[11], q[14], q[15], q[16], q[17], q[18], q[19], q[20], q[21], q[22], q[23], q[24], q[26], q[28], q[29], q[30], q[31], q[32], q[33], q[35], q[36], q[38], q[40], q[41], q[42], q[44], q[46], q[47], q[48], q[49], q[50], q[52], q[56], q[58], q[60], q[62], q[63], q[64], q[65], q[67], q[70], q[71], q[72], q[74], q[77], q[78], q[79], q[80], q[84], q[87], q[88], q[89], q[91], q[92], q[93], q[94], q[95], q[99], q[101], q[104], q[106], q[108], q[109], q[111], q[112], q[116], q[119], q[120], q[122], q[123], q[126], q[127], q[129], q[130], q[131], q[133], q[134], q[135], q[136], q[137], q[138], q[140], q[142], q[143], q[144], q[145], q[146], q[147], q[148], q[149], q[150], q[151], q[152], q[160]], -55);
constraint int_lin_le([3, 3, 4, 2, -5, -3, -4, 5, 1, 1, 3, -5, -1, 5, 3, -3, -1, -2, 5, 5, 4, -1, -1, -3, -3, -3, -3, -2, 2, -4, 5, -2, -1, -5, -1, -1, -1, 2, 2, 2, -5, 1, -3, -4, -3, 3, 2, 4, 2, -2, 1, 3, -2, 3, -5, 1, -3, 2, 3, 4, 1, -1, 4, 2, 1, -1, -3, 4, -4, -1, -2, -2, -2, 2, 2, 1, 1, -1, 3, -1, -2, -3, -1, 2, -3, 5, -2, -4, -5, 3, -2, -5, -4, -2, -5, 5, 1, 4, -2, -1], [q[1], q[4], q[6], q[7], q[9], q[16], q[17], q[18], q[21], q[22], q[24], q[25], q[26], q[29], q[30], q[31], q[32], q[33], q[34], q[35], q[36], q[37], q[39], q[40], q[41], q[42], q[43], q[45], q[47], q[48], q[49], q[51], q[52], q[53], q[54], q[55], q[58], q[59], q[60], q[61], q[64], q[65], q[68], q[69], q[70], q[71], q[73], q[74], q[77], q[78], q[79], q[80], q[81], q[82], q[87], q[89], q[91], q[93], q[94], q[96], q[97], q[98], q[101], q[102], q[103], q[107], q[109], q[113], q[114], q[115], q[116], q[118], q[119], q[120], q[121], q[122], q[123], q[125], q[127], q[132], q[133], q[134], q[135], q[137], q[138], q[140], q[141], q[143], q[144], q[145], q[147], q[148], q[149], q[150], q[152], q[153], q[154], q[155], q[156], q[159]], -80);
constraint int_lin_le([3, 4, -5, -1, -2, 5, -1, -3, 3, 3, -5, 4, 4, 5, -3, -3, -3, -1, 4, -5, -4, 2, -3, 2, -1, -3, -4, 1, 2, 5, 1, 5, -3, 5, 4, 3, -1, 5, 2, -4, 2, 3, -2, -4, 4, -3, 1, -4, 2, -5, -1, 5, 3, 1, 4, -3, 5, -5, 1, 2, -1, 4, -3, 3, 1, -2, 4, 1, 5, -4, 3, -1, -1, -2, -2, 5, -5, 2, -1, -2, 4, 3, -1, -1, -1, -4, 1, -1, -4, -4, 2, 1, -2, 1, 4, 2, 3, 5, 5, -5], [q[3], q[4], q[5], q[8], q[10], q[11], q[14], q[15], q[16], q[17], q[18], q[19], q[20], q[22], q[23], q[24], q[25], q[26], q[28], q[30], q[31], q[33], q[35], q[38], q[40], q[41], q[43], q[45], q[46], q[47], q[48], q[50], q[51], q[52], q[53], q[54], q[56], q[58], q[60], q[61], q[62], q[64], q[66], q[68], q[70], q[73], q[74], q[76], q[77], q[78], q[79], q[80], q[81], q[83], q[84], q[85], q[86], q[91], q[92], q[97], q[98], q[100], q[101], q[102], q[103], q[105], q[107], q[108], q[111], q[112], q[113], q[114], q[115], q[116], q[117], q[118], q[119], q[121], q[123], q[125], q[127], q[128], q[130], q[132], q[133], q[135], q[137], q[141], q[144], q[146], q[148], q[149], q[152], q[153], q[154], q[155], q[156], q[157], q[158], q[160]], 82);
constraint int_lin_le([4, -4, 1, 2, -2, -1, 2, -3, 2, 1, 1, 4, 4, 1, 2, -5, -1, -1, -5, 3, -5, -3, -2, -2, -4, 1, 3, 3, 5, -5, 4, 3, 2, -2, -1, -3, 1, 3, -4, 2, -1, 1, 2, 3, -5, -4, -3, 4, -5, -2, 5, 3, -1, 2, 5, 1, -3, 1, -5, 4, -3, 1, 5, 1, -1, -3, -5, -2, -1, 5, 2, -1, -1, 2, -4, 3, 1, -3, -3, -3, 4, 3, 3, 1, 2, 5, -5, -3, -1, -1, 1, 3, 2, 2, -2, -5, 4, -3, -1, 5], [q[1], q[2], q[6], q[8], q[11], q[12], q[13], q[14], q[15], q[17], q[19], q[20], q[22], q[23], q[24], q[25], q[26], q[28], q[29], q[30], q[31], q[33], q[34], q[35], q[36], q[37], q[38], q[39], q[42], q[43], q[44], q[45], q[47], q[48], q[49], q[55], q[56], q[58], q[60], q[61], q[63], q[64], q[65], q[66], q[67], q[69], q[70], q[71], q[72], q[74], q[77], q[79], q[83], q[84], q[85], q[86], q[88], q[89], q[90], q[91], q[92], q[94], q[99], q[101], q[103], q[108], q[109], q[110], q[112], q[114], q[115], q[117], q[118], q[119], q[122], q[123], q[127], q[128], q[129], q[130], q[132], q[134], q[135], q[137], q[138], q[140], q[141], q[142], q[144], q[145], q[149], q[150], q[151], q[152], q[153], q[154], q[156], q[157], q[158], q[159]], -18);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
