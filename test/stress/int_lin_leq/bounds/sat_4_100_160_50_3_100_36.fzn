predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..160] of var 1..50: q :: output_array([1..160]);
constraint int_eq(36, q[26]);
constraint int_eq(44, q[6]);
constraint int_eq(50, q[32]);
constraint int_lin_le([-87, 7, -82, 49, 25, 91, 85, 28, -39, 43, -33, 83, -75, -92, -62, -80, 9, 32, -44, -88, 43, -80, -95, -37, -42, -1, 24, 76, 47, -62, 86, 73, 15, -24, -69, 11, -33, -78, -96, 28, 100, 85, -52, 28, 70, -23, 23, -46, -91, -22, -67, -72, -98, 30, -2, -73, 66, -5, 82, 11, -51, -91, 44, 23, -92, -59, 8, -92, -33, -74, 10, 59, 82, 25, 61, -14, 23, -57, 40, -97, -99, 53, -81, -70, 11, -46, 98, 16, 34, 76, -55, -21, -86, 91, 52, 8, 66, -44, 22, -21], [q[1], q[2], q[3], q[4], q[10], q[12], q[13], q[14], q[16], q[17], q[18], q[20], q[21], q[23], q[24], q[25], q[27], q[31], q[35], q[36], q[37], q[38], q[39], q[41], q[42], q[43], q[44], q[46], q[50], q[51], q[54], q[55], q[57], q[58], q[59], q[61], q[62], q[64], q[65], q[68], q[69], q[70], q[72], q[75], q[76], q[77], q[78], q[79], q[80], q[81], q[83], q[84], q[85], q[86], q[88], q[89], q[91], q[92], q[93], q[97], q[98], q[99], q[100], q[101], q[102], q[103], q[105], q[106], q[107], q[109], q[110], q[111], q[112], q[113], q[114], q[115], q[117], q[118], q[122], q[128], q[132], q[133], q[134], q[135], q[137], q[138], q[139], q[143], q[145], q[146], q[148], q[149], q[150], q[151], q[154], q[155], q[156], q[157], q[159], q[160]], -14945);
constraint int_lin_le([-71, 67, -23, -13, 100, -76, 73, -63, 30, 41, 48, 45, 62, 51, -66, 27, -43, -24, -11, -82, -32, -59, -45, -8, 95, -55, -100, 34, 86, 17, 57, -89, -9, 10, -59, 25, -33, 87, -79, 16, -87, 37, 44, 49, 7, 17, -6, -13, 23, 61, 62, 4, -47, 100, -94, -62, -71, 34, 44, -74, -32, -37, -10, -80, 79, -100, 88, -3, 29, 68, 4, -13, 94, 59, -65, 22, -79, 43, 77, -3, -82, 52, 23, -37, -16, -29, -55, 75, 97, 61, -49, 56, -85, -34, 16, 62, 91, 16, -53, 85], [q[4], q[7], q[9], q[11], q[14], q[15], q[16], q[17], q[18], q[21], q[23], q[24], q[25], q[27], q[29], q[30], q[31], q[33], q[35], q[36], q[37], q[39], q[40], q[41], q[43], q[47], q[48], q[49], q[50], q[51], q[52], q[53], q[54], q[57], q[58], q[59], q[60], q[61], q[64], q[65], q[66], q[68], q[69], q[71], q[72], q[73], q[74], q[75], q[76], q[80], q[82], q[83], q[84], q[85], q[86], q[87], q[91], q[92], q[93], q[94], q[96], q[97], q[99], q[100], q[101], q[102], q[103], q[104], q[105], q[106], q[107], q[108], q[110], q[112], q[114], q[116], q[117], q[118], q[119], q[120], q[121], q[122], q[123], q[124], q[125], q[126], q[128], q[129], q[130], q[134], q[138], q[142], q[145], q[147], q[148], q[149], q[150], q[151], q[152], q[156]], -1550);
constraint int_lin_le([6, 84, -81, -4, -90, 61, -7, 28, -1, -82, 78, -43, 46, -84, 90, -93, -21, -2, -94, 100, -84, 99, -67, 72, 15, -100, -81, -83, -10, -99, 86, 42, -36, 53, 86, 93, -98, 12, 40, 62, -16, -80, 81, 59, -20, -60, 84, -83, -71, -86, 24, -28, 17, -82, 88, -4, -8, 26, 69, 7, -59, 49, -19, -94, -96, 45, 8, -33, -12, -47, -99, -77, -49, 87, 26, -60, 8, 4, -20, -92, 26, -24, 23, 86, -13, 74, -22, -45, 5, -41, 89, -10, 38, -10, 46, 84, -4, 4, -9, 28], [q[1], q[2], q[5], q[7], q[8], q[11], q[12], q[13], q[14], q[16], q[17], q[19], q[20], q[21], q[22], q[24], q[25], q[27], q[28], q[29], q[30], q[33], q[34], q[35], q[39], q[40], q[41], q[43], q[44], q[45], q[46], q[48], q[49], q[50], q[51], q[52], q[55], q[57], q[58], q[59], q[60], q[62], q[63], q[65], q[66], q[68], q[70], q[71], q[72], q[76], q[77], q[78], q[81], q[82], q[87], q[89], q[91], q[92], q[93], q[94], q[95], q[97], q[98], q[101], q[106], q[107], q[109], q[110], q[112], q[113], q[114], q[119], q[120], q[122], q[123], q[124], q[125], q[126], q[127], q[128], q[129], q[130], q[131], q[134], q[135], q[136], q[138], q[140], q[143], q[144], q[145], q[146], q[147], q[148], q[150], q[151], q[153], q[156], q[158], q[160]], -19714);
constraint int_lin_le([82, -97, -1, -9, 69, -58, 23, -14, -67, -52, 10, -95, 91, 74, -97, 12, -99, -81, 21, 5, -48, -26, 27, 95, -99, -30, -17, -18, -94, 79, 78, -65, 90, -59, -97, -13, 92, -84, -70, -61, -48, 66, 87, 50, 11, -66, -19, -75, -46, 16, 58, -96, 30, -34, 66, -2, 49, 77, -40, 86, -93, 81, 43, -73, -59, 42, -83, 56, -81, 1, 100, -94, -71, 47, -68, -45, 27, 1, 60, -61, -1, 91, -77, 60, 88, 72, -74, 79, 99, -4, 69, -77, -14, 22, 78, -98, 1, -2, 51, 16], [q[3], q[4], q[5], q[7], q[8], q[9], q[10], q[12], q[14], q[15], q[18], q[20], q[22], q[23], q[25], q[27], q[28], q[35], q[36], q[37], q[38], q[40], q[42], q[44], q[45], q[46], q[47], q[49], q[50], q[52], q[53], q[55], q[56], q[57], q[58], q[59], q[60], q[61], q[63], q[66], q[67], q[69], q[71], q[72], q[73], q[74], q[76], q[77], q[78], q[79], q[80], q[84], q[86], q[89], q[90], q[91], q[92], q[93], q[95], q[96], q[97], q[99], q[101], q[102], q[103], q[104], q[105], q[108], q[109], q[110], q[112], q[113], q[115], q[116], q[119], q[120], q[121], q[125], q[127], q[129], q[130], q[131], q[133], q[135], q[136], q[137], q[140], q[141], q[142], q[144], q[146], q[147], q[148], q[149], q[150], q[152], q[153], q[154], q[157], q[158]], -6330);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
