predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..160] of var 1..10: q :: output_array([1..160]);
constraint int_lin_le([-10, -6, 8, 7, -7, 1, 5, -2, -3, -3, -5, -9, 2, 8, -7, 3, -5, 2, 9, 4, 2, -1, 4, 9, 10], [q[4], q[8], q[12], q[26], q[28], q[32], q[47], q[51], q[55], q[62], q[63], q[86], q[87], q[91], q[93], q[103], q[105], q[108], q[110], q[120], q[131], q[139], q[141], q[146], q[153]], 209);
constraint int_lin_le([-10, -1, -7, -2, -9, -9, 5, -2, 5, 9, -1, -5, -3, 10, 1, -10, -3, 1, -8, -3, -4, -8, -10, -7, 2], [q[3], q[4], q[5], q[12], q[14], q[22], q[23], q[37], q[38], q[41], q[48], q[52], q[59], q[65], q[83], q[92], q[96], q[103], q[105], q[127], q[129], q[131], q[142], q[144], q[153]], -557);
constraint int_lin_le([-10, 1, 5, 10, 5, 5, 10, 7, -8, -6, 2, 8, 6, 3, -3, 7, 4, 10, 8, -6, 10, 2, -9, 1, -4], [q[1], q[3], q[5], q[24], q[26], q[27], q[37], q[39], q[41], q[42], q[47], q[49], q[62], q[63], q[65], q[90], q[110], q[111], q[117], q[122], q[124], q[138], q[140], q[141], q[154]], 338);
constraint int_lin_le([-8, -6, -7, 7, -2, 7, 4, 8, -7, 6, 2, -3, 9, 1, -2, -2, -8, 8, 6, -2, 4, 5, -6, -6, -4], [q[1], q[3], q[13], q[25], q[27], q[29], q[36], q[46], q[60], q[66], q[69], q[73], q[77], q[79], q[83], q[96], q[99], q[100], q[106], q[125], q[129], q[134], q[135], q[143], q[157]], 21);
constraint int_lin_le([-8, -3, 3, 2, 9, 9, -6, 6, -5, 3, -9, -1, -4, 7, -2, 1, -2, -9, -5, -3, -1, 5, 6, 8, -4], [q[2], q[4], q[9], q[13], q[14], q[16], q[19], q[41], q[43], q[46], q[48], q[52], q[57], q[64], q[67], q[87], q[90], q[93], q[96], q[97], q[103], q[105], q[123], q[132], q[153]], -18);
constraint int_lin_le([-8, 2, -1, -9, 1, -1, -8, 7, -1, 1, -7, 4, 7, 4, -9, -9, 4, 1, 2, -2, -6, 10, 7, 9, 8], [q[1], q[16], q[18], q[21], q[25], q[26], q[44], q[49], q[58], q[60], q[67], q[69], q[74], q[77], q[89], q[98], q[101], q[108], q[112], q[114], q[123], q[136], q[141], q[145], q[147]], 109);
constraint int_lin_le([-7, -6, -10, -5, -8, -7, -8, -1, -6, -1, 1, -4, -2, -9, 9, -7, -7, -9, 8, -10, -8, 10, 5, -9, 5], [q[11], q[12], q[13], q[14], q[18], q[22], q[27], q[35], q[44], q[45], q[48], q[49], q[54], q[58], q[66], q[88], q[99], q[101], q[105], q[111], q[128], q[131], q[134], q[143], q[144]], -391);
constraint int_lin_le([-7, -5, 9, -2, -7, 6, 3, 2, -7, -7, 1, 10, 5, 8, 3, -8, -4, -3, 5, 2, -5, 2, 6, 5, -5], [q[16], q[25], q[36], q[47], q[56], q[59], q[63], q[66], q[68], q[70], q[71], q[73], q[82], q[84], q[89], q[90], q[115], q[126], q[128], q[130], q[136], q[143], q[144], q[145], q[154]], 131);
constraint int_lin_le([-7, -5, 10, 9, -3, -8, 9, -4, -10, -7, 5, -9, 4, -6, -3, -3, 2, 1, 1, -4, -4, 5, 6, 10, -9], [q[5], q[15], q[20], q[24], q[41], q[44], q[49], q[56], q[58], q[68], q[75], q[82], q[94], q[102], q[123], q[124], q[130], q[132], q[138], q[142], q[147], q[149], q[154], q[159], q[160]], -148);
constraint int_lin_le([-7, 5, -2, -9, 7, 3, -2, 5, -2, -4, -7, -7, -1, 9, 8, -9, 1, 8, 2, -1, -4, -1, -2, 4, 9], [q[4], q[7], q[9], q[11], q[15], q[16], q[22], q[53], q[67], q[75], q[77], q[79], q[82], q[85], q[88], q[102], q[104], q[112], q[115], q[121], q[129], q[132], q[133], q[149], q[157]], 45);
constraint int_lin_le([-7, 9, 6, 9, -6, 3, -4, 5, -9, -4, -2, 7, -7, 9, -2, 9, -1, -6, 6, 5, -2, 1, 4, -8, -6], [q[13], q[15], q[19], q[27], q[33], q[39], q[53], q[73], q[79], q[80], q[82], q[88], q[91], q[97], q[102], q[110], q[111], q[115], q[118], q[125], q[128], q[143], q[146], q[151], q[157]], -8);
constraint int_lin_le([-5, -5, -5, 1, 2, 6, 5, 8, -5, 3, 5, -5, 10, -2, 2, -6, -5, 10, 5, -7, 6, 9, -1, 7, 3], [q[7], q[10], q[21], q[31], q[40], q[45], q[48], q[54], q[57], q[61], q[65], q[70], q[78], q[80], q[81], q[89], q[97], q[109], q[115], q[116], q[121], q[127], q[150], q[152], q[158]], 168);
constraint int_lin_le([-5, 8, 4, 1, -3, -1, 3, 3, 2, -8, -3, -3, 5, -4, 10, 10, 9, 8, 10, 9, 1, -2, 3, -1, -5], [q[2], q[8], q[10], q[19], q[32], q[44], q[50], q[60], q[71], q[72], q[74], q[78], q[81], q[86], q[89], q[101], q[103], q[113], q[119], q[131], q[142], q[152], q[153], q[158], q[159]], 294);
constraint int_lin_le([-4, 5, 5, 1, 4, -6, 5, 1, 6, 7, 10, 4, 2, 8, 1, 10, -8, -6, -8, -7, 7, -9, -9, 7, 2], [q[2], q[6], q[9], q[14], q[16], q[19], q[38], q[42], q[43], q[50], q[52], q[64], q[72], q[74], q[88], q[98], q[101], q[104], q[113], q[114], q[119], q[144], q[145], q[155], q[156]], 158);
constraint int_lin_le([-3, 1, 6, -7, -1, -4, 7, -5, 4, 6, 3, 2, -2, -9, -9, -6, 3, -2, 7, -8, -1, -10, 3, -7, -6], [q[8], q[12], q[21], q[25], q[27], q[33], q[37], q[42], q[50], q[55], q[61], q[69], q[71], q[80], q[81], q[88], q[89], q[102], q[117], q[119], q[134], q[143], q[151], q[158], q[160]], -117);
constraint int_lin_le([-3, 9, -4, 6, -8, 1, -8, -3, -6, -2, -10, 7, -7, 6, 6, -3, 8, 8, -8, 4, -2, -8, 1, -4, -5], [q[6], q[12], q[20], q[28], q[34], q[36], q[38], q[46], q[56], q[58], q[68], q[69], q[87], q[93], q[96], q[98], q[100], q[105], q[108], q[128], q[137], q[145], q[147], q[150], q[151]], -45);
constraint int_lin_le([-3, 10, 10, -3, 9, 6, -8, 9, -8, 3, -4, -1, 10, 2, 3, 8, -5, 4, 3, -6, -5, -9, -7, -2, -5], [q[11], q[17], q[18], q[22], q[33], q[34], q[37], q[39], q[53], q[59], q[71], q[76], q[84], q[90], q[92], q[112], q[117], q[122], q[126], q[128], q[133], q[136], q[140], q[148], q[151]], -38);
constraint int_lin_le([-2, -5, -8, -10, -10, 9, 5, 8, 9, -9, -4, 9, 3, -4, 1, 8, -2, 1, 1, 10, -1, 7, 3, -6, -1], [q[9], q[13], q[18], q[20], q[21], q[22], q[30], q[36], q[49], q[54], q[77], q[83], q[98], q[107], q[110], q[112], q[131], q[135], q[136], q[138], q[146], q[152], q[156], q[157], q[158]], 196);
constraint int_lin_le([1, 8, -1, -4, -9, -7, 2, 8, -6, -4, 9, 7, -6, -2, 6, 8, 7, -10, 3, 2, -7, 6, -6, 10, 8], [q[3], q[9], q[13], q[23], q[26], q[27], q[31], q[37], q[54], q[61], q[74], q[77], q[79], q[81], q[88], q[96], q[99], q[102], q[107], q[118], q[129], q[139], q[147], q[150], q[160]], 6);
constraint int_lin_le([1, 8, -1, 1, 3, 9, 5, -4, 1, 9, 5, 4, -9, -7, 7, -4, 9, 6, -1, 1, 6, 1, 9, 9, 4], [q[2], q[3], q[10], q[17], q[25], q[26], q[32], q[42], q[50], q[56], q[58], q[59], q[63], q[67], q[79], q[90], q[95], q[108], q[113], q[132], q[139], q[142], q[143], q[147], q[155]], 456);
constraint int_lin_le([2, -10, -6, 6, 3, -3, -6, 3, -10, -1, 10, -1, 2, -4, 2, 9, -6, -6, 1, 3, 8, 6, -1, 10, -9], [q[5], q[8], q[9], q[24], q[26], q[29], q[39], q[40], q[41], q[46], q[53], q[59], q[61], q[65], q[71], q[72], q[80], q[83], q[90], q[92], q[93], q[97], q[130], q[137], q[159]], 235);
constraint int_lin_le([2, -2, 4, -8, -1, 1, 1, -8, 1, -6, -9, -6, 6, 6, -9, -1, 7, 8, 10, -8, 1, 7, -1, 1, 6], [q[24], q[28], q[31], q[37], q[46], q[47], q[48], q[51], q[55], q[60], q[62], q[73], q[89], q[97], q[100], q[102], q[105], q[111], q[115], q[123], q[124], q[140], q[145], q[150], q[151]], 47);
constraint int_lin_le([2, -2, 6, -6, -5, 8, -6, -3, 3, 3, -6, -7, 1, -8, 10, 6, 1, 10, 1, 9, 2, 2, 1, 1, 3], [q[4], q[10], q[20], q[29], q[35], q[38], q[40], q[43], q[49], q[50], q[51], q[58], q[62], q[65], q[67], q[69], q[75], q[76], q[106], q[109], q[119], q[120], q[137], q[141], q[153]], 187);
constraint int_lin_le([2, 4, -5, 6, -5, 1, -9, 6, 7, -2, -6, -7, -7, -8, -9, -5, -3, 2, 9, 7, -7, 6, -7, -5, 1], [q[1], q[10], q[16], q[31], q[32], q[34], q[50], q[62], q[75], q[76], q[77], q[78], q[81], q[84], q[85], q[109], q[116], q[120], q[121], q[124], q[133], q[148], q[153], q[156], q[157]], -245);
constraint int_lin_le([3, -7, 5, 5, -6, 2, -5, -5, -3, -6, 6, 4, 3, -8, -2, -5, 10, 10, 10, 4, 10, -9, -7, 1, 4], [q[6], q[7], q[11], q[15], q[33], q[38], q[40], q[41], q[53], q[64], q[75], q[81], q[96], q[99], q[103], q[109], q[114], q[119], q[122], q[126], q[128], q[129], q[133], q[137], q[149]], -37);
constraint int_lin_le([3, -4, 5, -8, 1, -7, -5, -1, 2, 7, -2, -9, -9, 7, 8, -8, 4, 2, -8, 3, -3, 10, 1, -7, -10], [q[6], q[43], q[52], q[57], q[63], q[67], q[68], q[74], q[79], q[82], q[96], q[98], q[107], q[110], q[112], q[113], q[118], q[125], q[126], q[127], q[139], q[140], q[141], q[145], q[152]], -23);
constraint int_lin_le([5, -10, -4, -5, -4, 10, -2, 4, 6, 4, 1, -8, 10, -5, 2, -1, -1, -3, -6, 3, -1, -3, 3, -7, 5], [q[6], q[20], q[24], q[26], q[51], q[56], q[58], q[60], q[63], q[65], q[77], q[83], q[84], q[95], q[104], q[106], q[107], q[109], q[121], q[128], q[129], q[142], q[148], q[154], q[159]], 28);
constraint int_lin_le([5, -9, -1, -6, 5, -10, 3, 2, -5, 4, 6, 1, 4, -6, -6, 5, -1, 1, 5, -2, 4, -8, 8, -9, 6], [q[14], q[17], q[18], q[21], q[23], q[29], q[30], q[45], q[52], q[61], q[70], q[73], q[76], q[84], q[91], q[92], q[95], q[106], q[109], q[125], q[134], q[135], q[139], q[144], q[156]], 36);
constraint int_lin_le([5, -6, 9, -4, -1, 8, -2, 4, 2, 6, -6, -6, -7, 3, 10, -3, 5, -8, -3, 7, 9, 1, 2, 7, -5], [q[1], q[11], q[15], q[18], q[23], q[30], q[32], q[35], q[40], q[53], q[72], q[74], q[78], q[85], q[94], q[98], q[100], q[111], q[115], q[118], q[131], q[135], q[149], q[152], q[155]], 224);
constraint int_lin_le([5, 2, 6, -1, 3, -3, 4, -1, -1, 10, 10, 1, -9, -4, -2, 10, -5, 10, -5, 3, 6, -5, -9, -2, -1], [q[7], q[8], q[11], q[20], q[32], q[42], q[43], q[45], q[84], q[85], q[86], q[104], q[106], q[109], q[113], q[121], q[122], q[130], q[133], q[135], q[148], q[150], q[154], q[155], q[158]], 150);
constraint int_lin_le([5, 3, 6, -7, -1, 10, -5, 3, -8, -1, 7, -5, 1, 2, -3, -2, -8, 7, 5, 9, -9, 9, -4, -7, -4], [q[31], q[35], q[40], q[43], q[48], q[51], q[54], q[55], q[57], q[59], q[64], q[66], q[94], q[99], q[107], q[114], q[116], q[118], q[120], q[123], q[126], q[127], q[136], q[155], q[160]], 79);
constraint int_lin_le([5, 10, 5, 9, -2, 6, -6, 1, -7, -6, 3, 7, 9, -8, -1, -9, 2, 4, 7, -9, 3, 9, -3, -10, -2], [q[5], q[10], q[28], q[31], q[34], q[36], q[47], q[54], q[62], q[66], q[86], q[112], q[113], q[114], q[116], q[120], q[126], q[130], q[133], q[136], q[137], q[138], q[141], q[147], q[157]], 259);
constraint int_lin_le([6, 3, -8, 1, -5, -7, 8, -7, -5, 8, 6, -1, 10, -1, -8, -1, 5, 7, 1, -10, 10, -2, -1, -5, -1], [q[1], q[35], q[39], q[45], q[57], q[61], q[66], q[72], q[76], q[78], q[80], q[86], q[87], q[88], q[91], q[94], q[101], q[116], q[118], q[121], q[134], q[141], q[144], q[159], q[160]], 49);
constraint int_lin_le([6, 10, -4, -1, 3, -6, -8, 3, 5, 5, -10, -7, -1, 4, -5, -9, -3, 4, -9, -2, -2, -6, -2, 8, -10], [q[1], q[12], q[14], q[19], q[22], q[33], q[42], q[45], q[57], q[60], q[64], q[83], q[93], q[95], q[100], q[105], q[122], q[123], q[125], q[127], q[131], q[140], q[142], q[148], q[159]], -85);
constraint int_lin_le([8, -4, 2, -1, 9, -7, 10, -8, 1, 5, 4, -1, -1, 5, -9, 8, 1, 4, -6, -10, 10, -5, -9, -4, -5], [q[2], q[7], q[15], q[18], q[24], q[28], q[39], q[41], q[46], q[48], q[78], q[85], q[86], q[97], q[98], q[103], q[110], q[111], q[134], q[138], q[146], q[152], q[155], q[156], q[158]], 45);
constraint int_lin_le([8, -1, 2, -1, 5, -1, 5, 9, -8, 5, -1, -7, 9, -4, -8, 1, -10, 2, 9, 1, -3, 1, -8, 2, -4], [q[5], q[6], q[8], q[11], q[30], q[34], q[44], q[52], q[53], q[55], q[72], q[87], q[91], q[92], q[101], q[104], q[112], q[113], q[116], q[121], q[132], q[133], q[149], q[151], q[157]], 52);
constraint int_lin_le([8, 1, 6, -9, 2, -8, -4, -2, 7, 4, -10, 9, -7, 6, 10, 2, 1, 2, -1, -5, -1, -3, 8, 5, 8], [q[3], q[17], q[20], q[23], q[33], q[37], q[47], q[51], q[55], q[56], q[60], q[69], q[87], q[102], q[103], q[106], q[119], q[122], q[132], q[136], q[142], q[146], q[147], q[150], q[155]], 229);
constraint int_lin_le([8, 6, 8, -6, -1, 6, 1, -8, 8, 8, 8, -7, -3, -5, -6, -7, 7, -8, 5, 9, -1, 7, -1, -10, 5], [q[4], q[5], q[8], q[12], q[14], q[27], q[29], q[34], q[43], q[44], q[52], q[65], q[68], q[71], q[82], q[84], q[92], q[93], q[106], q[117], q[120], q[127], q[148], q[153], q[154]], 113);
constraint int_lin_le([8, 10, 2, -8, 10, 4, -2, -3, -8, -5, 8, -8, -9, 7, 1, 3, -10, -10, -9, 7, -10, -3, 2, -5, 2], [q[7], q[15], q[21], q[25], q[28], q[30], q[36], q[38], q[42], q[64], q[86], q[91], q[94], q[95], q[100], q[114], q[115], q[117], q[129], q[135], q[138], q[149], q[154], q[158], q[160]], -342);
constraint int_lin_le([10, 1, 5, -5, -8, -9, 6, 1, -4, -1, -10, 8, -4, -3, 8, -3, -2, -5, 7, 9, -2, -5, -1, 3, 8], [q[3], q[7], q[17], q[29], q[38], q[39], q[44], q[45], q[49], q[59], q[70], q[75], q[76], q[91], q[99], q[101], q[108], q[110], q[122], q[125], q[139], q[144], q[145], q[146], q[156]], -12);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
