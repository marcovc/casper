predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..100] of var 1..50: q :: output_array([1..100]);
constraint int_lin_le([-9, 5, 3, -3, 1, -8, 5, -2, -7, -8, 4, -5, 1, 7, 8, 6, 6, 6, -9, 10, 6, -2, -2, -1, 7], [q[2], q[7], q[10], q[11], q[12], q[17], q[18], q[21], q[22], q[23], q[24], q[25], q[36], q[38], q[40], q[42], q[59], q[72], q[75], q[78], q[80], q[81], q[83], q[92], q[99]], 319);
constraint int_lin_le([-7, -3, 1, -8, 5, -1, 7, -6, 1, -4, 5, -8, -5, 1, 3, 3, -6, 2, -2, -2, 4, 10, -4, 1, 9], [q[1], q[6], q[9], q[13], q[15], q[26], q[28], q[29], q[30], q[31], q[32], q[44], q[48], q[49], q[54], q[62], q[67], q[73], q[76], q[79], q[93], q[94], q[95], q[96], q[100]], -378);
constraint int_lin_le([-6, -8, 5, 9, 7, -2, 10, -6, 4, 6, -2, -2, -3, -7, -1, -2, 6, 10, 10, 6, -5, -3, 8, 10, 9], [q[5], q[7], q[14], q[18], q[26], q[30], q[35], q[39], q[48], q[49], q[50], q[52], q[53], q[55], q[57], q[60], q[61], q[78], q[83], q[86], q[88], q[89], q[95], q[98], q[100]], 2340);
constraint int_lin_le([-5, -1, -3, -5, 2, -4, -1, 9, 7, -9, 10, -8, -5, 2, 7, -1, 8, 1, 1, 4, -3, 3, 5, -8, 6], [q[2], q[4], q[8], q[12], q[18], q[28], q[32], q[35], q[36], q[37], q[40], q[42], q[45], q[50], q[51], q[61], q[67], q[69], q[75], q[79], q[83], q[84], q[91], q[93], q[98]], 640);
constraint int_lin_le([-3, 1, -4, -8, 2, -3, 8, 7, 8, -10, -9, -9, -5, 3, -9, 10, 3, 10, -9, -3, 9, -1, 3, 5, -5], [q[5], q[8], q[16], q[19], q[20], q[33], q[35], q[37], q[39], q[47], q[50], q[51], q[53], q[55], q[57], q[58], q[61], q[63], q[66], q[69], q[84], q[89], q[91], q[97], q[98]], -946);
constraint int_lin_le([-3, 5, -1, 3, 4, -10, 9, 4, -6, -2, -5, 2, 4, -6, 8, -5, 8, -8, -1, -3, -5, -4, -4, 8, 6], [q[1], q[2], q[4], q[6], q[8], q[9], q[10], q[16], q[20], q[21], q[24], q[29], q[31], q[34], q[38], q[42], q[43], q[47], q[66], q[70], q[72], q[74], q[81], q[87], q[92]], 177);
constraint int_lin_le([-2, -9, -1, -4, -1, 4, -7, -6, -6, 3, 5, 4, -4, -3, 3, 8, -1, 7, -7, -5, -2, 4, -4, 3, -9], [q[5], q[6], q[7], q[14], q[15], q[17], q[22], q[31], q[39], q[41], q[43], q[44], q[52], q[53], q[65], q[68], q[70], q[76], q[78], q[80], q[86], q[90], q[95], q[97], q[99]], -902);
constraint int_lin_le([1, -1, 8, 7, -10, 4, -4, -9, -9, -7, -3, -2, -1, -10, 10, 3, -10, -3, 1, -8, 9, 5, -6, 4, 4], [q[1], q[9], q[10], q[19], q[20], q[21], q[24], q[26], q[27], q[29], q[33], q[34], q[46], q[47], q[54], q[55], q[56], q[57], q[58], q[59], q[63], q[71], q[73], q[74], q[82]], -471);
constraint int_lin_le([1, 3, -10, -6, 5, 6, 9, -8, -3, -10, -5, -3, 7, 5, 5, -4, 6, 3, -4, 1, -10, -3, 8, -4, -4], [q[3], q[11], q[13], q[16], q[23], q[25], q[30], q[38], q[48], q[49], q[60], q[62], q[64], q[66], q[72], q[77], q[81], q[85], q[87], q[88], q[89], q[92], q[94], q[96], q[100]], -938);
constraint int_lin_le([6, 6, -2, 2, -6, 8, -7, -4, 4, -6, -6, 3, -5, 6, -8, -7, 8, 7, -10, -10, 6, 9, -1, 7, 9], [q[3], q[4], q[14], q[27], q[34], q[41], q[43], q[45], q[46], q[52], q[56], q[60], q[64], q[65], q[68], q[70], q[71], q[74], q[77], q[82], q[85], q[86], q[87], q[88], q[90]], 308);
constraint int_lin_le([10, 7, 6, 8, -7, 10, 8, 10, -5, -6, 5, -1, 7, -1, -7, 9, 8, 2, 7, 8, 5, -8, -6, -3, 7], [q[3], q[13], q[19], q[25], q[28], q[32], q[33], q[36], q[37], q[40], q[45], q[59], q[62], q[63], q[69], q[73], q[75], q[77], q[79], q[80], q[85], q[93], q[96], q[97], q[99]], 2280);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
