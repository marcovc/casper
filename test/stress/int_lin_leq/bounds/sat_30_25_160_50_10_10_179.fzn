predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..160] of var 1..50: q :: output_array([1..160]);
constraint int_lin_le([-9, -4, -3, -9, -4, -3, 7, -7, 8, 6, -10, -4, -2, -7, -9, 2, -3, -6, 8, 4, 2, 9, 3, 7, -5], [q[13], q[19], q[20], q[23], q[24], q[29], q[36], q[46], q[49], q[60], q[63], q[65], q[73], q[75], q[79], q[85], q[87], q[89], q[101], q[109], q[111], q[122], q[132], q[150], q[153]], -29);
constraint int_lin_le([-9, -1, -5, 9, 3, 2, -9, -6, 9, 1, 10, 9, -3, 2, -8, -2, -5, 2, -9, -8, 9, -1, -7, 3, -7], [q[4], q[10], q[16], q[28], q[33], q[37], q[38], q[43], q[44], q[59], q[62], q[75], q[78], q[89], q[93], q[96], q[97], q[103], q[114], q[118], q[127], q[128], q[133], q[134], q[145]], 350);
constraint int_lin_le([-9, -1, -1, 8, -10, 2, 7, 6, -1, -1, 4, -7, 7, -3, 1, -7, 2, -3, 2, -8, -7, 3, 10, 1, -7], [q[8], q[9], q[15], q[21], q[22], q[32], q[35], q[38], q[45], q[52], q[53], q[68], q[73], q[81], q[88], q[95], q[96], q[116], q[117], q[123], q[125], q[129], q[151], q[157], q[160]], -828);
constraint int_lin_le([-9, 3, -7, 9, 9, -5, 1, 7, -6, -7, 4, 8, -8, 7, -1, 3, -8, 6, -10, -3, 9, 7, 1, 2, 9], [q[3], q[11], q[17], q[19], q[44], q[46], q[49], q[50], q[51], q[59], q[65], q[66], q[74], q[75], q[79], q[86], q[89], q[93], q[103], q[107], q[115], q[145], q[148], q[155], q[157]], -318);
constraint int_lin_le([-8, -4, -1, 7, -1, -3, -9, -9, 8, -5, 6, 7, 5, 4, -1, 3, -7, 10, -1, -7, 5, 7, 3, 5, 1], [q[1], q[5], q[10], q[12], q[20], q[29], q[32], q[36], q[38], q[39], q[57], q[62], q[64], q[67], q[68], q[69], q[71], q[81], q[91], q[114], q[125], q[126], q[128], q[129], q[139]], 56);
constraint int_lin_le([-8, -4, 4, -3, -2, 3, 7, -10, 4, -3, -2, 10, -7, 3, 6, 6, 1, 7, 2, 3, -6, 10, -7, -6, 2], [q[13], q[14], q[24], q[27], q[29], q[33], q[42], q[52], q[56], q[67], q[68], q[72], q[81], q[88], q[101], q[113], q[114], q[124], q[127], q[137], q[149], q[151], q[153], q[158], q[159]], 520);
constraint int_lin_le([-7, -8, -10, 6, 10, -1, -3, -2, -8, -7, -2, -7, -7, -7, -2, 2, 8, -2, 1, 9, 9, -9, -3, -2, -3], [q[2], q[4], q[9], q[21], q[23], q[25], q[34], q[56], q[59], q[84], q[85], q[87], q[88], q[90], q[92], q[96], q[99], q[105], q[107], q[110], q[130], q[144], q[145], q[156], q[159]], -1060);
constraint int_lin_le([-7, 10, -5, 1, 2, -7, 10, -9, 10, 6, -6, -2, -1, 8, 6, 7, 9, 5, -1, -8, -4, 10, 9, 2, -2], [q[8], q[20], q[21], q[22], q[24], q[29], q[46], q[48], q[52], q[58], q[80], q[81], q[91], q[106], q[108], q[110], q[112], q[120], q[136], q[138], q[139], q[140], q[151], q[153], q[154]], 477);
constraint int_lin_le([-6, -3, 8, -4, 10, 3, -8, 1, -10, 6, -10, 3, -3, 2, -10, -6, -1, 8, 5, 10, -8, 1, -7, -8, -4], [q[4], q[5], q[7], q[15], q[18], q[23], q[28], q[37], q[38], q[40], q[41], q[53], q[54], q[60], q[71], q[77], q[83], q[84], q[95], q[102], q[104], q[117], q[126], q[139], q[156]], -607);
constraint int_lin_le([-6, 3, 8, -7, 1, 9, 10, -2, 1, 7, 8, 2, -1, -5, -8, 8, -5, 5, -6, -4, -1, -6, -9, 2, 4], [q[1], q[2], q[5], q[13], q[20], q[26], q[39], q[44], q[54], q[55], q[58], q[60], q[61], q[72], q[77], q[83], q[87], q[99], q[103], q[108], q[143], q[144], q[145], q[153], q[159]], -620);
constraint int_lin_le([-5, -10, 7, -3, -2, 3, 4, -2, -9, -8, -1, -10, -1, -8, 6, -1, 3, 4, -7, -6, 6, -1, 1, -9, -10], [q[1], q[4], q[9], q[21], q[35], q[42], q[48], q[51], q[55], q[74], q[78], q[84], q[88], q[91], q[96], q[99], q[102], q[116], q[120], q[130], q[144], q[146], q[152], q[156], q[160]], -1150);
constraint int_lin_le([-5, -8, 3, -3, 1, 7, 1, -4, -2, -3, -10, 6, 4, -6, 1, 1, -5, 2, 1, -8, 1, -1, 2, -9, -2], [q[1], q[6], q[8], q[31], q[35], q[36], q[45], q[48], q[57], q[58], q[69], q[70], q[82], q[94], q[99], q[116], q[118], q[119], q[120], q[121], q[123], q[129], q[132], q[134], q[160]], -956);
constraint int_lin_le([-5, 5, -5, 2, 8, 5, 9, -5, 5, 7, 4, 2, 2, -6, -6, -7, -2, 9, -1, 2, -3, -9, -2, -9, -10], [q[5], q[11], q[14], q[27], q[28], q[37], q[53], q[56], q[58], q[68], q[69], q[70], q[71], q[76], q[77], q[98], q[107], q[108], q[114], q[115], q[123], q[127], q[129], q[134], q[136]], -488);
constraint int_lin_le([-4, -3, -4, 10, 6, -2, 4, -1, 9, 6, 1, 6, -7, 4, 6, 5, 6, 10, 8, 1, -1, 1, 4, 1, 1], [q[7], q[12], q[18], q[19], q[23], q[27], q[39], q[41], q[65], q[66], q[70], q[79], q[87], q[94], q[98], q[107], q[113], q[115], q[121], q[122], q[124], q[126], q[129], q[142], q[160]], 1556);
constraint int_lin_le([-4, 4, 3, 1, -8, 5, -6, -3, 4, 5, 1, 1, 9, -2, 2, 9, -1, 8, 7, -7, 9, -7, -4, -5, -4], [q[1], q[2], q[25], q[45], q[47], q[49], q[50], q[54], q[57], q[63], q[74], q[83], q[84], q[88], q[99], q[105], q[111], q[116], q[119], q[125], q[131], q[137], q[141], q[144], q[149]], 456);
constraint int_lin_le([-4, 7, 9, -8, -9, 2, 4, 4, 7, 8, -10, -5, 10, 10, 3, -10, 7, 1, -3, -2, -6, 4, -6, 2, -4], [q[6], q[7], q[14], q[33], q[49], q[51], q[57], q[63], q[71], q[74], q[91], q[98], q[101], q[107], q[115], q[119], q[128], q[131], q[140], q[142], q[147], q[149], q[152], q[155], q[156]], 443);
constraint int_lin_le([-3, -1, -1, -1, -5, 1, -5, -1, -4, -4, 3, 5, 1, 6, 4, 2, 3, 2, -1, 2, -4, -8, -10, -1, -10], [q[3], q[6], q[9], q[14], q[15], q[40], q[42], q[51], q[53], q[56], q[60], q[67], q[68], q[71], q[77], q[86], q[92], q[109], q[117], q[130], q[147], q[150], q[155], q[156], q[159]], -526);
constraint int_lin_le([-2, -2, 3, -7, 7, 7, -4, 10, -4, 1, 3, 8, 4, -1, -5, -6, -2, 6, -7, -6, -3, -2, 7, -4, 5], [q[8], q[15], q[16], q[18], q[19], q[27], q[37], q[40], q[44], q[47], q[60], q[65], q[66], q[86], q[89], q[95], q[104], q[115], q[117], q[118], q[123], q[124], q[133], q[148], q[151]], 405);
constraint int_lin_le([-2, 2, 3, 9, -4, -1, -8, -7, 2, 9, 8, 9, 2, -8, -3, 2, -1, -5, -10, 7, 7, 8, -2, -4, 6], [q[3], q[19], q[28], q[31], q[41], q[42], q[50], q[56], q[67], q[69], q[75], q[78], q[82], q[90], q[93], q[94], q[104], q[106], q[109], q[110], q[121], q[130], q[134], q[135], q[139]], -327);
constraint int_lin_le([1, -3, -7, -4, -1, -10, 6, 9, 8, 8, -9, 7, 2, 1, 8, 8, -7, -5, -9, -7, -1, -4, -7, -2, 10], [q[6], q[12], q[17], q[22], q[25], q[26], q[30], q[32], q[45], q[52], q[59], q[93], q[97], q[100], q[103], q[106], q[112], q[113], q[118], q[126], q[137], q[143], q[145], q[147], q[158]], -651);
constraint int_lin_le([1, 4, -9, -1, 9, 6, 2, 10, 5, -6, -4, 1, 3, -9, -8, 4, 5, 1, -8, 2, 1, -3, -8, 3, 10], [q[16], q[17], q[18], q[23], q[25], q[27], q[29], q[34], q[36], q[40], q[59], q[64], q[65], q[66], q[70], q[76], q[79], q[85], q[118], q[120], q[122], q[132], q[136], q[148], q[154]], 359);
constraint int_lin_le([1, 9, 7, -9, 3, -7, 9, 4, -5, 8, 2, -1, 3, -6, 10, 6, 7, -1, 8, 1, -4, -7, -3, 4, 3], [q[2], q[9], q[10], q[16], q[21], q[22], q[25], q[30], q[32], q[47], q[62], q[64], q[76], q[78], q[87], q[91], q[96], q[122], q[131], q[135], q[138], q[142], q[146], q[147], q[150]], 901);
constraint int_lin_le([4, 1, -6, 1, 1, 3, -3, 4, 1, -3, -7, 9, -1, 4, -3, 5, -5, 1, 2, 1, -7, 1, 3, 1, -10], [q[6], q[13], q[14], q[30], q[31], q[33], q[35], q[42], q[46], q[53], q[61], q[72], q[76], q[77], q[78], q[79], q[98], q[103], q[108], q[140], q[141], q[149], q[152], q[155], q[158]], 71);
constraint int_lin_le([5, -8, -10, -5, -4, -8, 1, 3, -1, 8, 4, 6, 7, -1, -9, -8, -7, 5, -9, 1, -5, 1, -7, -7, -10], [q[3], q[7], q[10], q[18], q[31], q[39], q[43], q[44], q[54], q[57], q[62], q[64], q[80], q[81], q[86], q[92], q[95], q[110], q[119], q[131], q[140], q[141], q[148], q[155], q[159]], -976);
constraint int_lin_le([7, 2, -6, -1, 6, 9, -4, 3, -3, 1, 1, -6, 1, -2, 8, -4, -1, -5, -3, -2, -6, -2, 2, 5, -4], [q[4], q[10], q[11], q[12], q[24], q[37], q[43], q[46], q[48], q[62], q[84], q[86], q[89], q[92], q[97], q[102], q[111], q[113], q[114], q[124], q[126], q[137], q[141], q[150], q[158]], -696);
constraint int_lin_le([8, 4, -8, -8, 3, -7, -3, 10, 6, 7, -8, -1, -4, -8, 6, 1, 4, 3, 8, -6, 3, 5, 2, 6, 5], [q[12], q[20], q[34], q[39], q[55], q[61], q[63], q[80], q[90], q[92], q[97], q[98], q[100], q[106], q[110], q[111], q[112], q[125], q[128], q[130], q[136], q[140], q[141], q[144], q[152]], 640);
constraint int_lin_le([8, 8, 1, -3, -9, 10, -7, 8, 6, -4, 5, 7, 6, -4, 5, -10, -6, -8, -7, -5, 10, 2, 3, 7, -4], [q[17], q[24], q[28], q[51], q[54], q[58], q[73], q[74], q[75], q[93], q[94], q[97], q[100], q[111], q[113], q[116], q[121], q[122], q[127], q[131], q[134], q[137], q[138], q[146], q[157]], -32);
constraint int_lin_le([10, -7, 10, -5, 6, 9, -5, 9, -5, -7, -4, 7, -5, 7, -4, -7, -3, -5, -3, -7, -8, -1, 1, -2, -1], [q[5], q[11], q[13], q[17], q[26], q[31], q[34], q[36], q[61], q[64], q[69], q[72], q[73], q[76], q[82], q[95], q[100], q[102], q[104], q[123], q[143], q[146], q[148], q[152], q[158]], -730);
constraint int_lin_le([10, -1, -2, -3, -4, 10, -5, 4, -1, -9, -1, 10, -5, 2, 6, 8, 8, -2, -10, -6, -9, -9, 5, -2, 5], [q[3], q[7], q[11], q[22], q[26], q[41], q[43], q[45], q[49], q[50], q[63], q[70], q[80], q[82], q[83], q[106], q[109], q[119], q[120], q[136], q[142], q[143], q[147], q[154], q[160]], 173);
constraint int_lin_le([10, 2, -7, -10, -4, 1, 8, -10, -10, 6, -6, -4, 5, -3, 10, 10, -5, -9, -2, 1, -5, 1, -7, -1, -2], [q[2], q[8], q[15], q[33], q[34], q[40], q[41], q[47], q[50], q[61], q[66], q[67], q[72], q[82], q[90], q[121], q[124], q[125], q[128], q[135], q[138], q[139], q[149], q[151], q[157]], -691);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
