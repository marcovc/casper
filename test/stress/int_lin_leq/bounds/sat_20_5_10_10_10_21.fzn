predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..15] of var 1..10: q :: output_array([1..15]);
constraint int_lin_le([-10, 10, 2, 4, -10], [q[3], q[6], q[7], q[11], q[14]], 31);
constraint int_lin_le([-9, 5, 4, -3, -4], [q[1], q[3], q[4], q[5], q[6]], -2);
constraint int_lin_le([-8, -9, -3, 10, -4], [q[4], q[7], q[8], q[9], q[15]], -103);
constraint int_lin_le([-8, -4, 9, 1, 1], [q[1], q[5], q[7], q[8], q[15]], 72);
constraint int_lin_le([-8, 8, 1, -3, 8], [q[1], q[3], q[9], q[11], q[14]], 56);
constraint int_lin_le([-7, -3, -7, -6, 4], [q[5], q[8], q[10], q[12], q[15]], -52);
constraint int_lin_le([-5, -10, -4, 4, 4], [q[3], q[4], q[11], q[13], q[14]], -58);
constraint int_lin_le([-4, 5, 9, 1, 6], [q[2], q[4], q[5], q[8], q[14]], 44);
constraint int_lin_le([2, -2, -5, 9, 4], [q[5], q[6], q[9], q[12], q[15]], 38);
constraint int_lin_le([2, 4, 10, 7, 4], [q[1], q[2], q[3], q[7], q[11]], 175);
constraint int_lin_le([2, 7, -2, -4, 2], [q[2], q[5], q[8], q[10], q[13]], 26);
constraint int_lin_le([3, 5, -2, -4, 6], [q[7], q[9], q[11], q[14], q[15]], 109);
constraint int_lin_le([3, 5, 6, 5, 8], [q[3], q[7], q[10], q[13], q[15]], 187);
constraint int_lin_le([5, 8, -10, -9, 2], [q[2], q[4], q[6], q[7], q[13]], -73);
constraint int_lin_le([5, 10, -6, -10, 1], [q[1], q[4], q[9], q[12], q[15]], 0);
constraint int_lin_le([6, -3, -10, -1, 2], [q[1], q[6], q[9], q[11], q[12]], -65);
constraint int_lin_le([8, -5, 1, -9, -10], [q[4], q[8], q[10], q[13], q[14]], -44);
constraint int_lin_le([10, -4, 1, 4, 1], [q[1], q[2], q[6], q[10], q[12]], 24);
constraint int_lin_le([10, 1, -6, -6, -8], [q[2], q[6], q[9], q[10], q[12]], -8);
constraint int_lin_le([10, 1, 1, -3, -3], [q[3], q[5], q[11], q[13], q[14]], 58);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
