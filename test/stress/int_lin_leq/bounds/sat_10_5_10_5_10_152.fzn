predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..15] of var 1..10: q :: output_array([1..15]);
constraint int_lin_le([-10, -6, 2, 6, -3], [q[1], q[4], q[5], q[8], q[9]], -102);
constraint int_lin_le([-9, 7, 10, -7, -7], [q[3], q[5], q[12], q[14], q[15]], 7);
constraint int_lin_le([-5, 5, -1, -7, -1], [q[2], q[7], q[8], q[10], q[12]], -40);
constraint int_lin_le([-4, -7, 4, 5, 1], [q[2], q[6], q[7], q[9], q[11]], -9);
constraint int_lin_le([-3, 3, -6, 3, -10], [q[1], q[2], q[5], q[8], q[11]], -112);
constraint int_lin_le([-2, -9, 5, -2, 7], [q[1], q[4], q[8], q[10], q[13]], -67);
constraint int_lin_le([-2, 7, 4, -1, 9], [q[6], q[7], q[10], q[12], q[13]], 108);
constraint int_lin_le([1, -5, 6, -10, -1], [q[2], q[3], q[11], q[14], q[15]], -68);
constraint int_lin_le([3, 9, 6, 5, 7], [q[1], q[3], q[5], q[6], q[14]], 206);
constraint int_lin_le([5, -5, -7, 2, 1], [q[4], q[9], q[11], q[13], q[15]], 15);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
