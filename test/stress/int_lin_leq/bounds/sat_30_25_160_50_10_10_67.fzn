predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..160] of var 1..50: q :: output_array([1..160]);
constraint int_lin_le([-10, -6, 8, 2, 7, 1, 6, 7, -6, -5, 3, -9, -2, -1, 1, 1, 6, -6, 1, -8, 4, -6, 7, -8, -4], [q[17], q[18], q[34], q[35], q[40], q[43], q[48], q[49], q[51], q[73], q[79], q[82], q[86], q[100], q[102], q[112], q[116], q[124], q[131], q[134], q[135], q[141], q[150], q[156], q[157]], -992);
constraint int_lin_le([-10, 5, -10, 9, 7, 6, -1, -5, 8, -8, -8, 4, -9, -7, 4, 10, 1, -2, 1, -3, 8, -1, -7, -4, -10], [q[8], q[19], q[26], q[28], q[29], q[30], q[39], q[43], q[44], q[60], q[72], q[74], q[78], q[79], q[81], q[90], q[104], q[120], q[129], q[132], q[133], q[136], q[140], q[146], q[151]], -282);
constraint int_lin_le([-10, 6, -9, -9, -9, 10, -5, -7, -3, 1, -10, -1, 4, -2, 7, -1, 8, 2, -1, -5, 5, -7, 10, -6, -3], [q[2], q[5], q[23], q[30], q[31], q[37], q[40], q[49], q[54], q[67], q[73], q[78], q[86], q[89], q[91], q[104], q[119], q[121], q[144], q[145], q[147], q[150], q[154], q[158], q[160]], -1167);
constraint int_lin_le([-9, -1, -2, -1, 9, -1, -8, 9, 2, -10, 7, -1, -4, -2, -8, -2, -1, -8, 9, -2, -10, -1, 5, -8, 7], [q[2], q[9], q[11], q[29], q[42], q[46], q[49], q[59], q[69], q[71], q[74], q[76], q[79], q[87], q[93], q[120], q[123], q[125], q[127], q[133], q[144], q[145], q[146], q[157], q[158]], -673);
constraint int_lin_le([-7, -8, -3, 4, -4, -7, 10, -3, -7, 9, 1, -2, -2, -5, 9, 8, -9, -8, -4, -5, -5, -7, -2, 7, 9], [q[2], q[3], q[6], q[15], q[32], q[34], q[45], q[53], q[54], q[57], q[66], q[91], q[96], q[109], q[113], q[115], q[118], q[121], q[122], q[126], q[127], q[139], q[142], q[143], q[150]], -2064);
constraint int_lin_le([-7, 1, 2, -8, 2, 6, 9, 3, 4, -6, -6, 9, -1, -5, -9, -1, 5, 3, 8, -2, 5, 10, -9, -6, -1], [q[16], q[20], q[21], q[31], q[40], q[45], q[56], q[57], q[68], q[82], q[91], q[92], q[96], q[99], q[106], q[108], q[113], q[118], q[130], q[132], q[137], q[142], q[143], q[150], q[159]], 193);
constraint int_lin_le([-6, 1, 4, 1, 7, 7, 6, -2, -5, -7, 2, 2, 7, -1, 7, -5, -4, 1, 8, 5, -1, -6, -8, 1, 6], [q[18], q[29], q[34], q[44], q[52], q[57], q[65], q[68], q[70], q[81], q[84], q[93], q[94], q[107], q[108], q[113], q[120], q[122], q[125], q[133], q[138], q[139], q[153], q[156], q[157]], 748);
constraint int_lin_le([-6, 4, -7, 6, 9, 9, 5, 9, -8, 4, -3, -1, -8, 3, -3, 9, -3, 9, 1, 10, -7, 5, 1, 4, 9], [q[1], q[6], q[16], q[21], q[22], q[25], q[34], q[50], q[53], q[63], q[66], q[76], q[79], q[80], q[82], q[84], q[85], q[99], q[100], q[103], q[123], q[126], q[131], q[139], q[141]], 1703);
constraint int_lin_le([-5, -1, 6, 9, -3, 7, 8, -5, -5, 7, 1, 10, -5, -4, 9, -2, 7, -1, -3, 10, 1, -2, 6, -8, 4], [q[3], q[10], q[35], q[49], q[58], q[70], q[72], q[75], q[78], q[90], q[93], q[97], q[98], q[107], q[111], q[124], q[127], q[128], q[133], q[149], q[153], q[154], q[155], q[158], q[160]], 1108);
constraint int_lin_le([-5, 8, -10, 1, -7, 10, 4, 9, -3, 4, -7, 3, 9, 7, 3, -4, 5, -3, 7, 1, -1, -1, 9, -7, -9], [q[2], q[4], q[12], q[13], q[14], q[17], q[26], q[33], q[47], q[51], q[59], q[60], q[68], q[71], q[94], q[96], q[104], q[113], q[118], q[122], q[142], q[146], q[147], q[151], q[152]], 792);
constraint int_lin_le([-4, -10, 5, 6, -1, -2, 2, -5, -10, -6, 2, -1, 2, 8, -5, -9, -1, -1, 8, 4, -9, 7, -1, -2, -3], [q[8], q[20], q[24], q[28], q[32], q[54], q[55], q[56], q[59], q[62], q[64], q[65], q[71], q[75], q[77], q[85], q[95], q[98], q[103], q[104], q[105], q[110], q[121], q[127], q[160]], -1433);
constraint int_lin_le([-4, -5, 9, -9, 7, 10, 1, -2, 9, 3, 1, 2, -5, -8, 6, -9, -3, -8, 8, 7, 5, 7, -6, 3, 5], [q[9], q[10], q[15], q[21], q[23], q[27], q[36], q[37], q[39], q[53], q[58], q[60], q[66], q[76], q[89], q[93], q[101], q[107], q[109], q[128], q[129], q[137], q[139], q[148], q[153]], 954);
constraint int_lin_le([-4, 1, -10, 9, -1, 3, 6, 10, -8, -1, -4, 7, -3, -4, 4, 8, -9, 7, 7, 6, -5, 8, -7, -1, -1], [q[3], q[5], q[7], q[11], q[14], q[25], q[29], q[30], q[38], q[42], q[45], q[46], q[63], q[68], q[72], q[83], q[84], q[87], q[88], q[99], q[111], q[113], q[117], q[147], q[155]], 155);
constraint int_lin_le([-3, 8, -1, 9, -1, -3, -2, 9, 10, 6, 5, 5, 2, 6, 1, -10, -10, 6, 5, 3, 1, 1, -10, -7, 1], [q[7], q[17], q[20], q[31], q[36], q[49], q[51], q[55], q[56], q[68], q[70], q[75], q[82], q[86], q[88], q[92], q[99], q[117], q[124], q[134], q[135], q[144], q[152], q[153], q[156]], 924);
constraint int_lin_le([-2, 3, -1, -1, -1, 3, 5, 2, 10, -6, -5, 3, -5, -4, 5, 6, 8, -4, 8, -3, 7, 1, 1, -1, -5], [q[11], q[28], q[31], q[37], q[40], q[41], q[42], q[43], q[45], q[48], q[52], q[56], q[57], q[62], q[88], q[102], q[109], q[116], q[120], q[129], q[134], q[136], q[138], q[144], q[156]], 671);
constraint int_lin_le([-1, 1, 10, 1, -5, -4, 1, -2, -8, 4, -7, 10, 3, 9, 10, 10, 8, 10, -7, -5, -9, -5, 3, 1, -3], [q[4], q[8], q[12], q[25], q[33], q[36], q[45], q[55], q[69], q[74], q[79], q[92], q[95], q[97], q[98], q[100], q[103], q[109], q[124], q[130], q[131], q[135], q[137], q[142], q[148]], 839);
constraint int_lin_le([1, -8, 3, 10, -3, 8, 8, 4, -2, -1, -9, 8, -6, -1, 10, 8, -1, -7, 9, 9, 3, 7, 8, 9, 8], [q[1], q[2], q[13], q[16], q[19], q[31], q[41], q[44], q[47], q[52], q[57], q[67], q[69], q[70], q[90], q[92], q[94], q[97], q[119], q[123], q[133], q[142], q[145], q[146], q[152]], 1938);
constraint int_lin_le([1, -6, -2, -7, 3, 1, 8, 1, -8, 4, 3, -10, -10, 4, -4, -1, 4, 9, -7, -2, -7, 7, -6, -10, -5], [q[1], q[4], q[5], q[12], q[21], q[42], q[46], q[48], q[59], q[61], q[65], q[73], q[76], q[77], q[85], q[87], q[94], q[110], q[112], q[119], q[137], q[145], q[154], q[158], q[160]], -1313);
constraint int_lin_le([1, -4, 3, 1, 9, 8, 8, 7, -1, -4, -5, 8, 4, -2, 1, 2, -5, -3, 7, 5, 10, -8, 1, -4, -3], [q[5], q[8], q[18], q[19], q[23], q[24], q[29], q[44], q[46], q[65], q[69], q[74], q[77], q[81], q[86], q[91], q[95], q[101], q[105], q[108], q[112], q[130], q[132], q[148], q[157]], 1437);
constraint int_lin_le([1, 9, -8, -6, -4, 9, 6, 4, 3, 10, -8, 9, 1, -1, -8, 8, -6, 7, 2, 9, -9, 6, 1, -5, -2], [q[4], q[26], q[33], q[50], q[61], q[78], q[80], q[81], q[91], q[96], q[114], q[115], q[118], q[122], q[125], q[126], q[130], q[132], q[136], q[138], q[140], q[144], q[149], q[151], q[158]], 267);
constraint int_lin_le([2, -7, -7, -7, -2, 5, -9, -7, 1, 9, 4, -5, 7, -2, -10, 3, -3, 10, -3, 1, -8, -7, -7, 2, 4], [q[9], q[11], q[25], q[35], q[38], q[47], q[63], q[64], q[67], q[84], q[95], q[97], q[101], q[103], q[106], q[108], q[111], q[114], q[116], q[125], q[138], q[147], q[148], q[155], q[157]], -1062);
constraint int_lin_le([2, -1, 9, 8, -10, -2, 4, 10, -8, -3, -8, -1, 3, 6, 6, -7, -3, 10, 6, 6, -4, 8, -9, 10, -8], [q[3], q[15], q[21], q[22], q[24], q[28], q[43], q[51], q[59], q[63], q[71], q[72], q[85], q[87], q[99], q[102], q[105], q[111], q[112], q[116], q[126], q[128], q[132], q[149], q[151]], 375);
constraint int_lin_le([3, -10, 7, 7, -8, 3, -6, 3, 1, 1, -3, -9, -8, 9, -7, -6, 9, -1, 1, 7, 8, -8, -3, -8, -7], [q[10], q[13], q[14], q[22], q[23], q[24], q[27], q[33], q[37], q[40], q[58], q[62], q[69], q[80], q[93], q[100], q[102], q[105], q[107], q[123], q[128], q[130], q[131], q[149], q[159]], -466);
constraint int_lin_le([3, -8, 1, 8, -5, -4, -5, -3, -7, -8, 5, -4, -3, -8, 6, 1, 9, -6, -2, -6, -8, 3, 10, 4, 3], [q[4], q[15], q[17], q[22], q[25], q[32], q[35], q[44], q[51], q[61], q[63], q[67], q[72], q[95], q[100], q[122], q[128], q[131], q[134], q[136], q[138], q[139], q[141], q[147], q[152]], 42);
constraint int_lin_le([3, 3, 7, -5, 2, -5, -3, -1, -8, 1, 8, -7, 8, 2, 4, 1, 1, 5, -10, 4, -4, -8, 10, 1, -1], [q[6], q[10], q[11], q[13], q[17], q[26], q[27], q[47], q[53], q[58], q[60], q[62], q[64], q[76], q[82], q[88], q[96], q[110], q[115], q[129], q[140], q[141], q[143], q[155], q[159]], -406);
constraint int_lin_le([4, 8, -8, -6, 8, -3, -7, -1, 6, -1, -4, -1, 7, -5, -10, 5, -2, -10, -1, 10, -5, -8, 9, 10, -5], [q[7], q[9], q[15], q[20], q[32], q[36], q[38], q[39], q[54], q[64], q[67], q[73], q[83], q[87], q[92], q[106], q[110], q[115], q[119], q[121], q[125], q[135], q[140], q[143], q[150]], 17);
constraint int_lin_le([5, 2, 4, 5, 9, -9, -5, 10, 6, -1, 8, 3, -9, -7, -1, -7, -1, -3, 7, -5, 10, 7, -7, 10, 8], [q[5], q[6], q[7], q[8], q[10], q[24], q[27], q[33], q[36], q[38], q[43], q[48], q[52], q[54], q[55], q[98], q[102], q[105], q[116], q[119], q[121], q[126], q[140], q[153], q[154]], 707);
constraint int_lin_le([6, -8, -10, -3, 4, 7, -8, 8, -6, 8, 6, 1, 1, 6, 1, -10, 3, 9, -9, 4, -7, 8, 3, 2, 10], [q[1], q[16], q[19], q[20], q[35], q[38], q[39], q[41], q[42], q[48], q[56], q[61], q[66], q[75], q[80], q[83], q[101], q[106], q[117], q[118], q[123], q[134], q[136], q[146], q[152]], 1149);
constraint int_lin_le([7, 9, 5, 2, -10, 3, 7, -5, 3, 7, -10, -6, 6, -2, 4, -9, -6, 5, 4, 6, -4, 8, 1, 1, -2], [q[1], q[19], q[23], q[28], q[37], q[41], q[47], q[53], q[58], q[60], q[77], q[81], q[86], q[88], q[97], q[101], q[103], q[109], q[110], q[112], q[117], q[124], q[129], q[155], q[160]], 689);
constraint int_lin_le([9, 5, -5, 6, 5, 8, 10, 6, -3, -7, 10, 2, -9, -5, -7, -2, 4, -9, -8, 9, 1, -4, -7, 9, -1], [q[3], q[12], q[14], q[26], q[34], q[50], q[64], q[66], q[70], q[73], q[75], q[78], q[80], q[83], q[84], q[85], q[94], q[104], q[107], q[111], q[115], q[135], q[149], q[151], q[156]], -36);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
