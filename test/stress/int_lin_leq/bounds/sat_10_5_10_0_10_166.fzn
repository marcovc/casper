predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..15] of var 1..10: q :: output_array([1..15]);
constraint int_lin_le([-9, 4, 2, -7, 2], [q[2], q[5], q[9], q[13], q[14]], -30);
constraint int_lin_le([-9, 10, -4, 1, -9], [q[5], q[7], q[9], q[14], q[15]], 28);
constraint int_lin_le([-6, 1, 5, -6, 4], [q[1], q[8], q[11], q[12], q[15]], 17);
constraint int_lin_le([-4, -5, 1, -5, -7], [q[1], q[3], q[7], q[8], q[14]], -101);
constraint int_lin_le([1, 1, -10, 1, -9], [q[3], q[4], q[6], q[11], q[13]], -72);
constraint int_lin_le([6, -7, -2, -5, 7], [q[3], q[5], q[6], q[7], q[8]], -22);
constraint int_lin_le([6, 5, -10, -2, -3], [q[1], q[2], q[8], q[10], q[12]], -18);
constraint int_lin_le([7, -10, -1, 3, 10], [q[2], q[10], q[11], q[12], q[13]], -34);
constraint int_lin_le([9, 8, 1, 4, -6], [q[4], q[5], q[6], q[9], q[15]], 64);
constraint int_lin_le([10, -1, 4, -8, 10], [q[3], q[4], q[6], q[7], q[10]], 98);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
