predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..15] of var 1..10: q :: output_array([1..15]);
constraint int_lin_le([-8, 1, -10, -4, -6], [q[1], q[3], q[4], q[13], q[14]], -174);
constraint int_lin_le([-6, -2, 7, 5, -5], [q[2], q[3], q[4], q[5], q[14]], -11);
constraint int_lin_le([-6, 4, -6, 10, 5], [q[1], q[8], q[9], q[11], q[13]], 14);
constraint int_lin_le([-5, 6, -9, -6, -10], [q[2], q[4], q[5], q[8], q[12]], -117);
constraint int_lin_le([-4, -1, 3, -4, 2], [q[3], q[4], q[6], q[8], q[10]], -15);
constraint int_lin_le([-1, -7, 5, -3, -4], [q[6], q[7], q[10], q[12], q[15]], -8);
constraint int_lin_le([-1, -2, 6, -3, -9], [q[2], q[5], q[9], q[10], q[11]], 6);
constraint int_lin_le([4, 2, 3, 3, 6], [q[1], q[7], q[12], q[13], q[15]], 79);
constraint int_lin_le([5, -9, 2, 8, -3], [q[2], q[5], q[9], q[11], q[14]], -1);
constraint int_lin_le([10, 1, 10, -2, -5], [q[6], q[7], q[8], q[12], q[15]], 33);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
