predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..15] of var 1..10: q :: output_array([1..15]);
constraint int_lin_le([-10, -10, 1, -7, 1], [q[2], q[5], q[7], q[12], q[13]], -163);
constraint int_lin_le([-10, -1, 5, -7, 3], [q[2], q[3], q[8], q[13], q[14]], -82);
constraint int_lin_le([-6, -1, -3, -4, 8], [q[6], q[7], q[8], q[10], q[13]], -60);
constraint int_lin_le([-5, 8, 6, -9, -3], [q[4], q[6], q[12], q[13], q[15]], -13);
constraint int_lin_le([-3, -6, 8, -9, 1], [q[1], q[3], q[4], q[9], q[11]], -68);
constraint int_lin_le([-3, 4, -2, -9, -4], [q[1], q[3], q[5], q[11], q[14]], -107);
constraint int_lin_le([-2, -8, -2, 7, -5], [q[1], q[12], q[13], q[14], q[15]], -49);
constraint int_lin_le([-2, 10, 1, -2, 3], [q[2], q[6], q[8], q[9], q[11]], 101);
constraint int_lin_le([1, -4, 1, 3, -8], [q[2], q[8], q[10], q[14], q[15]], -41);
constraint int_lin_le([1, -3, 8, -10, -8], [q[2], q[4], q[11], q[12], q[15]], -9);
constraint int_lin_le([1, 2, -3, 3, -8], [q[1], q[3], q[5], q[9], q[14]], 15);
constraint int_lin_le([2, -9, 1, -3, 10], [q[3], q[4], q[5], q[7], q[10]], 5);
constraint int_lin_le([2, -2, 3, -7, 6], [q[1], q[5], q[10], q[12], q[15]], 49);
constraint int_lin_le([3, -3, 4, 4, 5], [q[2], q[7], q[8], q[9], q[10]], 121);
constraint int_lin_le([4, -10, 7, 3, 2], [q[6], q[8], q[10], q[14], q[15]], 70);
constraint int_lin_le([4, -3, 7, 7, 8], [q[3], q[4], q[6], q[10], q[14]], 155);
constraint int_lin_le([4, -1, 7, 6, 3], [q[1], q[5], q[8], q[13], q[15]], 110);
constraint int_lin_le([7, 9, 1, 1, -7], [q[2], q[7], q[9], q[11], q[12]], 78);
constraint int_lin_le([10, -5, 2, 1, 9], [q[1], q[6], q[7], q[11], q[13]], 80);
constraint int_lin_le([10, 9, 6, 1, 8], [q[4], q[6], q[7], q[9], q[11]], 289);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
