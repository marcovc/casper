predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..100] of var 1..50: q :: output_array([1..100]);
constraint int_lin_le([-9, -6, -4, -3, -7, 9, 7, -8, -7, 3, 2, -9, 6, 10, -1, 8, 2, 6, -5, -7, 10, 6, -8, 2, 4], [q[15], q[17], q[18], q[22], q[29], q[34], q[41], q[47], q[50], q[54], q[57], q[61], q[63], q[68], q[69], q[71], q[73], q[74], q[76], q[84], q[90], q[93], q[97], q[98], q[99]], 102);
constraint int_lin_le([-9, -2, 7, 9, -2, -5, -3, -5, 9, 3, -7, -3, 2, -6, 6, -3, -8, 3, 3, -5, 8, 8, 5, 3, -3], [q[6], q[10], q[12], q[13], q[17], q[19], q[21], q[28], q[30], q[32], q[40], q[41], q[42], q[43], q[46], q[49], q[50], q[61], q[66], q[69], q[70], q[71], q[79], q[92], q[95]], 415);
constraint int_lin_le([-6, -3, -7, -1, -9, 7, -5, -9, -1, -5, 6, -4, -5, 7, -10, -3, 5, -9, -4, -1, -1, 2, -3, -3, -5], [q[4], q[5], q[7], q[12], q[16], q[19], q[20], q[24], q[30], q[35], q[38], q[39], q[42], q[43], q[45], q[49], q[55], q[62], q[65], q[70], q[72], q[77], q[79], q[83], q[87]], -1239);
constraint int_lin_le([-4, -6, -2, 4, 7, 5, 8, 1, -8, 6, 3, -4, -5, 4, 1, -6, -3, -3, 2, 1, 3, 1, -3, -7, -3], [q[5], q[11], q[17], q[18], q[21], q[23], q[31], q[33], q[34], q[41], q[42], q[49], q[59], q[62], q[64], q[66], q[67], q[70], q[73], q[74], q[75], q[80], q[85], q[94], q[100]], -156);
constraint int_lin_le([-4, -2, -2, 4, 2, -5, -1, 7, -7, -7, -1, -6, 1, 8, -2, -2, 6, -7, 5, -2, 3, -8, -2, -6, 1], [q[2], q[3], q[4], q[10], q[13], q[15], q[25], q[32], q[43], q[44], q[45], q[47], q[48], q[50], q[52], q[53], q[60], q[63], q[77], q[83], q[84], q[86], q[91], q[96], q[98]], -1236);
constraint int_lin_le([-2, -9, -5, 9, -10, -1, 10, -2, -6, 3, 9, 4, -7, -3, -1, -6, -1, 10, 8, -6, 2, 2, -7, -4, -1], [q[1], q[4], q[8], q[27], q[35], q[38], q[39], q[47], q[48], q[51], q[54], q[56], q[64], q[73], q[74], q[75], q[76], q[81], q[83], q[87], q[89], q[91], q[93], q[96], q[99]], -88);
constraint int_lin_le([-2, 8, -1, -3, -5, -10, -2, -1, -1, -3, 2, -2, 3, 8, -1, -2, -9, 7, 10, 6, -5, 6, -4, -6, -2], [q[1], q[6], q[8], q[13], q[27], q[28], q[31], q[33], q[36], q[40], q[48], q[51], q[52], q[53], q[56], q[60], q[66], q[75], q[78], q[80], q[86], q[92], q[94], q[95], q[96]], -439);
constraint int_lin_le([4, -9, 1, 1, 10, 3, -5, -10, 1, 4, -9, 1, 10, 1, 9, 4, -8, -10, -7, 2, -6, 8, 9, -9, -1], [q[2], q[5], q[7], q[9], q[15], q[16], q[18], q[23], q[25], q[26], q[29], q[33], q[36], q[37], q[45], q[57], q[59], q[60], q[62], q[67], q[77], q[78], q[90], q[94], q[100]], 203);
constraint int_lin_le([8, 1, -10, 8, -8, -3, -8, -9, 6, -10, 3, 7, -8, 1, -3, -2, -7, -9, 8, 6, -8, 2, -2, 7, 7], [q[1], q[6], q[7], q[8], q[9], q[16], q[24], q[26], q[36], q[37], q[38], q[39], q[56], q[58], q[65], q[68], q[72], q[76], q[78], q[79], q[82], q[87], q[88], q[95], q[97]], -751);
constraint int_lin_le([9, 9, -8, -6, -6, -5, -2, -4, 3, -3, 8, -1, 9, -3, 2, -2, 1, 5, -10, 7, 8, 3, -7, 1, -6], [q[12], q[14], q[19], q[20], q[22], q[27], q[28], q[29], q[30], q[35], q[40], q[46], q[51], q[54], q[55], q[57], q[61], q[69], q[71], q[81], q[89], q[90], q[92], q[93], q[99]], -130);
constraint int_lin_le([10, -9, 3, 2, 9, -2, 4, 1, 4, 10, 6, 2, 3, 10, 2, 1, 4, 1, -2, 10, -10, -5, 7, -2, 5], [q[3], q[11], q[14], q[20], q[22], q[24], q[31], q[34], q[44], q[52], q[53], q[55], q[58], q[63], q[65], q[68], q[72], q[80], q[82], q[84], q[85], q[86], q[88], q[97], q[98]], 1462);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
