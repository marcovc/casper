predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..160] of var 1..50: q :: output_array([1..160]);
constraint int_eq(5, q[117]);
constraint int_eq(23, q[63]);
constraint int_lin_le([-43, -15, 90, 81, 39, 76, -74, -71, -47, -100, -15, 16, 64, 52, -29, -49, -73, 72, -18, 5, -57, 50, -94, -69, -61, -79, -80, 16, -10, 64, 19, 12, 27, -65, -45, 11, -25, 38, -36, 9, -81, -95, 90, -73, 76, -56, 15, 86, 48, -38, -10, 51, 14, -67, 18, -4, 9, -19, 1, -60, 71, -36, 66, -72, 83, 54, 13, -66, 59, -65, 72, 22, -88, 71, 49, -87, -99, -78, -90, -39, 35, -72, -41, -96, -25, -93, 42, -26, -46, 77, 18, 97, 30, 89, 61, -94, -28, -4, -12, -17], [q[2], q[4], q[7], q[9], q[10], q[11], q[12], q[13], q[17], q[18], q[19], q[20], q[21], q[23], q[24], q[27], q[30], q[31], q[32], q[33], q[34], q[36], q[40], q[41], q[42], q[44], q[45], q[46], q[49], q[50], q[51], q[52], q[54], q[55], q[58], q[59], q[60], q[62], q[64], q[65], q[67], q[68], q[70], q[71], q[72], q[73], q[74], q[75], q[77], q[78], q[80], q[84], q[87], q[88], q[90], q[91], q[93], q[95], q[100], q[101], q[102], q[103], q[104], q[105], q[109], q[110], q[111], q[112], q[113], q[115], q[116], q[119], q[120], q[122], q[123], q[125], q[126], q[127], q[128], q[130], q[131], q[132], q[133], q[134], q[136], q[140], q[141], q[142], q[143], q[145], q[149], q[151], q[152], q[153], q[154], q[156], q[157], q[158], q[159], q[160]], -21564);
constraint int_lin_le([-24, 54, -77, -24, -60, 6, 93, -26, 37, 15, 10, -85, 96, 21, 87, 9, 35, 83, 57, -60, 37, -4, -42, -17, 15, -1, 9, -35, 76, -4, -56, -23, -23, 66, 95, 94, 2, 29, 35, -68, 25, 52, 13, 57, -85, -90, 17, -79, -19, 84, 74, 16, 7, 89, -92, -58, -8, 10, 24, -48, 27, 97, -22, 42, 79, 91, 85, 80, 42, -52, -33, -8, -3, 68, -79, -70, -15, -17, -74, -56, 84, 54, -16, -93, -36, 81, -38, 26, -1, 16, -77, 63, 95, 88, 86, -62, 96, 43, 25, 4], [q[1], q[2], q[3], q[4], q[6], q[8], q[10], q[12], q[13], q[14], q[16], q[18], q[22], q[24], q[27], q[29], q[30], q[31], q[32], q[33], q[37], q[40], q[41], q[42], q[43], q[45], q[46], q[47], q[48], q[49], q[50], q[51], q[52], q[53], q[55], q[56], q[59], q[60], q[61], q[64], q[65], q[73], q[74], q[76], q[77], q[78], q[79], q[82], q[83], q[84], q[85], q[86], q[90], q[91], q[92], q[93], q[94], q[96], q[97], q[98], q[101], q[102], q[103], q[104], q[106], q[107], q[108], q[109], q[111], q[113], q[116], q[119], q[120], q[122], q[125], q[126], q[128], q[129], q[130], q[132], q[133], q[134], q[136], q[137], q[138], q[140], q[141], q[142], q[144], q[145], q[147], q[148], q[149], q[151], q[152], q[153], q[154], q[155], q[156], q[160]], 34320);
constraint int_lin_le([-22, 43, 55, -93, -9, -95, -59, -83, 30, 33, -44, -46, 49, -9, -38, 57, -65, -61, 39, -64, 83, 23, 91, -6, 71, 3, 42, 3, 49, -65, 55, 15, 61, 68, -51, 65, 33, -24, 14, 56, -61, 17, 8, 56, 49, -5, 93, 9, 89, -82, 77, 16, -74, -26, -12, -36, 48, -19, -58, -27, 96, -31, -13, -91, 88, 14, -60, -49, -93, 98, -64, 43, 86, -63, 15, -68, 16, 65, -75, -62, 87, -77, -31, -76, -58, -9, 87, 7, 36, -11, -53, -78, 28, 71, 59, -76, 77, -11, 57, -33], [q[1], q[3], q[4], q[5], q[6], q[7], q[8], q[10], q[12], q[14], q[15], q[16], q[18], q[19], q[21], q[23], q[24], q[26], q[30], q[31], q[33], q[34], q[35], q[36], q[38], q[40], q[41], q[42], q[44], q[45], q[46], q[47], q[48], q[49], q[50], q[52], q[54], q[55], q[59], q[60], q[62], q[64], q[67], q[68], q[69], q[70], q[71], q[72], q[75], q[76], q[77], q[78], q[79], q[81], q[82], q[83], q[85], q[86], q[87], q[88], q[90], q[91], q[95], q[96], q[97], q[98], q[100], q[101], q[105], q[106], q[108], q[110], q[112], q[114], q[115], q[120], q[122], q[123], q[124], q[126], q[127], q[128], q[130], q[131], q[133], q[134], q[135], q[137], q[138], q[140], q[141], q[142], q[146], q[149], q[150], q[154], q[155], q[156], q[157], q[158]], 7268);
constraint int_lin_le([-8, -63, -96, 14, -46, -28, 1, 97, -54, 38, 46, -70, 42, -32, 78, -43, -3, 17, -82, -21, -61, -58, 3, -84, -6, -65, 25, 46, 2, 67, -34, 36, -37, 35, 52, 1, 62, -49, -69, -24, -27, 80, -55, 1, 7, -35, 86, -77, -2, 49, -14, -77, 87, -10, 12, -83, -6, -19, -1, 9, 76, -90, -19, 1, -13, -99, -13, 80, 69, 36, -34, -86, 70, -41, -57, 35, -100, -9, -26, -23, -91, -82, -79, 35, -81, -56, -38, 86, 30, 74, 17, -20, -3, -75, 20, 78, -68, 85, -97, -42], [q[2], q[3], q[4], q[5], q[6], q[9], q[11], q[12], q[15], q[20], q[21], q[23], q[24], q[25], q[28], q[29], q[31], q[32], q[33], q[36], q[37], q[38], q[39], q[40], q[41], q[42], q[45], q[47], q[48], q[49], q[50], q[51], q[52], q[53], q[56], q[57], q[60], q[61], q[64], q[65], q[66], q[67], q[68], q[72], q[73], q[74], q[77], q[80], q[81], q[82], q[83], q[84], q[85], q[86], q[87], q[88], q[89], q[91], q[92], q[93], q[94], q[97], q[98], q[99], q[101], q[104], q[105], q[106], q[108], q[111], q[112], q[113], q[116], q[118], q[120], q[121], q[122], q[124], q[125], q[127], q[128], q[129], q[131], q[133], q[135], q[136], q[137], q[138], q[139], q[142], q[143], q[144], q[145], q[146], q[148], q[150], q[151], q[152], q[156], q[157]], -27805);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
