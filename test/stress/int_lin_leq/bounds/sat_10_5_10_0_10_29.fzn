predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..15] of var 1..10: q :: output_array([1..15]);
constraint int_lin_le([-8, -6, 1, -8, -7], [q[1], q[4], q[8], q[10], q[12]], -124);
constraint int_lin_le([-6, 8, 3, -3, -5], [q[8], q[10], q[11], q[12], q[15]], -58);
constraint int_lin_le([-4, -6, -2, 4, -6], [q[1], q[4], q[6], q[7], q[13]], -90);
constraint int_lin_le([-4, 8, -1, 4, -3], [q[2], q[3], q[5], q[9], q[14]], 46);
constraint int_lin_le([-3, -1, 9, 7, 10], [q[1], q[2], q[4], q[10], q[12]], 80);
constraint int_lin_le([-2, -3, 3, -1, -7], [q[6], q[9], q[11], q[14], q[15]], -58);
constraint int_lin_le([-1, -6, 9, 9, -6], [q[3], q[5], q[7], q[8], q[13]], 30);
constraint int_lin_le([5, 5, 8, 9, 10], [q[3], q[5], q[6], q[7], q[11]], 182);
constraint int_lin_le([8, 8, 4, 4, -4], [q[1], q[2], q[12], q[13], q[14]], 120);
constraint int_lin_le([10, -8, -9, 7, -1], [q[2], q[9], q[13], q[14], q[15]], -45);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
