predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..160] of var 1..50: q :: output_array([1..160]);
constraint int_eq(44, q[135]);
constraint int_lin_le([-67, -60, 28, -4, -86, 13, -3, -31, -79, -46, 66, -7, -61, 71, -30, 30, -58, -79, -84, 1, 55, 50, -33, 27, 61, -20, -2, -26, -42, -64, 40, -2, 1, -68, 81, -85, -84, -34, 11, 56, -43, 32, 3, 17, 1, 35, -53, -31, 51, -11, 8, 76, -95, -23, -71, 66, 96, 85, 91, -72, -54, -41, -38, 3, 46, -95, -70, -72, 82, -44, -52, 27, 59, -69, -30, -2, 10, 41, -27, -45, 24, -42, -69, -70, -74, -29, 61, 10, 81, -75, 17, 98, -34, 13, -70, -100, -12, -46, 88, 9], [q[2], q[3], q[4], q[5], q[6], q[7], q[8], q[10], q[11], q[12], q[13], q[14], q[16], q[18], q[20], q[22], q[23], q[24], q[27], q[28], q[29], q[31], q[32], q[36], q[39], q[41], q[45], q[46], q[48], q[50], q[53], q[55], q[56], q[57], q[59], q[62], q[63], q[64], q[65], q[66], q[68], q[70], q[71], q[72], q[74], q[75], q[77], q[79], q[80], q[81], q[83], q[87], q[90], q[91], q[92], q[94], q[95], q[96], q[97], q[99], q[101], q[103], q[104], q[105], q[106], q[107], q[108], q[109], q[110], q[112], q[116], q[117], q[121], q[123], q[124], q[126], q[127], q[128], q[129], q[131], q[132], q[133], q[134], q[136], q[137], q[138], q[141], q[142], q[143], q[144], q[146], q[147], q[148], q[151], q[152], q[154], q[155], q[157], q[159], q[160]], -27653);
constraint int_lin_le([-56, 11, 12, -71, 50, -73, -5, -56, -10, -39, -100, -46, -87, -67, -44, 57, -22, -100, 4, 84, 81, 72, 47, 84, 77, 28, -45, 61, 22, 69, -96, 67, -61, -87, 15, 58, -99, -100, 83, -97, 32, 2, 36, -53, 46, 57, 37, 52, -58, 48, -51, 8, -58, 36, 55, -32, 35, -5, -85, -73, 67, 73, -22, -88, -69, -48, 97, -82, 27, 35, -37, -11, -95, -30, -77, -77, -71, 19, -57, 46, 39, 1, 41, -93, -43, 52, -40, -9, -18, -29, 21, 59, 35, 67, 68, -28, -51, -85, -46, 89], [q[2], q[3], q[4], q[5], q[8], q[12], q[13], q[14], q[15], q[17], q[18], q[23], q[24], q[25], q[26], q[28], q[32], q[35], q[36], q[37], q[39], q[41], q[42], q[43], q[44], q[45], q[46], q[47], q[49], q[51], q[53], q[55], q[56], q[59], q[62], q[63], q[66], q[67], q[70], q[71], q[73], q[74], q[76], q[78], q[81], q[82], q[83], q[84], q[85], q[86], q[87], q[88], q[90], q[91], q[93], q[96], q[97], q[98], q[100], q[101], q[102], q[105], q[107], q[108], q[109], q[110], q[111], q[112], q[113], q[115], q[116], q[117], q[119], q[120], q[121], q[122], q[125], q[127], q[129], q[131], q[132], q[133], q[136], q[138], q[139], q[140], q[141], q[142], q[143], q[144], q[145], q[147], q[150], q[151], q[152], q[154], q[155], q[156], q[157], q[159]], -15802);
constraint int_lin_le([36, -96, 50, -83, 31, 37, 49, -22, 3, 60, -77, -69, -81, 22, 8, 34, -80, 31, -18, -13, 27, -49, 31, 86, 98, 41, 3, -84, -31, -20, -35, -80, 29, -32, 81, 19, -65, 7, 29, -6, 81, 73, -55, -49, 95, 54, -51, -34, 30, -25, -76, 20, -89, 58, -40, 22, 31, 41, 92, 27, -88, 1, -91, -67, -12, -26, -27, 61, 80, 72, 42, -44, -36, 75, 17, -16, 52, -40, 16, -2, -71, -67, -33, 73, -44, 54, -14, -25, 40, -54, 85, -67, 33, -2, 64, -71, 77, -38, -46, -71], [q[2], q[4], q[6], q[7], q[8], q[9], q[10], q[11], q[12], q[14], q[15], q[19], q[21], q[23], q[24], q[26], q[29], q[30], q[33], q[34], q[35], q[36], q[37], q[39], q[40], q[41], q[42], q[46], q[49], q[50], q[52], q[54], q[55], q[56], q[58], q[59], q[60], q[61], q[66], q[68], q[69], q[71], q[72], q[73], q[74], q[75], q[76], q[77], q[79], q[82], q[83], q[84], q[86], q[87], q[88], q[89], q[90], q[91], q[93], q[94], q[96], q[98], q[99], q[100], q[101], q[102], q[103], q[105], q[107], q[108], q[109], q[113], q[114], q[115], q[118], q[119], q[122], q[123], q[127], q[128], q[129], q[130], q[131], q[132], q[133], q[136], q[137], q[139], q[141], q[142], q[144], q[145], q[146], q[147], q[149], q[153], q[154], q[155], q[158], q[159]], -2451);
constraint int_lin_le([61, 63, 53, -3, 45, 84, 9, -97, 57, 91, 70, 88, 66, 10, 17, 91, -20, -100, -83, -28, 59, 47, 99, -4, 23, -36, -75, 91, -72, 31, 11, -74, 82, -8, -96, 27, 88, -30, -9, 17, -97, -12, -72, 75, 98, -78, -76, 43, -87, 92, 1, -1, -42, -32, -88, 62, -62, 83, -70, 93, 53, 48, -77, -65, 93, 51, -80, 44, 32, 8, 15, 86, 82, 65, -24, 55, -35, -52, 93, 79, -25, 30, 99, 36, -21, -55, -73, -70, -94, -90, -97, 6, -48, 78, 32, -94, 69, 26, -46, -87], [q[1], q[2], q[4], q[8], q[10], q[11], q[14], q[15], q[16], q[17], q[19], q[20], q[22], q[23], q[25], q[28], q[29], q[31], q[32], q[33], q[34], q[35], q[36], q[37], q[38], q[39], q[40], q[43], q[45], q[46], q[49], q[50], q[51], q[52], q[54], q[55], q[58], q[60], q[61], q[63], q[65], q[66], q[67], q[69], q[70], q[71], q[72], q[73], q[74], q[75], q[77], q[78], q[81], q[82], q[83], q[85], q[86], q[87], q[91], q[92], q[94], q[97], q[98], q[104], q[105], q[106], q[107], q[111], q[114], q[115], q[116], q[119], q[121], q[123], q[124], q[126], q[127], q[128], q[129], q[130], q[131], q[132], q[133], q[134], q[136], q[138], q[139], q[140], q[142], q[143], q[144], q[145], q[147], q[151], q[152], q[153], q[154], q[156], q[159], q[160]], 4931);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
