predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..15] of var 1..10: q :: output_array([1..15]);
constraint int_lin_le([-5, -1, 5, -3, 10], [q[4], q[5], q[9], q[11], q[13]], 43);
constraint int_lin_le([-3, -6, -1, 8, -10], [q[4], q[5], q[9], q[14], q[15]], -117);
constraint int_lin_le([-3, 4, 5, 10, 8], [q[3], q[7], q[8], q[12], q[13]], 93);
constraint int_lin_le([-3, 5, -2, 8, 4], [q[1], q[2], q[7], q[10], q[14]], 10);
constraint int_lin_le([-1, -3, -1, 7, 9], [q[1], q[2], q[6], q[10], q[11]], 45);
constraint int_lin_le([-1, -1, 10, 8, -8], [q[1], q[2], q[3], q[4], q[9]], -8);
constraint int_lin_le([-1, 7, -10, 1, 6], [q[3], q[6], q[11], q[14], q[15]], -7);
constraint int_lin_le([1, 3, 10, 9, -1], [q[3], q[6], q[8], q[12], q[15]], 79);
constraint int_lin_le([3, 5, 5, 1, 6], [q[7], q[8], q[10], q[12], q[13]], 70);
constraint int_lin_le([5, -6, 9, 3, 1], [q[1], q[2], q[4], q[5], q[9]], 56);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
