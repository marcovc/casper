predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..15] of var 1..10: q :: output_array([1..15]);
constraint int_lin_le([-10, -6, 1, -10, 5], [q[1], q[2], q[8], q[11], q[13]], -153);
constraint int_lin_le([-9, 2, -1, -6, 8], [q[3], q[6], q[9], q[10], q[14]], -74);
constraint int_lin_le([-6, -1, -10, -9, 1], [q[9], q[10], q[13], q[14], q[15]], -157);
constraint int_lin_le([-1, 1, 2, 10, -7], [q[2], q[6], q[8], q[11], q[12]], 29);
constraint int_lin_le([1, 4, -5, -7, -10], [q[4], q[5], q[7], q[12], q[15]], -119);
constraint int_lin_le([1, 6, 7, 5, 10], [q[3], q[8], q[11], q[14], q[15]], 184);
constraint int_lin_le([1, 9, 2, -4, 4], [q[2], q[4], q[5], q[6], q[9]], 74);
constraint int_lin_le([2, -2, 2, 5, -6], [q[1], q[7], q[10], q[12], q[13]], 18);
constraint int_lin_le([9, -4, -6, -5, 2], [q[1], q[3], q[4], q[5], q[7]], 4);
constraint int_lin_le([9, -1, -5, -7, -9], [q[2], q[3], q[4], q[6], q[15]], -65);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
