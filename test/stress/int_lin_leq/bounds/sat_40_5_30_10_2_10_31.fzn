predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..30] of var 1..10: q :: output_array([1..30]);
constraint int_lin_le([-10, -4, -2, 2, -9], [q[12], q[18], q[19], q[27], q[30]], -112);
constraint int_lin_le([-9, -7, 10, 2, -5], [q[3], q[12], q[14], q[15], q[28]], -19);
constraint int_lin_le([-9, -5, 6, -1, 6], [q[6], q[8], q[19], q[21], q[22]], 26);
constraint int_lin_le([-9, -4, -3, 5, 10], [q[1], q[17], q[24], q[26], q[30]], 62);
constraint int_lin_le([-9, 3, -2, 3, 7], [q[2], q[10], q[13], q[14], q[27]], 53);
constraint int_lin_le([-7, -1, 7, 2, 9], [q[1], q[7], q[13], q[15], q[26]], 69);
constraint int_lin_le([-6, -1, 7, 4, 1], [q[5], q[20], q[21], q[22], q[30]], 24);
constraint int_lin_le([-6, 8, -6, -1, -8], [q[4], q[9], q[13], q[28], q[30]], -138);
constraint int_lin_le([-5, -8, 2, 3, -9], [q[2], q[4], q[5], q[9], q[12]], -74);
constraint int_lin_le([-5, -7, 8, -5, -7], [q[2], q[7], q[8], q[11], q[16]], -72);
constraint int_lin_le([-5, 1, 10, -9, 1], [q[5], q[13], q[20], q[22], q[29]], 22);
constraint int_lin_le([-5, 2, 10, -6, -9], [q[4], q[7], q[13], q[25], q[27]], -40);
constraint int_lin_le([-5, 5, -1, 6, -7], [q[1], q[5], q[20], q[24], q[25]], 40);
constraint int_lin_le([-4, 9, 9, -3, 7], [q[3], q[9], q[17], q[24], q[28]], 24);
constraint int_lin_le([-3, 1, -7, -1, 3], [q[10], q[14], q[15], q[17], q[25]], -46);
constraint int_lin_le([-3, 3, -2, -2, 2], [q[6], q[10], q[11], q[14], q[19]], 15);
constraint int_lin_le([-3, 6, 4, 2, 9], [q[3], q[7], q[12], q[15], q[23]], 60);
constraint int_lin_le([-2, -10, 4, 9, 8], [q[2], q[8], q[18], q[22], q[27]], 6);
constraint int_lin_le([1, -6, -4, -2, -2], [q[5], q[18], q[21], q[23], q[29]], -39);
constraint int_lin_le([1, -5, 6, 6, 2], [q[4], q[5], q[11], q[16], q[29]], 120);
constraint int_lin_le([1, -4, -9, -1, 4], [q[2], q[8], q[12], q[19], q[24]], -16);
constraint int_lin_le([1, -1, -1, -1, 10], [q[6], q[7], q[19], q[25], q[28]], 48);
constraint int_lin_le([1, 6, -8, 4, 2], [q[13], q[18], q[20], q[24], q[27]], 26);
constraint int_lin_le([2, -9, -10, 5, -1], [q[5], q[14], q[18], q[24], q[27]], -7);
constraint int_lin_le([2, 8, -2, -9, 4], [q[16], q[17], q[21], q[26], q[29]], 38);
constraint int_lin_le([3, 1, -10, -6, 10], [q[3], q[6], q[13], q[21], q[29]], 44);
constraint int_lin_le([3, 2, 3, -7, -8], [q[6], q[14], q[17], q[24], q[25]], -74);
constraint int_lin_le([3, 2, 9, -7, 7], [q[8], q[9], q[10], q[16], q[19]], 100);
constraint int_lin_le([4, -7, -2, 10, 2], [q[8], q[15], q[16], q[20], q[22]], 36);
constraint int_lin_le([4, -5, 3, -6, 3], [q[1], q[14], q[15], q[21], q[25]], -9);
constraint int_lin_le([4, -3, 1, 1, -9], [q[2], q[9], q[10], q[17], q[25]], -16);
constraint int_lin_le([5, -10, 5, -9, -4], [q[3], q[4], q[9], q[11], q[12]], -109);
constraint int_lin_le([5, 3, -9, 7, 6], [q[1], q[7], q[23], q[26], q[30]], 53);
constraint int_lin_le([5, 6, 10, 3, -3], [q[8], q[9], q[13], q[15], q[17]], 125);
constraint int_lin_le([6, -9, 8, -4, 3], [q[11], q[18], q[22], q[23], q[29]], 79);
constraint int_lin_le([6, -1, -7, -3, -2], [q[4], q[6], q[10], q[23], q[26]], -33);
constraint int_lin_le([7, -10, -10, 9, 1], [q[10], q[14], q[18], q[23], q[28]], 39);
constraint int_lin_le([7, -8, -3, -9, -4], [q[3], q[11], q[15], q[17], q[26]], -62);
constraint int_lin_le([7, -1, 10, 2, -8], [q[1], q[6], q[9], q[16], q[29]], -35);
constraint int_lin_le([7, 5, 7, -4, -2], [q[4], q[7], q[10], q[11], q[29]], 74);
constraint int_lin_le([8, -8, -7, 7, -1], [q[3], q[12], q[20], q[21], q[28]], -11);
constraint int_lin_le([8, -8, 5, -7, 4], [q[2], q[4], q[5], q[27], q[30]], -35);
constraint int_lin_le([8, -4, 4, 10, 8], [q[8], q[11], q[23], q[24], q[30]], 226);
constraint int_lin_le([9, -7, 1, 4, 1], [q[1], q[7], q[19], q[26], q[27]], 16);
constraint int_lin_le([10, 5, 3, 10, -1], [q[16], q[18], q[20], q[22], q[28]], 155);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
