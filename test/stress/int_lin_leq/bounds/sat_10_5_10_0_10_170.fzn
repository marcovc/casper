predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..15] of var 1..10: q :: output_array([1..15]);
constraint int_lin_le([-10, 3, -9, -3, -7], [q[5], q[7], q[8], q[10], q[14]], -168);
constraint int_lin_le([-7, 6, 8, -1, 7], [q[8], q[9], q[12], q[13], q[14]], 26);
constraint int_lin_le([-6, 8, -10, -10, 1], [q[1], q[5], q[6], q[11], q[15]], -93);
constraint int_lin_le([-5, 10, -7, 10, 3], [q[2], q[3], q[4], q[9], q[11]], 4);
constraint int_lin_le([-3, 3, -4, -1, -10], [q[1], q[6], q[12], q[13], q[15]], -51);
constraint int_lin_le([-2, -3, -4, -8, 7], [q[1], q[2], q[4], q[8], q[15]], -119);
constraint int_lin_le([3, 5, 7, 6, -1], [q[2], q[3], q[4], q[7], q[10]], 90);
constraint int_lin_le([3, 9, -4, -9, 5], [q[1], q[4], q[5], q[8], q[14]], 6);
constraint int_lin_le([4, -4, 8, 9, -8], [q[9], q[10], q[11], q[12], q[15]], 33);
constraint int_lin_le([10, -6, 3, -8, 4], [q[2], q[3], q[6], q[7], q[13]], 81);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
