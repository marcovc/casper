predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..30] of var 1..50: q :: output_array([1..30]);
constraint int_lin_le([-3, -9, 3, -3, 7, 10, 8, 8, -8, -8, -10, 2, -7, -7, 6, -8, 6, -5, 3, -9, -6, 6, 10, 4, 8], [q[2], q[3], q[4], q[5], q[7], q[8], q[9], q[10], q[11], q[13], q[14], q[15], q[17], q[18], q[19], q[20], q[21], q[22], q[24], q[25], q[26], q[27], q[28], q[29], q[30]], -1245);
constraint int_lin_le([-3, 2, -7, -7, -1, -8, -1, -6, -4, 1, 7, 5, 4, -2, -4, -4, -9, 5, 1, 10, -5, 8, 2, 10, -7], [q[1], q[2], q[3], q[4], q[5], q[6], q[8], q[9], q[10], q[11], q[12], q[13], q[14], q[16], q[17], q[18], q[19], q[20], q[21], q[24], q[25], q[26], q[27], q[28], q[30]], 42);
constraint int_lin_le([-1, -2, -10, 5, 4, 10, -4, 6, 7, 1, 6, 9, -5, 1, -6, 3, 1, 10, 1, 1, 9, 7, 4, -10, -4], [q[1], q[2], q[3], q[4], q[5], q[6], q[7], q[10], q[11], q[12], q[13], q[15], q[16], q[17], q[18], q[19], q[20], q[21], q[23], q[24], q[25], q[26], q[27], q[28], q[30]], 631);
constraint int_lin_le([3, 7, -10, -10, 7, 10, 6, 1, 1, -1, 7, -7, -8, 10, -8, -5, 7, 7, -10, 1, 9, 7, -1, -3, -10], [q[1], q[3], q[4], q[5], q[6], q[8], q[9], q[10], q[11], q[12], q[14], q[15], q[16], q[17], q[18], q[21], q[22], q[23], q[24], q[25], q[26], q[27], q[28], q[29], q[30]], 286);
constraint int_lin_le([5, -3, -9, 5, 7, -3, -2, 9, 5, -7, 4, 1, -4, 9, -8, 1, -10, -5, -4, -4, 9, 6, -6, -10, -3], [q[1], q[2], q[3], q[4], q[5], q[6], q[7], q[8], q[9], q[10], q[12], q[14], q[15], q[16], q[18], q[19], q[20], q[21], q[22], q[23], q[25], q[26], q[27], q[28], q[30]], -240);
constraint int_lin_le([5, -2, 4, -3, 8, 5, -3, 7, -9, -1, 1, -7, -3, 1, 6, -7, 7, -2, -3, 1, 3, 9, 4, -6, 7], [q[1], q[3], q[4], q[5], q[6], q[7], q[8], q[9], q[10], q[11], q[12], q[13], q[14], q[15], q[16], q[17], q[18], q[21], q[22], q[23], q[24], q[25], q[27], q[28], q[29]], 516);
constraint int_lin_le([6, 1, -9, 1, 1, -3, 4, 2, -2, 6, -2, 8, 1, 3, 10, -2, 1, 8, 1, -6, 1, 1, -4, -6, -2], [q[1], q[2], q[3], q[4], q[5], q[6], q[7], q[8], q[9], q[11], q[14], q[15], q[16], q[17], q[18], q[19], q[20], q[21], q[23], q[24], q[25], q[26], q[27], q[28], q[30]], 275);
constraint int_lin_le([9, -2, 6, 9, 1, -4, -7, -10, 10, -4, -8, 7, 8, -7, -3, 6, -3, -9, 10, -5, -8, 6, 5, -5, 9], [q[1], q[3], q[4], q[5], q[6], q[7], q[8], q[10], q[11], q[12], q[13], q[14], q[16], q[17], q[18], q[19], q[20], q[21], q[22], q[23], q[24], q[25], q[26], q[27], q[30]], 726);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
