predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..30] of var 1..50: q :: output_array([1..30]);
constraint int_lin_le([-9, -3, -6, -8, 10, -2, 1, 10, 4, -5, -8, 9, 7, 2, -7, 2, -5, -2, -1, -7, 9, -8, 10, -2, -5], [q[2], q[3], q[4], q[5], q[6], q[7], q[8], q[9], q[11], q[13], q[14], q[15], q[16], q[17], q[18], q[19], q[20], q[21], q[22], q[23], q[24], q[25], q[26], q[28], q[29]], -1056);
constraint int_lin_le([-2, -6, -1, 4, -1, -7, 2, 2, -10, -4, 10, -8, 4, 2, -7, 2, 2, -8, 9, -7, 6, 2, 1, 8, 1], [q[2], q[3], q[4], q[5], q[6], q[7], q[8], q[9], q[10], q[11], q[12], q[13], q[14], q[15], q[16], q[17], q[18], q[19], q[20], q[21], q[24], q[25], q[26], q[28], q[29]], 179);
constraint int_lin_le([-1, -3, 5, 6, -1, 3, 1, 3, -1, -4, 8, -8, 5, -7, 3, -8, 10, 9, 3, 9, 1, -3, -2, 7, 5], [q[1], q[2], q[3], q[4], q[5], q[6], q[7], q[8], q[9], q[10], q[11], q[12], q[13], q[15], q[16], q[18], q[20], q[21], q[22], q[23], q[24], q[25], q[26], q[28], q[29]], 1337);
constraint int_lin_le([1, -5, -6, 5, -2, 1, -4, -10, -9, 8, 9, 8, 3, 1, -7, -8, -4, -6, 1, -10, -9, 10, 6, -1, -4], [q[2], q[3], q[4], q[5], q[7], q[8], q[9], q[10], q[11], q[12], q[13], q[14], q[16], q[17], q[18], q[19], q[20], q[21], q[23], q[24], q[25], q[26], q[27], q[29], q[30]], -944);
constraint int_lin_le([5, -3, 5, -1, -1, 5, -4, -4, 6, -7, 8, 6, 10, -4, 4, 8, 2, -2, -3, -4, -4, -2, -1, 10, -1], [q[1], q[2], q[3], q[4], q[5], q[6], q[7], q[8], q[9], q[10], q[11], q[12], q[13], q[14], q[16], q[17], q[20], q[22], q[23], q[24], q[25], q[27], q[28], q[29], q[30]], 772);
constraint int_lin_le([5, 5, 6, -5, -7, 9, -8, -2, -1, -5, 5, -8, -4, -3, 1, 9, -10, -10, 1, -1, 1, -8, 7, -8, -9], [q[1], q[2], q[4], q[5], q[6], q[8], q[9], q[10], q[12], q[13], q[14], q[15], q[16], q[17], q[18], q[19], q[20], q[22], q[24], q[25], q[26], q[27], q[28], q[29], q[30]], -1494);
constraint int_lin_le([7, -5, 1, 3, -8, -7, -10, 10, 1, 1, 4, 1, -9, 1, -5, 3, -10, -1, -3, 1, -1, 6, -10, -5, 8], [q[1], q[2], q[3], q[4], q[5], q[6], q[7], q[9], q[10], q[11], q[12], q[13], q[14], q[15], q[16], q[17], q[18], q[20], q[21], q[23], q[24], q[25], q[27], q[28], q[30]], -1070);
constraint int_lin_le([8, -3, -4, -8, 6, 6, 2, -8, 2, 9, -8, -6, -5, -2, -5, -9, -5, -3, -1, -7, 3, -7, 10, -1, 5], [q[1], q[2], q[3], q[4], q[5], q[6], q[7], q[8], q[9], q[10], q[11], q[12], q[13], q[14], q[15], q[16], q[18], q[20], q[21], q[22], q[23], q[24], q[26], q[29], q[30]], -669);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
