predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..70] of var 1..10: q :: output_array([1..70]);
constraint int_eq(1, q[63]);
constraint int_lin_eq([1, 10, -6, -1, 2, 4, -7, 1, 8, 8, -1, -6, -10, -7, -2, -6, -5, 1, -10, -6, -5, 6, -8, -8, 7, -5, 4, -9, -4, 6, 3, 6, -2, -3, -10, -3, 7, -10, -5, -9, -7, 4, -2, -6, 7, -6, 8, 9, -3, 4], [q[1], q[2], q[3], q[4], q[6], q[7], q[8], q[9], q[11], q[12], q[13], q[14], q[15], q[16], q[18], q[19], q[20], q[21], q[22], q[23], q[24], q[25], q[26], q[28], q[29], q[30], q[31], q[32], q[33], q[34], q[36], q[37], q[38], q[39], q[40], q[44], q[45], q[46], q[48], q[50], q[51], q[53], q[54], q[58], q[59], q[62], q[64], q[65], q[66], q[69]], -373);
constraint int_lin_eq([3, -1, 4, 10, -2, -9, -10, -7, -7, -9, -3, -9, 8, -4, -1, 5, 4, -7, -1, 3, -2, 7, 9, -7, 7, 5, 4, 4, 7, -2, 10, 5, -4, -2, 4, -6, -2, 1, 7, -7, 10, -2, 2, -5, 2, 8, -9, 8, -8, -5], [q[2], q[3], q[4], q[6], q[7], q[8], q[10], q[11], q[13], q[14], q[15], q[16], q[17], q[18], q[19], q[21], q[22], q[24], q[25], q[27], q[30], q[31], q[34], q[35], q[36], q[37], q[38], q[40], q[41], q[42], q[43], q[44], q[45], q[46], q[47], q[48], q[49], q[52], q[53], q[55], q[57], q[58], q[60], q[61], q[64], q[65], q[66], q[68], q[69], q[70]], 110);
constraint int_lin_eq([7, -5, 10, -7, -9, 2, 1, -2, -3, 8, -7, -7, 6, -9, -9, 10, 2, 5, -6, -5, -8, -1, 6, 3, 6, 3, 1, 4, 3, -6, -7, 8, -6, 6, -8, 8, -1, 6, -6, -10, -7, -8, 6, 1, -1, -8, -1, 1, 8, 4], [q[1], q[4], q[5], q[7], q[8], q[9], q[10], q[11], q[12], q[13], q[14], q[16], q[17], q[18], q[19], q[20], q[24], q[25], q[26], q[27], q[28], q[29], q[31], q[32], q[34], q[36], q[37], q[38], q[39], q[40], q[41], q[43], q[45], q[47], q[49], q[50], q[51], q[52], q[53], q[54], q[55], q[56], q[60], q[61], q[62], q[64], q[66], q[67], q[68], q[69]], -229);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
