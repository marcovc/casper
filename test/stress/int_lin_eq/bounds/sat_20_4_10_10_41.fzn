predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..40] of var 1..10: q :: output_array([1..40]);
constraint int_lin_eq([-8, 7, 3, 3], [q[3], q[13], q[29], q[35]], 56);
constraint int_lin_eq([-8, 7, 6, -8], [q[12], q[19], q[22], q[26]], 17);
constraint int_lin_eq([-7, -10, 9, -4], [q[1], q[19], q[33], q[38]], -63);
constraint int_lin_eq([-7, -7, 9, -9], [q[8], q[9], q[29], q[33]], -129);
constraint int_lin_eq([-7, -2, 5, -8], [q[6], q[13], q[17], q[27]], -91);
constraint int_lin_eq([-7, 5, 10, 10], [q[2], q[10], q[23], q[40]], 109);
constraint int_lin_eq([-6, -4, 4, -2], [q[1], q[5], q[18], q[21]], -42);
constraint int_lin_eq([-6, 7, 2, -5], [q[16], q[30], q[31], q[36]], 21);
constraint int_lin_eq([-5, -7, -1, -6], [q[5], q[26], q[28], q[40]], -113);
constraint int_lin_eq([-5, -4, 10, -5], [q[24], q[28], q[30], q[38]], -42);
constraint int_lin_eq([-4, 1, 2, 8], [q[20], q[22], q[37], q[39]], 10);
constraint int_lin_eq([-3, -1, -1, 7], [q[4], q[15], q[31], q[39]], -20);
constraint int_lin_eq([-2, -1, -4, -1], [q[2], q[6], q[7], q[25]], -46);
constraint int_lin_eq([-1, -2, 5, 6], [q[20], q[25], q[32], q[37]], 67);
constraint int_lin_eq([3, 6, -6, 4], [q[11], q[16], q[34], q[35]], -20);
constraint int_lin_eq([4, 6, -7, -8], [q[4], q[10], q[15], q[32]], -18);
constraint int_lin_eq([7, -1, 7, -5], [q[8], q[11], q[14], q[23]], 50);
constraint int_lin_eq([9, 1, 7, -1], [q[3], q[7], q[14], q[36]], 55);
constraint int_lin_eq([9, 3, -6, -5], [q[9], q[17], q[21], q[24]], 45);
constraint int_lin_eq([9, 7, 4, -7], [q[12], q[18], q[27], q[34]], 39);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
