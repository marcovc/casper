predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..40] of var 1..10: q :: output_array([1..40]);
constraint int_lin_eq([-9, -8, -6, -4], [q[1], q[21], q[24], q[33]], -120);
constraint int_lin_eq([-9, -3, -8, 10], [q[11], q[18], q[22], q[40]], -108);
constraint int_lin_eq([-8, -4, -8, 9], [q[8], q[15], q[25], q[37]], -82);
constraint int_lin_eq([-6, 5, -1, -7], [q[5], q[18], q[19], q[39]], -93);
constraint int_lin_eq([-2, -4, 5, -5], [q[16], q[17], q[26], q[33]], -47);
constraint int_lin_eq([-2, 9, -1, -6], [q[1], q[9], q[13], q[20]], -20);
constraint int_lin_eq([1, 10, -9, -3], [q[6], q[7], q[27], q[30]], 22);
constraint int_lin_eq([2, 2, -5, -1], [q[7], q[9], q[26], q[28]], -9);
constraint int_lin_eq([2, 5, -9, -1], [q[2], q[24], q[29], q[34]], 23);
constraint int_lin_eq([2, 10, 7, -10], [q[4], q[19], q[21], q[23]], 15);
constraint int_lin_eq([3, -1, -3, -1], [q[2], q[13], q[32], q[40]], -6);
constraint int_lin_eq([4, -10, 4, -2], [q[3], q[5], q[10], q[35]], -34);
constraint int_lin_eq([5, 8, 5, -1], [q[14], q[25], q[28], q[36]], 110);
constraint int_lin_eq([6, 7, -4, 8], [q[3], q[6], q[22], q[27]], 39);
constraint int_lin_eq([7, -10, -9, 9], [q[10], q[11], q[12], q[16]], 5);
constraint int_lin_eq([8, -7, -7, 1], [q[29], q[31], q[36], q[38]], -41);
constraint int_lin_eq([10, -6, 5, 5], [q[14], q[23], q[34], q[35]], 101);
constraint int_lin_eq([10, -5, -10, -9], [q[4], q[17], q[20], q[30]], -127);
constraint int_lin_eq([10, 1, 8, -5], [q[12], q[31], q[32], q[39]], 44);
constraint int_lin_eq([10, 5, 8, -3], [q[8], q[15], q[37], q[38]], 96);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
