predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..50] of var 1..10: q :: output_array([1..50]);
constraint int_eq(7, q[22]);
constraint int_lin_eq([-10, -1, -3], [q[9], q[31], q[48]], -70);
constraint int_lin_eq([-9, 9, 3], [q[15], q[38], q[47]], 39);
constraint int_lin_eq([-7, 10, 1], [q[5], q[33], q[43]], 68);
constraint int_lin_eq([-5, -5, 1], [q[10], q[18], q[26]], -82);
constraint int_lin_eq([-5, -4, 8], [q[13], q[35], q[42]], 12);
constraint int_lin_eq([-4, -10, 5], [q[15], q[39], q[42]], -35);
constraint int_lin_eq([-4, -8, 6], [q[12], q[28], q[45]], -48);
constraint int_lin_eq([-4, -7, 4], [q[1], q[3], q[11]], -84);
constraint int_lin_eq([-4, 10, -9], [q[6], q[7], q[14]], -10);
constraint int_lin_eq([-2, -8, 3], [q[23], q[34], q[37]], -88);
constraint int_lin_eq([-2, -2, 1], [q[30], q[32], q[39]], -14);
constraint int_lin_eq([-1, -3, 9], [q[12], q[13], q[41]], 44);
constraint int_lin_eq([-1, 3, -9], [q[40], q[44], q[49]], -8);
constraint int_lin_eq([1, -1, 1], [q[20], q[25], q[36]], 5);
constraint int_lin_eq([1, 9, -5], [q[4], q[16], q[19]], -4);
constraint int_lin_eq([2, -1, -4], [q[34], q[38], q[43]], -10);
constraint int_lin_eq([5, -10, 1], [q[9], q[18], q[31]], -61);
constraint int_lin_eq([7, 4, 1], [q[17], q[21], q[50]], 80);
constraint int_lin_eq([8, -1, -7], [q[2], q[27], q[29]], -27);
constraint int_lin_eq([10, 9, -1], [q[8], q[24], q[46]], 93);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
