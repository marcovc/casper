predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..50] of var 1..7: q :: output_array([1..50]);
constraint int_lin_eq([-10, -8, -9, -7, 6], [q[9], q[10], q[12], q[40], q[47]], -135);
constraint int_lin_eq([-9, -6, 7, 9, 6], [q[13], q[30], q[31], q[34], q[45]], 28);
constraint int_lin_eq([-9, 1, -1, 7, 4], [q[32], q[41], q[43], q[47], q[50]], 17);
constraint int_lin_eq([-9, 10, 3, -9, 6], [q[8], q[9], q[12], q[35], q[37]], 31);
constraint int_lin_eq([-8, 2, -4, -7, 10], [q[5], q[10], q[25], q[26], q[42]], -18);
constraint int_lin_eq([-7, 6, -6, -10, -4], [q[14], q[21], q[39], q[40], q[50]], -63);
constraint int_lin_eq([-6, 4, -5, 3, -5], [q[14], q[15], q[19], q[25], q[41]], -21);
constraint int_lin_eq([-5, 6, 10, 7, 6], [q[1], q[13], q[20], q[30], q[37]], 118);
constraint int_lin_eq([-5, 10, -7, 5, 6], [q[5], q[18], q[29], q[31], q[36]], 92);
constraint int_lin_eq([-4, 1, -5, 8, 3], [q[1], q[5], q[22], q[28], q[38]], 30);
constraint int_lin_eq([-4, 7, -5, -1, -1], [q[3], q[11], q[19], q[27], q[49]], 1);
constraint int_lin_eq([-3, 6, -6, 1, -6], [q[1], q[4], q[16], q[20], q[36]], -22);
constraint int_lin_eq([-1, -1, 8, -6, -2], [q[2], q[24], q[38], q[40], q[46]], 23);
constraint int_lin_eq([-1, 4, -5, -2, -5], [q[14], q[22], q[28], q[44], q[48]], -22);
constraint int_lin_eq([-1, 4, 5, -8, -4], [q[4], q[6], q[24], q[26], q[50]], -29);
constraint int_lin_eq([-1, 5, -8, -9, 1], [q[17], q[25], q[35], q[43], q[44]], -53);
constraint int_lin_eq([-1, 7, 6, 2, 10], [q[7], q[11], q[23], q[46], q[49]], 107);
constraint int_lin_eq([2, -6, 6, -3, 6], [q[6], q[8], q[26], q[27], q[42]], 29);
constraint int_lin_eq([2, 1, -3, 3, -5], [q[16], q[19], q[28], q[32], q[33]], -13);
constraint int_lin_eq([2, 6, 6, -3, -1], [q[8], q[11], q[21], q[27], q[48]], 32);
constraint int_lin_eq([3, -1, -1, -5, -3], [q[13], q[31], q[32], q[36], q[42]], -37);
constraint int_lin_eq([3, 5, -1, 10, -1], [q[2], q[7], q[16], q[20], q[37]], 58);
constraint int_lin_eq([5, -5, -5, 2, -7], [q[10], q[15], q[24], q[34], q[48]], -23);
constraint int_lin_eq([5, 4, 1, -5, -10], [q[3], q[17], q[23], q[39], q[46]], -5);
constraint int_lin_eq([5, 7, -4, -7, -7], [q[2], q[4], q[12], q[38], q[47]], -49);
constraint int_lin_eq([8, -7, -7, -1, 6], [q[18], q[30], q[34], q[44], q[45]], -29);
constraint int_lin_eq([8, -5, -5, 7, -5], [q[7], q[15], q[17], q[21], q[29]], 4);
constraint int_lin_eq([8, 9, 10, -10, -1], [q[29], q[33], q[35], q[43], q[49]], 105);
constraint int_lin_eq([10, 9, -1, 5, -8], [q[3], q[9], q[22], q[41], q[45]], 88);
constraint int_lin_eq([10, 9, 7, 9, -1], [q[6], q[18], q[23], q[33], q[39]], 139);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
