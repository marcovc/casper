predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..50] of var 1..7: q :: output_array([1..50]);
constraint int_lin_eq([-10, -5, -2, -8, -2], [q[6], q[10], q[26], q[41], q[49]], -89);
constraint int_lin_eq([-10, 10, -2, -1, -1], [q[11], q[13], q[15], q[22], q[38]], -8);
constraint int_lin_eq([-8, -1, -8, -1, 6], [q[6], q[27], q[28], q[29], q[36]], -48);
constraint int_lin_eq([-8, 8, -9, 10, 9], [q[3], q[5], q[8], q[31], q[39]], 27);
constraint int_lin_eq([-7, 1, 5, 6, 3], [q[12], q[32], q[33], q[37], q[47]], 39);
constraint int_lin_eq([-6, -4, 10, -5, 4], [q[12], q[14], q[30], q[43], q[46]], -33);
constraint int_lin_eq([-5, 4, -3, -10, -10], [q[24], q[40], q[43], q[45], q[50]], -110);
constraint int_lin_eq([-4, -6, 1, 6, 7], [q[9], q[31], q[34], q[38], q[49]], -7);
constraint int_lin_eq([-3, -9, -6, -2, 4], [q[15], q[18], q[41], q[42], q[45]], -36);
constraint int_lin_eq([-3, -7, -7, 9, 5], [q[1], q[16], q[23], q[25], q[34]], -42);
constraint int_lin_eq([-3, 8, 3, -1, -3], [q[1], q[11], q[20], q[22], q[29]], 9);
constraint int_lin_eq([-2, -3, 10, 7, 8], [q[3], q[7], q[23], q[36], q[39]], 79);
constraint int_lin_eq([-2, 4, -4, -6, 9], [q[19], q[24], q[29], q[47], q[48]], -17);
constraint int_lin_eq([-1, -6, 3, -2, 5], [q[2], q[10], q[13], q[40], q[44]], -1);
constraint int_lin_eq([-1, 1, -3, -8, 9], [q[4], q[6], q[8], q[27], q[35]], 34);
constraint int_lin_eq([-1, 3, -1, 2, -7], [q[9], q[17], q[22], q[46], q[48]], -10);
constraint int_lin_eq([-1, 3, 2, -1, 3], [q[10], q[20], q[38], q[41], q[44]], 29);
constraint int_lin_eq([1, -3, -9, 10, -5], [q[8], q[25], q[35], q[36], q[43]], -55);
constraint int_lin_eq([3, 2, -8, -8, 4], [q[17], q[19], q[26], q[47], q[50]], -28);
constraint int_lin_eq([3, 6, -5, -3, 8], [q[9], q[28], q[39], q[42], q[50]], 32);
constraint int_lin_eq([4, -10, 9, -10, -8], [q[4], q[13], q[21], q[26], q[49]], -6);
constraint int_lin_eq([5, -6, 6, -1, 8], [q[3], q[16], q[31], q[33], q[37]], 33);
constraint int_lin_eq([5, -2, 4, 10, 2], [q[5], q[16], q[21], q[28], q[48]], 66);
constraint int_lin_eq([5, 7, 5, 5, -9], [q[11], q[14], q[15], q[19], q[42]], 46);
constraint int_lin_eq([6, -6, -5, 8, -7], [q[1], q[2], q[21], q[27], q[44]], -66);
constraint int_lin_eq([7, -9, 2, -1, -6], [q[24], q[25], q[32], q[33], q[37]], 3);
constraint int_lin_eq([7, -1, 4, 5, -6], [q[5], q[12], q[17], q[18], q[34]], 6);
constraint int_lin_eq([9, -6, -2, -1, -3], [q[4], q[20], q[32], q[40], q[46]], 6);
constraint int_lin_eq([9, -5, -2, -9, -7], [q[2], q[7], q[18], q[30], q[35]], -63);
constraint int_lin_eq([10, -1, 4, 8, 4], [q[7], q[14], q[23], q[30], q[45]], 120);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
