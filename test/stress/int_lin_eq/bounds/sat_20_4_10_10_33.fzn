predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..40] of var 1..10: q :: output_array([1..40]);
constraint int_lin_eq([-9, -7, 5, -5], [q[4], q[12], q[24], q[33]], -97);
constraint int_lin_eq([-9, 6, -4, -3], [q[9], q[10], q[11], q[21]], -66);
constraint int_lin_eq([-6, 10, 10, 8], [q[2], q[5], q[8], q[16]], 104);
constraint int_lin_eq([-5, -10, -8, -6], [q[3], q[12], q[14], q[17]], -209);
constraint int_lin_eq([-1, -6, 6, -6], [q[3], q[7], q[26], q[37]], -51);
constraint int_lin_eq([-1, 4, 3, 1], [q[6], q[20], q[34], q[39]], 20);
constraint int_lin_eq([1, 6, -1, -3], [q[10], q[29], q[32], q[37]], 1);
constraint int_lin_eq([3, 8, -3, -10], [q[18], q[32], q[34], q[35]], -8);
constraint int_lin_eq([3, 9, 10, 3], [q[13], q[19], q[36], q[40]], 121);
constraint int_lin_eq([4, -10, 10, -7], [q[19], q[22], q[23], q[29]], -17);
constraint int_lin_eq([4, -2, 8, -8], [q[4], q[18], q[26], q[35]], 36);
constraint int_lin_eq([5, -5, 2, 1], [q[5], q[8], q[13], q[31]], 40);
constraint int_lin_eq([6, 1, -8, 7], [q[2], q[15], q[27], q[40]], 38);
constraint int_lin_eq([6, 8, 6, 9], [q[1], q[15], q[22], q[28]], 182);
constraint int_lin_eq([8, -6, 2, 8], [q[11], q[27], q[33], q[38]], 48);
constraint int_lin_eq([8, 3, 6, -6], [q[7], q[9], q[25], q[31]], 143);
constraint int_lin_eq([9, -8, 2, -3], [q[6], q[16], q[17], q[28]], 27);
constraint int_lin_eq([10, -7, 5, 4], [q[1], q[20], q[36], q[39]], 77);
constraint int_lin_eq([10, -7, 10, -5], [q[21], q[23], q[24], q[30]], 75);
constraint int_lin_eq([10, 6, 7, -10], [q[14], q[25], q[30], q[38]], 150);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
