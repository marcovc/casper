predicate all_different_int(array [int] of var int: x);
predicate all_equal_int(array [int] of var int: x);
predicate among(var int: n, array [int] of var int: x, set of int: v);
predicate array_int_lq(array [int] of var int: x, array [int] of var int: y);
predicate array_int_lt(array [int] of var int: x, array [int] of var int: y);
predicate array_set_partition(array [int] of var set of int: S, set of int: universe);
predicate at_least_int(int: n, array [int] of var int: x, int: v);
predicate at_most_int(int: n, array [int] of var int: x, int: v);
predicate bool_lin_ge(array [int] of int: a, array [int] of var bool: x, var int: c);
predicate bool_lin_gt(array [int] of int: a, array [int] of var bool: x, var int: c);
predicate bool_lin_lt(array [int] of int: a, array [int] of var bool: x, var int: c);
predicate bool_lin_ne(array [int] of int: a, array [int] of var bool: x, var int: c);
predicate count(array [int] of var int: x, var int: y, var int: c);
predicate cumulatives(array [int] of var int: s, array [int] of var int: d, array [int] of var int: r, var int: b);
predicate decreasing_bool(array [int] of var bool: x);
predicate decreasing_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate gecode_array_set_element_union(var set of int: x, array [int] of var set of int: y, var set of int: z);
predicate gecode_bin_packing_load(array [int] of var int: l, array [int] of var int: bin, array [int] of int: w, int: minIndex);
predicate gecode_circuit(array [int] of var int: x);
predicate gecode_int_set_channel(array [int] of var int: x, int: xoff, array [int] of var set of int: y, int: yoff);
predicate gecode_link_set_to_booleans(var set of int: s, array [int] of var bool: b, int: idx);
predicate gecode_member_bool_reif(array [int] of var bool: x, var bool: y, var bool: b);
predicate gecode_member_int_reif(array [int] of var int: x, var int: y, var bool: b);
predicate gecode_nooverlap(array [int] of var int: x, array [int] of var int: w, array [int] of var int: y, array [int] of var int: h);
predicate gecode_range(array [int] of var int: x, int: xoff, var set of int: s, var set of int: t);
predicate gecode_set_weights(array [int] of int: csi, array [int] of int: cs, var set of int: x, var int: y);
predicate global_cardinality(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate global_cardinality_closed(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts);
predicate global_cardinality_low_up(array [int] of var int: x, array [int] of int: cover, array [int] of int: lbound, array [int] of int: ubound);
predicate global_cardinality_low_up_closed(array [int] of var int: x, array [int] of int: cover, array [int] of int: lbound, array [int] of int: ubound);
predicate increasing_bool(array [int] of var bool: x);
predicate increasing_int(array [int] of var int: x);
predicate inverse_offsets(array [int] of var int: f, int: foff, array [int] of var int: invf, int: invfoff);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate member_bool(array [int] of var bool: x, var bool: y);
predicate member_int(array [int] of var int: x, var int: y);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate nvalue(var int: n, array [int] of var int: x);
predicate regular(array [int] of var int: x, int: Q, int: S, array [int, int] of int: d, int: q0, set of int: F);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..160] of var -4..5: q :: output_array([1..160]);
constraint int_lin_eq([-5, -5, 2, 3, -3], [q[12], q[53], q[97], q[101], q[138]], -6);
constraint int_lin_eq([-5, -5, 5, -2, -1], [q[24], q[65], q[123], q[142], q[143]], -6);
constraint int_lin_eq([-5, -4, -2, -1, 2], [q[12], q[24], q[96], q[103], q[109]], -1);
constraint int_lin_eq([-5, -4, 5, 2, 4], [q[3], q[48], q[95], q[112], q[133]], -5);
constraint int_lin_eq([-5, -3, -4, -1, -2], [q[44], q[91], q[95], q[105], q[144]], -4);
constraint int_lin_eq([-5, -1, -3, -4, 4], [q[35], q[70], q[76], q[86], q[148]], -10);
constraint int_lin_eq([-5, -1, -2, -3, -4], [q[87], q[98], q[110], q[112], q[121]], -16);
constraint int_lin_eq([-5, -1, -1, -1, -1], [q[64], q[95], q[120], q[143], q[152]], -24);
constraint int_lin_eq([-5, 1, -3, 2, 5], [q[29], q[85], q[101], q[124], q[147]], 0);
constraint int_lin_eq([-5, 2, -5, 4, -1], [q[28], q[35], q[77], q[86], q[133]], 0);
constraint int_lin_eq([-5, 3, -3, -4, 4], [q[72], q[75], q[107], q[132], q[137]], -27);
constraint int_lin_eq([-5, 4, -4, -4, 2], [q[27], q[29], q[60], q[66], q[94]], 12);
constraint int_lin_eq([-5, 4, 2, 5, -2], [q[14], q[40], q[87], q[123], q[158]], 19);
constraint int_lin_eq([-5, 5, -4, 5, -2], [q[8], q[38], q[104], q[135], q[154]], 44);
constraint int_lin_eq([-5, 5, -2, -1, 2], [q[27], q[42], q[121], q[131], q[135]], 11);
constraint int_lin_eq([-4, -5, 2, -4, -5], [q[52], q[98], q[120], q[151], q[153]], -3);
constraint int_lin_eq([-4, -4, -3, 2, -5], [q[1], q[19], q[64], q[98], q[99]], -12);
constraint int_lin_eq([-4, -3, 3, 5, 3], [q[9], q[31], q[113], q[142], q[152]], -7);
constraint int_lin_eq([-4, -3, 4, -3, -5], [q[10], q[67], q[80], q[97], q[134]], 30);
constraint int_lin_eq([-4, -2, -1, -4, -1], [q[2], q[60], q[77], q[78], q[106]], -27);
constraint int_lin_eq([-4, -1, 3, 4, 1], [q[4], q[23], q[118], q[119], q[140]], -6);
constraint int_lin_eq([-4, 1, -1, 2, -1], [q[43], q[143], q[150], q[153], q[157]], -2);
constraint int_lin_eq([-4, 2, -4, -1, -3], [q[36], q[49], q[67], q[77], q[118]], -27);
constraint int_lin_eq([-4, 2, -3, -1, -5], [q[68], q[73], q[129], q[144], q[160]], 16);
constraint int_lin_eq([-4, 4, -4, 1, 3], [q[7], q[32], q[34], q[73], q[87]], 26);
constraint int_lin_eq([-4, 5, -5, -5, -1], [q[28], q[89], q[102], q[113], q[156]], -16);
constraint int_lin_eq([-4, 5, 4, -1, -1], [q[31], q[37], q[74], q[99], q[143]], -11);
constraint int_lin_eq([-3, -5, -1, -3, 4], [q[14], q[35], q[57], q[95], q[123]], 26);
constraint int_lin_eq([-3, -5, 2, -2, 3], [q[88], q[113], q[114], q[139], q[155]], -21);
constraint int_lin_eq([-3, -5, 5, -1, -4], [q[12], q[13], q[41], q[45], q[136]], -6);
constraint int_lin_eq([-3, -3, 2, -5, 3], [q[20], q[78], q[137], q[142], q[154]], 16);
constraint int_lin_eq([-3, -2, -4, -2, 5], [q[32], q[90], q[125], q[145], q[160]], -36);
constraint int_lin_eq([-3, -2, 1, 4, -2], [q[33], q[70], q[76], q[85], q[123]], 1);
constraint int_lin_eq([-3, -1, -2, -4, -3], [q[24], q[30], q[34], q[79], q[88]], -26);
constraint int_lin_eq([-3, -1, -1, -1, -4], [q[84], q[93], q[128], q[129], q[135]], -27);
constraint int_lin_eq([-3, -1, -1, 2, 5], [q[5], q[32], q[38], q[133], q[135]], 11);
constraint int_lin_eq([-3, -1, 1, -1, 2], [q[6], q[17], q[76], q[154], q[158]], 9);
constraint int_lin_eq([-3, -1, 3, 4, 4], [q[16], q[56], q[66], q[77], q[158]], 15);
constraint int_lin_eq([-3, -1, 4, 1, -5], [q[7], q[33], q[50], q[67], q[106]], 26);
constraint int_lin_eq([-3, -1, 5, -2, 3], [q[68], q[74], q[125], q[134], q[139]], 6);
constraint int_lin_eq([-3, 1, -5, -4, -2], [q[41], q[60], q[95], q[106], q[115]], 48);
constraint int_lin_eq([-3, 1, 4, -3, 1], [q[66], q[78], q[82], q[129], q[137]], 20);
constraint int_lin_eq([-3, 2, -4, 4, 4], [q[10], q[84], q[93], q[97], q[119]], -2);
constraint int_lin_eq([-3, 2, -2, -1, -1], [q[16], q[41], q[49], q[85], q[127]], -19);
constraint int_lin_eq([-3, 2, 1, 3, 4], [q[21], q[27], q[60], q[122], q[147]], -7);
constraint int_lin_eq([-3, 3, -4, 2, 5], [q[24], q[73], q[96], q[112], q[151]], -10);
constraint int_lin_eq([-3, 4, -1, -2, -1], [q[23], q[91], q[107], q[132], q[134]], 4);
constraint int_lin_eq([-3, 4, 4, -5, -3], [q[44], q[48], q[62], q[65], q[74]], -4);
constraint int_lin_eq([-3, 4, 4, 5, 1], [q[11], q[20], q[67], q[71], q[73]], 0);
constraint int_lin_eq([-3, 5, -2, 4, -2], [q[28], q[39], q[72], q[74], q[83]], -11);
constraint int_lin_eq([-3, 5, 2, -5, 5], [q[25], q[56], q[78], q[92], q[141]], -5);
constraint int_lin_eq([-3, 5, 2, -1, 2], [q[15], q[81], q[96], q[149], q[154]], 1);
constraint int_lin_eq([-2, -4, -4, 2, 4], [q[26], q[35], q[57], q[61], q[97]], -2);
constraint int_lin_eq([-2, -3, 2, -1, 5], [q[2], q[62], q[102], q[113], q[123]], 12);
constraint int_lin_eq([-2, -3, 2, 4, 2], [q[12], q[18], q[52], q[91], q[115]], -4);
constraint int_lin_eq([-2, -1, -4, 3, -4], [q[60], q[81], q[116], q[131], q[157]], -9);
constraint int_lin_eq([-2, -1, -3, 2, -3], [q[34], q[71], q[80], q[117], q[146]], -12);
constraint int_lin_eq([-2, -1, -1, -3, 3], [q[22], q[45], q[58], q[70], q[129]], -15);
constraint int_lin_eq([-2, -1, -1, -1, 3], [q[25], q[37], q[73], q[96], q[116]], 0);
constraint int_lin_eq([-2, -1, -1, 1, 5], [q[29], q[58], q[130], q[153], q[156]], -4);
constraint int_lin_eq([-2, 1, -2, -4, -1], [q[41], q[58], q[82], q[92], q[149]], 6);
constraint int_lin_eq([-2, 1, -1, -5, -1], [q[6], q[51], q[117], q[127], q[142]], 4);
constraint int_lin_eq([-2, 1, -1, -1, -4], [q[66], q[76], q[79], q[159], q[160]], 7);
constraint int_lin_eq([-2, 1, 3, -4, -1], [q[1], q[24], q[109], q[137], q[145]], 18);
constraint int_lin_eq([-2, 2, -4, -4, -4], [q[7], q[20], q[82], q[100], q[153]], 2);
constraint int_lin_eq([-2, 2, -1, -1, -4], [q[69], q[125], q[129], q[145], q[156]], 0);
constraint int_lin_eq([-2, 2, 1, -5, -2], [q[1], q[28], q[65], q[126], q[152]], -29);
constraint int_lin_eq([-2, 2, 3, -1, 2], [q[5], q[18], q[31], q[34], q[109]], -4);
constraint int_lin_eq([-2, 2, 4, 1, 2], [q[1], q[43], q[52], q[81], q[86]], 0);
constraint int_lin_eq([-2, 3, 1, 4, -4], [q[13], q[27], q[49], q[59], q[100]], 1);
constraint int_lin_eq([-2, 3, 4, -1, 1], [q[1], q[19], q[94], q[109], q[119]], 9);
constraint int_lin_eq([-2, 3, 4, -1, 2], [q[11], q[26], q[38], q[98], q[148]], -13);
constraint int_lin_eq([-2, 4, 5, 2, -5], [q[36], q[71], q[137], q[146], q[148]], 4);
constraint int_lin_eq([-2, 5, -3, -3, -2], [q[2], q[3], q[56], q[61], q[67]], 4);
constraint int_lin_eq([-2, 5, -1, 4, -1], [q[6], q[32], q[43], q[79], q[124]], 23);
constraint int_lin_eq([-1, -5, -3, -3, 3], [q[55], q[59], q[82], q[85], q[89]], -11);
constraint int_lin_eq([-1, -5, -1, -3, 2], [q[33], q[36], q[103], q[114], q[139]], -19);
constraint int_lin_eq([-1, -5, 4, -1, 1], [q[72], q[116], q[121], q[131], q[149]], -8);
constraint int_lin_eq([-1, -4, -3, 1, -2], [q[87], q[104], q[118], q[128], q[136]], 11);
constraint int_lin_eq([-1, -4, -2, -1, -1], [q[22], q[49], q[66], q[80], q[132]], -12);
constraint int_lin_eq([-1, -4, 1, 2, -1], [q[34], q[43], q[68], q[89], q[134]], -3);
constraint int_lin_eq([-1, -3, -1, -1, -1], [q[31], q[69], q[92], q[131], q[157]], -3);
constraint int_lin_eq([-1, -3, 1, 4, -2], [q[12], q[13], q[83], q[102], q[129]], 24);
constraint int_lin_eq([-1, -2, -5, 3, -1], [q[22], q[45], q[63], q[84], q[124]], 11);
constraint int_lin_eq([-1, -2, -4, -1, 3], [q[42], q[93], q[105], q[136], q[144]], -2);
constraint int_lin_eq([-1, -2, 4, -2, -3], [q[18], q[46], q[54], q[63], q[152]], -5);
constraint int_lin_eq([-1, -1, -4, -4, 2], [q[35], q[37], q[51], q[85], q[118]], -17);
constraint int_lin_eq([-1, -1, -4, 2, -4], [q[11], q[44], q[59], q[102], q[156]], 1);
constraint int_lin_eq([-1, -1, -4, 3, 4], [q[16], q[17], q[83], q[89], q[99]], -4);
constraint int_lin_eq([-1, -1, -3, -4, 3], [q[46], q[86], q[116], q[125], q[151]], -12);
constraint int_lin_eq([-1, -1, 1, -1, -1], [q[15], q[134], q[141], q[144], q[148]], 9);
constraint int_lin_eq([-1, -1, 1, 5, -2], [q[31], q[33], q[50], q[53], q[141]], 14);
constraint int_lin_eq([-1, 1, -2, -1, 2], [q[72], q[118], q[122], q[130], q[141]], 9);
constraint int_lin_eq([-1, 1, -1, -4, 1], [q[30], q[35], q[107], q[113], q[153]], -13);
constraint int_lin_eq([-1, 1, 1, 5, 4], [q[45], q[110], q[111], q[146], q[150]], -13);
constraint int_lin_eq([-1, 1, 5, -5, 3], [q[48], q[50], q[112], q[117], q[121]], 0);
constraint int_lin_eq([-1, 2, -5, -2, -3], [q[26], q[27], q[81], q[129], q[141]], 15);
constraint int_lin_eq([-1, 2, -4, -2, -1], [q[26], q[56], q[63], q[67], q[72]], -18);
constraint int_lin_eq([-1, 2, -1, 5, -4], [q[24], q[101], q[103], q[106], q[148]], 0);
constraint int_lin_eq([-1, 2, 2, 2, -5], [q[7], q[26], q[29], q[76], q[105]], 20);
constraint int_lin_eq([-1, 3, -2, -1, 3], [q[50], q[118], q[121], q[127], q[131]], 8);
constraint int_lin_eq([-1, 3, 2, 3, -3], [q[4], q[49], q[80], q[140], q[159]], 3);
constraint int_lin_eq([-1, 4, -4, 5, 4], [q[46], q[94], q[108], q[116], q[157]], -1);
constraint int_lin_eq([-1, 4, -3, -3, -5], [q[13], q[45], q[51], q[108], q[146]], -17);
constraint int_lin_eq([-1, 4, -3, -2, -3], [q[11], q[16], q[36], q[43], q[94]], -22);
constraint int_lin_eq([-1, 4, -2, 3, -2], [q[17], q[57], q[76], q[91], q[96]], 9);
constraint int_lin_eq([-1, 4, 3, -2, 3], [q[1], q[10], q[38], q[53], q[150]], -26);
constraint int_lin_eq([-1, 4, 4, 5, -4], [q[30], q[33], q[44], q[54], q[75]], 9);
constraint int_lin_eq([-1, 5, -3, 4, 5], [q[9], q[115], q[116], q[146], q[155]], -24);
constraint int_lin_eq([-1, 5, -1, -3, -3], [q[4], q[10], q[128], q[136], q[140]], -13);
constraint int_lin_eq([-1, 5, 1, 1, -5], [q[2], q[15], q[51], q[81], q[95]], 10);
constraint int_lin_eq([-1, 5, 2, -1, 5], [q[6], q[12], q[21], q[26], q[146]], 11);
constraint int_lin_eq([-1, 5, 3, -1, -3], [q[23], q[42], q[116], q[124], q[145]], -15);
constraint int_lin_eq([1, -5, -4, -1, 4], [q[40], q[43], q[58], q[130], q[137]], 7);
constraint int_lin_eq([1, -5, -3, 1, 5], [q[49], q[53], q[104], q[128], q[155]], -17);
constraint int_lin_eq([1, -5, 3, -2, -1], [q[21], q[39], q[58], q[96], q[101]], -12);
constraint int_lin_eq([1, -5, 5, -1, -5], [q[72], q[86], q[97], q[144], q[148]], 17);
constraint int_lin_eq([1, -4, 3, 1, -1], [q[8], q[61], q[130], q[135], q[138]], 5);
constraint int_lin_eq([1, -2, -5, -5, 1], [q[40], q[77], q[80], q[108], q[158]], -27);
constraint int_lin_eq([1, -2, -1, -3, 4], [q[2], q[29], q[119], q[134], q[139]], -6);
constraint int_lin_eq([1, -1, 5, 4, -2], [q[8], q[33], q[59], q[72], q[75]], 8);
constraint int_lin_eq([1, 1, -4, 5, -1], [q[19], q[33], q[39], q[47], q[92]], 11);
constraint int_lin_eq([1, 1, -3, -3, 5], [q[42], q[109], q[110], q[111], q[145]], 45);
constraint int_lin_eq([1, 1, -2, 5, -1], [q[8], q[21], q[30], q[44], q[46]], 18);
constraint int_lin_eq([1, 1, 3, 4, -3], [q[51], q[54], q[63], q[84], q[160]], 26);
constraint int_lin_eq([1, 1, 5, -1, 3], [q[2], q[75], q[122], q[140], q[147]], -8);
constraint int_lin_eq([1, 1, 5, 3, 3], [q[73], q[78], q[110], q[138], q[139]], -14);
constraint int_lin_eq([1, 3, -1, 2, 5], [q[13], q[84], q[103], q[130], q[150]], 10);
constraint int_lin_eq([1, 4, -1, -4, -1], [q[8], q[39], q[83], q[100], q[123]], -19);
constraint int_lin_eq([1, 4, 1, -1, 3], [q[52], q[55], q[68], q[90], q[97]], -13);
constraint int_lin_eq([1, 4, 3, -3, -2], [q[54], q[61], q[111], q[141], q[150]], -12);
constraint int_lin_eq([1, 5, -3, 1, 2], [q[5], q[31], q[37], q[40], q[75]], 5);
constraint int_lin_eq([1, 5, -2, -3, -2], [q[4], q[37], q[62], q[113], q[144]], -26);
constraint int_lin_eq([1, 5, -1, 3, 1], [q[30], q[79], q[86], q[112], q[155]], 18);
constraint int_lin_eq([1, 5, 1, -3, -1], [q[28], q[47], q[55], q[83], q[154]], -1);
constraint int_lin_eq([1, 5, 1, -1, -5], [q[7], q[20], q[23], q[39], q[56]], -10);
constraint int_lin_eq([1, 5, 3, 4, 4], [q[61], q[75], q[79], q[88], q[128]], 46);
constraint int_lin_eq([1, 5, 4, 3, 4], [q[3], q[27], q[98], q[156], q[159]], 21);
constraint int_lin_eq([2, -5, -2, -2, 3], [q[8], q[59], q[115], q[130], q[142]], -23);
constraint int_lin_eq([2, -5, 5, 5, -5], [q[14], q[64], q[136], q[138], q[155]], -9);
constraint int_lin_eq([2, -4, -1, 1, -2], [q[71], q[102], q[107], q[132], q[138]], -6);
constraint int_lin_eq([2, -4, 3, -4, -5], [q[88], q[91], q[94], q[97], q[141]], 9);
constraint int_lin_eq([2, -4, 4, 5, 3], [q[15], q[102], q[114], q[131], q[151]], -35);
constraint int_lin_eq([2, -3, -4, 1, 5], [q[8], q[30], q[122], q[142], q[157]], -3);
constraint int_lin_eq([2, -2, -1, 4, 1], [q[25], q[56], q[100], q[114], q[153]], 6);
constraint int_lin_eq([2, -1, -5, 1, -5], [q[5], q[14], q[70], q[103], q[117]], -42);
constraint int_lin_eq([2, -1, 2, -5, 5], [q[25], q[31], q[52], q[74], q[83]], 9);
constraint int_lin_eq([2, -1, 5, 2, -5], [q[4], q[9], q[17], q[83], q[99]], 22);
constraint int_lin_eq([2, 4, -4, -2, -5], [q[15], q[16], q[46], q[65], q[98]], -25);
constraint int_lin_eq([3, -5, 3, -4, -4], [q[16], q[22], q[42], q[108], q[125]], -15);
constraint int_lin_eq([3, -5, 3, -1, 2], [q[19], q[47], q[88], q[128], q[140]], 2);
constraint int_lin_eq([3, -4, 1, -1, -1], [q[9], q[25], q[60], q[68], q[87]], 8);
constraint int_lin_eq([3, -3, -5, 3, 1], [q[13], q[17], q[18], q[65], q[126]], 5);
constraint int_lin_eq([3, -3, -4, 2, 2], [q[64], q[81], q[107], q[157], q[160]], 33);
constraint int_lin_eq([3, -3, -1, 5, -3], [q[71], q[117], q[126], q[151], q[159]], -27);
constraint int_lin_eq([3, -3, 4, -3, -1], [q[3], q[11], q[22], q[26], q[87]], -6);
constraint int_lin_eq([3, -2, -1, 4, -1], [q[18], q[44], q[46], q[88], q[143]], -2);
constraint int_lin_eq([3, -1, -5, 3, -1], [q[36], q[54], q[78], q[145], q[160]], -4);
constraint int_lin_eq([3, -1, -2, 5, -5], [q[62], q[63], q[64], q[110], q[140]], -4);
constraint int_lin_eq([3, -1, 5, 5, -1], [q[10], q[41], q[59], q[105], q[148]], -16);
constraint int_lin_eq([3, 1, 5, -1, -4], [q[77], q[101], q[108], q[121], q[149]], 41);
constraint int_lin_eq([3, 3, -5, 5, -1], [q[47], q[52], q[90], q[138], q[158]], -12);
constraint int_lin_eq([3, 3, -1, -4, 1], [q[7], q[111], q[115], q[126], q[154]], -36);
constraint int_lin_eq([3, 4, -4, -3, -1], [q[22], q[69], q[74], q[99], q[120]], 19);
constraint int_lin_eq([3, 4, -1, -3, -1], [q[3], q[22], q[36], q[64], q[90]], -24);
constraint int_lin_eq([3, 4, -1, 4, -5], [q[28], q[62], q[93], q[115], q[155]], 22);
constraint int_lin_eq([3, 5, 2, -5, -5], [q[55], q[87], q[106], q[143], q[147]], -37);
constraint int_lin_eq([4, -5, -2, -5, -1], [q[6], q[54], q[57], q[100], q[122]], -16);
constraint int_lin_eq([4, -5, -1, 1, -1], [q[11], q[45], q[86], q[90], q[100]], 8);
constraint int_lin_eq([4, -4, -3, -3, 5], [q[41], q[104], q[133], q[136], q[149]], -20);
constraint int_lin_eq([4, -4, 2, 4, 2], [q[19], q[23], q[48], q[92], q[102]], 34);
constraint int_lin_eq([4, -3, -5, 4, 5], [q[23], q[53], q[81], q[105], q[119]], -38);
constraint int_lin_eq([4, -2, -2, 2, 4], [q[62], q[89], q[120], q[150], q[160]], 16);
constraint int_lin_eq([4, -2, 5, 5, -5], [q[18], q[127], q[133], q[152], q[159]], 5);
constraint int_lin_eq([4, -1, -2, 5, -1], [q[6], q[34], q[58], q[124], q[147]], 4);
constraint int_lin_eq([4, -1, -1, -5, -1], [q[30], q[39], q[55], q[63], q[85]], 6);
constraint int_lin_eq([4, 1, 5, 1, 4], [q[14], q[48], q[69], q[107], q[111]], 15);
constraint int_lin_eq([4, 2, -1, 1, 3], [q[19], q[57], q[104], q[124], q[151]], 12);
constraint int_lin_eq([4, 2, 3, 3, 4], [q[38], q[53], q[119], q[133], q[135]], 18);
constraint int_lin_eq([4, 2, 5, -2, 1], [q[4], q[5], q[38], q[68], q[84]], 20);
constraint int_lin_eq([4, 3, -2, -1, 4], [q[32], q[50], q[65], q[82], q[144]], -6);
constraint int_lin_eq([4, 3, -1, 1, -3], [q[82], q[114], q[139], q[158], q[159]], -1);
constraint int_lin_eq([4, 4, 2, 4, -4], [q[14], q[20], q[93], q[103], q[126]], -32);
constraint int_lin_eq([4, 5, -1, 3, 3], [q[40], q[51], q[106], q[117], q[132]], 63);
constraint int_lin_eq([5, -5, 1, 1, -1], [q[11], q[13], q[48], q[66], q[99]], 15);
constraint int_lin_eq([5, -4, 4, -1, -2], [q[9], q[25], q[79], q[122], q[147]], 14);
constraint int_lin_eq([5, -3, 1, -3, 3], [q[20], q[50], q[69], q[104], q[110]], -8);
constraint int_lin_eq([5, -1, -4, -3, -1], [q[37], q[42], q[44], q[46], q[70]], -44);
constraint int_lin_eq([5, -1, -1, -1, -5], [q[3], q[12], q[93], q[112], q[127]], -10);
constraint int_lin_eq([5, -1, -1, 2, -1], [q[47], q[71], q[76], q[120], q[132]], -11);
constraint int_lin_eq([5, -1, 3, -1, -1], [q[9], q[50], q[53], q[69], q[105]], 20);
constraint int_lin_eq([5, 1, -1, -5, -3], [q[32], q[40], q[57], q[114], q[127]], 15);
constraint int_lin_eq([5, 1, 1, -5, -1], [q[21], q[29], q[60], q[90], q[91]], -2);
constraint int_lin_eq([5, 1, 3, -1, -5], [q[40], q[75], q[91], q[112], q[115]], 29);
constraint int_lin_eq([5, 2, -4, 3, 3], [q[5], q[47], q[70], q[101], q[149]], -11);
constraint int_lin_eq([5, 3, -3, 1, 5], [q[3], q[61], q[79], q[157], q[159]], 9);
constraint int_lin_eq([5, 3, -1, 4, -1], [q[55], q[80], q[94], q[120], q[125]], -21);
constraint int_lin_eq([5, 4, -4, 2, 5], [q[17], q[21], q[66], q[89], q[111]], 26);
constraint int_lin_eq([5, 4, -2, 4, 3], [q[92], q[108], q[126], q[131], q[156]], -8);
constraint int_lin_eq([5, 5, 4, 3, 4], [q[10], q[15], q[21], q[109], q[152]], 2);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
