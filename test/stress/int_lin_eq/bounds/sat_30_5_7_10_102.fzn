predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..50] of var 1..7: q :: output_array([1..50]);
constraint int_lin_eq([-9, -10, -10, -4, 1], [q[25], q[26], q[30], q[47], q[49]], -98);
constraint int_lin_eq([-8, -8, -5, 3, 4], [q[13], q[14], q[16], q[24], q[31]], -90);
constraint int_lin_eq([-8, -6, -2, 7, -1], [q[10], q[15], q[20], q[26], q[45]], -30);
constraint int_lin_eq([-7, 7, -4, -7, 6], [q[20], q[32], q[35], q[38], q[44]], -6);
constraint int_lin_eq([-6, -1, 10, 3, -9], [q[1], q[11], q[14], q[33], q[36]], 28);
constraint int_lin_eq([-5, 3, 6, -4, 1], [q[2], q[5], q[22], q[30], q[38]], 12);
constraint int_lin_eq([-5, 7, 3, -10, -10], [q[2], q[16], q[27], q[29], q[48]], -66);
constraint int_lin_eq([-3, -8, 3, -1, 4], [q[4], q[9], q[38], q[40], q[44]], -6);
constraint int_lin_eq([-3, -5, -1, 6, 4], [q[25], q[36], q[39], q[40], q[41]], 27);
constraint int_lin_eq([-3, 5, 9, -6, 3], [q[8], q[13], q[17], q[20], q[47]], 20);
constraint int_lin_eq([-2, -5, -9, -5, 6], [q[12], q[18], q[26], q[30], q[42]], -64);
constraint int_lin_eq([-2, -2, -2, 7, -1], [q[4], q[8], q[9], q[11], q[33]], 11);
constraint int_lin_eq([-2, 5, 7, 2, -5], [q[3], q[7], q[42], q[43], q[46]], 22);
constraint int_lin_eq([-2, 10, -1, 7, 5], [q[12], q[23], q[33], q[40], q[50]], 78);
constraint int_lin_eq([-1, -2, -4, -8, -7], [q[12], q[17], q[21], q[46], q[47]], -120);
constraint int_lin_eq([-1, 7, -8, -10, -8], [q[3], q[19], q[35], q[39], q[50]], -75);
constraint int_lin_eq([1, -7, 5, 10, -1], [q[10], q[11], q[18], q[29], q[45]], 14);
constraint int_lin_eq([2, -10, -6, -7, 5], [q[6], q[10], q[15], q[23], q[34]], -36);
constraint int_lin_eq([2, 3, 9, -1, 8], [q[4], q[6], q[9], q[17], q[21]], 59);
constraint int_lin_eq([3, -5, -7, -3, -8], [q[25], q[32], q[37], q[43], q[49]], -112);
constraint int_lin_eq([4, -10, 2, -7, 6], [q[1], q[2], q[34], q[41], q[48]], -35);
constraint int_lin_eq([4, -5, -7, -3, -1], [q[19], q[27], q[28], q[37], q[39]], -63);
constraint int_lin_eq([4, -1, -6, 7, 8], [q[18], q[19], q[35], q[37], q[48]], 84);
constraint int_lin_eq([4, 6, 3, -7, 2], [q[3], q[13], q[23], q[31], q[34]], 47);
constraint int_lin_eq([5, 3, 3, 7, 2], [q[7], q[21], q[22], q[28], q[45]], 94);
constraint int_lin_eq([6, -9, 7, -9, -7], [q[6], q[14], q[16], q[28], q[49]], -95);
constraint int_lin_eq([7, 2, -7, 4, 4], [q[5], q[24], q[31], q[41], q[46]], 70);
constraint int_lin_eq([8, -10, -5, 2, 4], [q[7], q[24], q[27], q[42], q[44]], -1);
constraint int_lin_eq([8, -1, -10, -8, 3], [q[1], q[29], q[32], q[43], q[50]], -47);
constraint int_lin_eq([9, -4, 9, -6, 1], [q[5], q[8], q[15], q[22], q[36]], 35);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
