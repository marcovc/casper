predicate all_different_int(array [int] of var int: x);
predicate disjoint(var set of int: s1, var set of int: s2);
predicate lex_lesseq_int(array [int] of var int: x, array [int] of var int: y);
predicate table_bool(array [int] of var bool: x, array [int, int] of bool: t);
predicate table_int(array [int] of var int: x, array [int, int] of int: t);
array [1..50] of var 1..7: q :: output_array([1..50]);
constraint int_lin_eq([-9, 9, -7, -1, 4], [q[10], q[14], q[18], q[33], q[41]], -6);
constraint int_lin_eq([-8, -9, -8, 3, -6], [q[18], q[23], q[35], q[37], q[38]], -127);
constraint int_lin_eq([-7, 10, -10, -2, -6], [q[6], q[11], q[14], q[34], q[39]], 5);
constraint int_lin_eq([-6, -4, -5, -8, -1], [q[15], q[17], q[19], q[29], q[42]], -122);
constraint int_lin_eq([-6, 7, -1, 6, -7], [q[9], q[34], q[43], q[47], q[50]], -6);
constraint int_lin_eq([-6, 10, 1, 9, 2], [q[7], q[15], q[19], q[33], q[37]], 89);
constraint int_lin_eq([-5, -5, 1, -1, -9], [q[25], q[34], q[36], q[37], q[42]], -81);
constraint int_lin_eq([-5, -1, 2, -10, 9], [q[11], q[26], q[46], q[49], q[50]], -17);
constraint int_lin_eq([-4, -4, 4, 6, -10], [q[9], q[17], q[23], q[27], q[35]], -2);
constraint int_lin_eq([-4, -1, -5, -4, 7], [q[13], q[20], q[28], q[32], q[39]], -71);
constraint int_lin_eq([-4, 2, 1, 5, -4], [q[12], q[16], q[27], q[28], q[49]], -5);
constraint int_lin_eq([-3, -7, 10, -6, -9], [q[11], q[27], q[35], q[44], q[48]], -93);
constraint int_lin_eq([-3, 4, -2, 3, 6], [q[1], q[6], q[8], q[18], q[23]], 43);
constraint int_lin_eq([-1, -8, -3, 7, 8], [q[3], q[12], q[30], q[38], q[43]], -9);
constraint int_lin_eq([-1, -6, -5, 8, -5], [q[3], q[25], q[45], q[46], q[47]], -32);
constraint int_lin_eq([-1, 3, -6, 1, -3], [q[10], q[12], q[17], q[29], q[30]], -35);
constraint int_lin_eq([3, 2, 2, 3, 2], [q[1], q[7], q[24], q[47], q[48]], 37);
constraint int_lin_eq([4, 4, 9, 3, -1], [q[4], q[13], q[22], q[24], q[46]], 65);
constraint int_lin_eq([5, 1, -3, 8, -7], [q[2], q[4], q[10], q[36], q[48]], 40);
constraint int_lin_eq([5, 5, -2, -5, 7], [q[15], q[16], q[19], q[22], q[40]], 36);
constraint int_lin_eq([5, 9, -8, 5, -1], [q[3], q[14], q[25], q[40], q[49]], 32);
constraint int_lin_eq([6, 2, 5, -7, -2], [q[4], q[8], q[31], q[44], q[45]], 38);
constraint int_lin_eq([7, 3, -6, -2, 3], [q[21], q[26], q[36], q[42], q[45]], 0);
constraint int_lin_eq([7, 6, -2, 4, 5], [q[2], q[5], q[6], q[21], q[29]], 106);
constraint int_lin_eq([7, 9, 10, 8, -8], [q[5], q[7], q[8], q[20], q[26]], 144);
constraint int_lin_eq([7, 10, 8, -2, -6], [q[9], q[13], q[30], q[41], q[44]], 98);
constraint int_lin_eq([8, -10, 8, 9, -7], [q[2], q[16], q[28], q[31], q[41]], 40);
constraint int_lin_eq([8, -5, 9, 3, -1], [q[5], q[20], q[32], q[38], q[39]], 75);
constraint int_lin_eq([9, -1, -4, 2, 2], [q[1], q[21], q[31], q[32], q[33]], 13);
constraint int_lin_eq([10, -7, -4, 8, -7], [q[22], q[24], q[40], q[43], q[50]], -42);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
