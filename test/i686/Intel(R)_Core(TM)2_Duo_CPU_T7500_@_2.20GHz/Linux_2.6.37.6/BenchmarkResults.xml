<testsuite id='Examples'>
    <description>Examples included in the CaSPER distribution</description>
    <product id='1'>
        <name>CaSPER</name>
        <version>1.0.0rc1</version>
        <revision>v1.0.0rc1-2-g2f7b4f5</revision>
        <note></note>
    </product>
    <buildenv id='1'>
        <compiler>GNU C++ version 4.5.1</compiler>
        <stdlib>GNU libstdc++ version 20100731</stdlib>
        <buildflags>-g0 -O3 -Wall -std=gnu++0x -fPIC</buildflags>
    </buildenv>
    <runenv id='1'>
        <os>Linux 2.6.37.6 #9 SMP PREEMPT Fri Nov 11 17:33:16 WET 2011</os>
        <arch>i686</arch>
        <processor>Intel(R) Core(TM)2 Duo CPU T7500 @ 2.20GHz</processor>
    </runenv>
    <test id='./build/release/examples/cp/int/golfer'>
        <description>./build/release/examples/cp/int/golfer 6 --heuristic 0 -t0</description>
        <cout>
{ { { 1, 9, 17, 25 }, { 2, 10, 18, 26 }, { 3, 11, 19, 27 }, { 4, 12, 20, 28 }, { 5, 13, 21, 29 }, { 6, 14, 22, 30 }, { 7, 15, 23, 31 }, { 8, 16, 24, 32 } }, { { 1, 8, 10, 27 }, { 2, 15, 17, 19 }, { 3, 9, 12, 31 }, { 4, 18, 21, 30 }, { 5, 11, 14, 32 }, { 6, 20, 26, 29 }, { 7, 13, 16, 25 }, { 22, 23, 24, 28 } }, { { 1, 6, 7, 11 }, { 2, 12, 16, 21 }, { 3, 10, 13, 32 }, { 4, 14, 19, 23 }, { 5, 9, 15, 28 }, { 8, 18, 20, 31 }, { 17, 22, 26, 27 }, { 24, 25, 29, 30 } }, { { 1, 12, 13, 14 }, { 2, 9, 11, 20 }, { 3, 7, 8, 17 }, { 4, 15, 16, 22 }, { 5, 6, 10, 25 }, { 18, 23, 27, 29 }, { 19, 28, 30, 32 }, { 21, 24, 26, 31 } }, { { 1, 5, 16, 18 }, { 2, 8, 13, 22 }, { 3, 14, 15, 20 }, { 4, 17, 29, 32 }, { 6, 9, 19, 21 }, { 7, 10, 12, 24 }, { 11, 23, 26, 30 }, { 25, 27, 28, 31 } }, { { 1, 19, 20, 22 }, { 2, 5, 24, 27 }, { 3, 6, 16, 23 }, { 4, 7, 9, 26 }, { 8, 11, 15, 21 }, { 10, 14, 28, 29 }, { 12, 18, 25, 32 }, { 13, 17, 30, 31 } } }
Number of check points        :       995
Number of restores            :       876
Maximum depth                 :       125
Peak of reversible heap (KiB) :     16352
Number of Boolean domains     :         0
Number of integer domains     :       192
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     44093
Number of filter executions   :    330000
Number of fixpoints           :      2461
Number of choice points       :       993
Number of fails               :       876
Maximum depth                 :       123
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>1.353794</secs>
        <kb>19460</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/golfer'>
        <description>./build/release/examples/cp/int/golfer 4 6 5 --heuristic 0 -t0</description>
        <cout>
{ { { 1, 7, 13, 19, 25 }, { 2, 8, 14, 20, 26 }, { 3, 9, 15, 21, 27 }, { 4, 10, 16, 22, 28 }, { 5, 11, 17, 23, 29 }, { 6, 12, 18, 24, 30 } }, { { 1, 6, 8, 10, 15 }, { 2, 12, 13, 16, 29 }, { 3, 7, 23, 26, 28 }, { 4, 9, 11, 19, 30 }, { 5, 14, 18, 21, 22 }, { 17, 20, 24, 25, 27 } }, { { 1, 4, 12, 14, 17 }, { 2, 9, 10, 18, 23 }, { 3, 5, 6, 13, 20 }, { 7, 8, 22, 27, 30 }, { 11, 15, 16, 25, 26 }, { 19, 21, 24, 28, 29 } }, { { 1, 16, 20, 21, 23 }, { 2, 4, 7, 15, 24 }, { 3, 10, 14, 29, 30 }, { 5, 8, 9, 12, 25 }, { 6, 17, 19, 22, 26 }, { 11, 13, 18, 27, 28 } } }
Number of check points        :       759
Number of restores            :       682
Maximum depth                 :        81
Peak of reversible heap (KiB) :      4064
Number of Boolean domains     :         0
Number of integer domains     :       120
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     42721
Number of filter executions   :    297986
Number of fixpoints           :      1839
Number of choice points       :       757
Number of fails               :       682
Maximum depth                 :        79
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>1.408785</secs>
        <kb>19460</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/golfer'>
        <description>./build/release/examples/cp/int/golfer 3 4 3 --heuristic 1 -t0</description>
        <cout>
{ { { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 }, { 10, 11, 12 } }, { { 1, 4, 7 }, { 2, 5, 10 }, { 3, 8, 11 }, { 6, 9, 12 } }, { { 1, 5, 9 }, { 2, 4, 11 }, { 3, 7, 12 }, { 6, 8, 10 } } }
Number of check points        :    121504
Number of restores            :    121451
Maximum depth                 :        54
Peak of reversible heap (KiB) :       480
Number of Boolean domains     :         0
Number of integer domains     :        36
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     33083
Number of filter executions   :    477917
Number of fixpoints           :     20801
Number of choice points       :    121502
Number of fails               :    121451
Maximum depth                 :        52
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>3.049535</secs>
        <kb>19460</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/golfer'>
        <description>./build/release/examples/cp/int/golfer 9 8 4 --heuristic 1 -t0</description>
        <cout>
{ { { 1, 2, 3, 4 }, { 5, 6, 7, 8 }, { 9, 10, 11, 12 }, { 13, 14, 15, 16 }, { 17, 18, 19, 20 }, { 21, 22, 23, 24 }, { 25, 26, 27, 28 }, { 29, 30, 31, 32 } }, { { 1, 5, 9, 13 }, { 2, 6, 10, 14 }, { 3, 7, 11, 15 }, { 4, 8, 12, 16 }, { 17, 21, 25, 29 }, { 18, 22, 26, 30 }, { 19, 23, 27, 31 }, { 20, 24, 28, 32 } }, { { 1, 6, 11, 16 }, { 2, 5, 12, 15 }, { 3, 8, 9, 14 }, { 4, 7, 10, 13 }, { 17, 22, 27, 32 }, { 18, 21, 28, 31 }, { 19, 24, 25, 30 }, { 20, 23, 26, 29 } }, { { 1, 7, 17, 23 }, { 2, 8, 18, 24 }, { 3, 5, 19, 21 }, { 4, 6, 20, 22 }, { 9, 15, 25, 31 }, { 10, 16, 26, 32 }, { 11, 13, 27, 29 }, { 12, 14, 28, 30 } }, { { 1, 8, 19, 22 }, { 2, 7, 20, 21 }, { 3, 6, 17, 24 }, { 4, 5, 18, 23 }, { 9, 16, 27, 30 }, { 10, 15, 28, 29 }, { 11, 14, 25, 32 }, { 12, 13, 26, 31 } }, { { 1, 10, 18, 25 }, { 2, 9, 17, 26 }, { 3, 12, 20, 27 }, { 4, 11, 19, 28 }, { 5, 14, 22, 29 }, { 6, 13, 21, 30 }, { 7, 16, 24, 31 }, { 8, 15, 23, 32 } }, { { 1, 12, 21, 32 }, { 2, 11, 22, 31 }, { 3, 10, 23, 30 }, { 4, 9, 24, 29 }, { 5, 16, 17, 28 }, { 6, 15, 18, 27 }, { 7, 14, 19, 26 }, { 8, 13, 20, 25 } }, { { 1, 14, 20, 31 }, { 2, 13, 19, 32 }, { 3, 16, 18, 29 }, { 4, 15, 17, 30 }, { 5, 10, 24, 27 }, { 6, 9, 23, 28 }, { 7, 12, 22, 25 }, { 8, 11, 21, 26 } }, { { 1, 15, 24, 26 }, { 2, 16, 23, 25 }, { 3, 13, 22, 28 }, { 4, 14, 21, 27 }, { 5, 11, 20, 30 }, { 6, 12, 19, 29 }, { 7, 9, 18, 32 }, { 8, 10, 17, 31 } } }
Number of check points        :      5120
Number of restores            :      4650
Maximum depth                 :       471
Peak of reversible heap (KiB) :     32736
Number of Boolean domains     :         0
Number of integer domains     :       288
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     10769
Number of filter executions   :    142634
Number of fixpoints           :       317
Number of choice points       :      5118
Number of fails               :      4650
Maximum depth                 :       469
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>3.105527</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/golomb'>
        <description>./build/release/examples/cp/int/golomb 10 55 --distinct=0 -m0 -s2 -t0</description>
        <cout>
{ 0, 1, 6, 10, 23, 26, 34, 41, 53, 55 }
{ 0, 2, 14, 21, 29, 32, 45, 49, 54, 55 }
Number of check points        :     26283
Number of restores            :     26276
Maximum depth                 :         9
Peak of reversible heap (KiB) :       224
Number of Boolean domains     :         0
Number of integer domains     :        55
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     52893
Number of filter executions   :  10099737
Number of fixpoints           :     59626
Number of choice points       :     26281
Number of fails               :     26276
Maximum depth                 :         7
Number of solutions           :         2
</cout>
        <cerr></cerr>
        <secs>8.323734</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/golomb'>
        <description>./build/release/examples/cp/int/golomb 10 55 --distinct=1 -m0 -s2 -t0</description>
        <cout>
{ 0, 1, 6, 10, 23, 26, 34, 41, 53, 55 }
{ 0, 2, 14, 21, 29, 32, 45, 49, 54, 55 }
Number of check points        :      8828
Number of restores            :      8821
Maximum depth                 :         8
Peak of reversible heap (KiB) :        96
Number of Boolean domains     :         0
Number of integer domains     :        10
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     17713
Number of filter executions   :   1331276
Number of fixpoints           :     19954
Number of choice points       :      8826
Number of fails               :      8821
Maximum depth                 :         6
Number of solutions           :         2
</cout>
        <cerr></cerr>
        <secs>8.28274</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/golomb'>
        <description>./build/release/examples/cp/int/golomb 10 55 --distinct=2 -m0 -s2 -t0</description>
        <cout>
{ 0, 1, 6, 10, 23, 26, 34, 41, 53, 55 }
{ 0, 2, 14, 21, 29, 32, 45, 49, 54, 55 }
Number of check points        :      8828
Number of restores            :      8821
Maximum depth                 :         8
Peak of reversible heap (KiB) :       992
Number of Boolean domains     :         0
Number of integer domains     :       100
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     18255
Number of filter executions   :  10630895
Number of fixpoints           :     19954
Number of choice points       :      8826
Number of fails               :      8821
Maximum depth                 :         6
Number of solutions           :         2
</cout>
        <cerr></cerr>
        <secs>14.163846</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/golomb'>
        <description>./build/release/examples/cp/int/golomb 11 72 --distinct=0 -m0 -t0</description>
        <cout>
{ 0, 1, 4, 13, 28, 33, 47, 54, 64, 70, 72 }
Number of check points        :     13161
Number of restores            :     13153
Maximum depth                 :         9
Peak of reversible heap (KiB) :       224
Number of Boolean domains     :         0
Number of integer domains     :        66
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     26719
Number of filter executions   :   5665949
Number of fixpoints           :     29799
Number of choice points       :     13159
Number of fails               :     13153
Maximum depth                 :         7
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>15.52364</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/golomb'>
        <description>./build/release/examples/cp/int/golomb 11 72 --distinct=1 -m0 -t0</description>
        <cout>
{ 0, 1, 4, 13, 28, 33, 47, 54, 64, 70, 72 }
Number of check points        :      7015
Number of restores            :      7007
Maximum depth                 :         9
Peak of reversible heap (KiB) :        96
Number of Boolean domains     :         0
Number of integer domains     :        11
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     14097
Number of filter executions   :   1257427
Number of fixpoints           :     16001
Number of choice points       :      7013
Number of fails               :      7007
Maximum depth                 :         7
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>15.71161</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/golomb'>
        <description>./build/release/examples/cp/int/golomb 11 72 --distinct=2 -m0 -t0</description>
        <cout>
{ 0, 1, 4, 13, 28, 33, 47, 54, 64, 70, 72 }
Number of check points        :      7015
Number of restores            :      7007
Maximum depth                 :         9
Peak of reversible heap (KiB) :       992
Number of Boolean domains     :         0
Number of integer domains     :       121
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     14759
Number of filter executions   :   8567662
Number of fixpoints           :     16001
Number of choice points       :      7013
Number of fails               :      7007
Maximum depth                 :         7
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>21.300761</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/golomb'>
        <description>./build/release/examples/cp/int/golomb 10 -t0</description>
        <cout>
{ 0, 1, 3, 7, 12, 20, 30, 44, 65, 80 }
{ 0, 1, 3, 7, 12, 20, 34, 49, 59, 75 }
{ 0, 1, 3, 7, 12, 22, 35, 49, 65, 73 }
{ 0, 1, 3, 7, 12, 26, 41, 54, 62, 72 }
{ 0, 1, 3, 7, 15, 24, 34, 54, 59, 70 }
{ 0, 1, 3, 7, 15, 31, 36, 49, 58, 68 }
{ 0, 1, 3, 7, 17, 22, 35, 46, 58, 66 }
{ 0, 1, 3, 7, 18, 30, 38, 43, 52, 62 }
{ 0, 1, 3, 11, 17, 29, 36, 51, 56, 60 }
{ 0, 1, 6, 10, 23, 26, 34, 41, 53, 55 }
Number of check points        :     41123
Number of restores            :     41122
Maximum depth                 :        11
Peak of reversible heap (KiB) :        32
Number of Boolean domains     :         0
Number of integer domains     :        10
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     82304
Number of filter executions   :   6507781
Number of fixpoints           :     93739
Number of choice points       :     41121
Number of fails               :     41122
Maximum depth                 :         9
Number of solutions           :        10
</cout>
        <cerr></cerr>
        <secs>26.459976</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/golomb'>
        <description>./build/release/examples/cp/int/golomb 11 -t0</description>
        <cout></cout>
        <cerr></cerr>
        <secs>0.0</secs>
        <kb>0.0</kb>
        <result>skipped</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/langford'>
        <description>./build/release/examples/cp/int/langford 3 12 -t0</description>
        <cout>
Number of check points        :     32753
Number of restores            :     32752
Maximum depth                 :        10
Peak of reversible heap (KiB) :        96
Number of Boolean domains     :         0
Number of integer domains     :        72
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :    403387
Number of filter executions   :   7527415
Number of fixpoints           :     98253
Number of choice points       :     32751
Number of fails               :     32752
Maximum depth                 :         8
Number of solutions           :         0
</cout>
        <cerr></cerr>
        <secs>36.413463</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/langford'>
        <description>./build/release/examples/cp/int/langford 3 17 -t0</description>
        <cout>
{ 4, 17, 5, 12, 16, 4, 11, 15, 5, 2, 4, 10, 2, 13, 5, 2, 12, 14, 11, 17, 3, 16, 10, 15, 3, 9, 7, 13, 3, 12, 11, 8, 14, 10, 7, 9, 6, 17, 16, 15, 8, 13, 7, 6, 1, 9, 1, 14, 1, 8, 6 }
Number of check points        :     53456
Number of restores            :     53446
Maximum depth                 :        13
Peak of reversible heap (KiB) :       224
Number of Boolean domains     :         0
Number of integer domains     :       102
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :    623370
Number of filter executions   :  14137716
Number of fixpoints           :    160355
Number of choice points       :     53454
Number of fails               :     53446
Maximum depth                 :        11
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>38.832096</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/latin'>
        <description>./build/release/examples/cp/int/latin -f ./examples/int/data_latin/30-312-2.pls --heuristic 0 -t0</description>
        <cout>
{ { 4, 3, 2, 1, 0 }, { 3, 4, 1, 0, 2 }, { 2, 1, 0, 3, 4 }, { 1, 0, 4, 2, 3 }, { 0, 2, 3, 4, 1 } }
Number of check points        :       138
Number of restores            :       125
Maximum depth                 :        13
Peak of reversible heap (KiB) :        96
Number of Boolean domains     :         0
Number of integer domains     :        25
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :        52
Number of filter executions   :      2392
Number of fixpoints           :       137
Number of choice points       :        11
Number of fails               :         0
Maximum depth                 :        11
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>43.196432</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/latin'>
        <description>./build/release/examples/cp/int/latin -f ./examples/int/data_latin/30-312-4.pls --heuristic 1 -t0</description>
        <cout>
{ { 0, 1, 2, 3, 4 }, { 1, 0, 3, 4, 2 }, { 2, 3, 4, 1, 0 }, { 4, 2, 1, 0, 3 }, { 3, 4, 0, 2, 1 } }
Number of check points        :        67
Number of restores            :        54
Maximum depth                 :        13
Peak of reversible heap (KiB) :        96
Number of Boolean domains     :         0
Number of integer domains     :        25
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :        52
Number of filter executions   :      1230
Number of fixpoints           :        77
Number of choice points       :        11
Number of fails               :         0
Maximum depth                 :        11
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>43.214429</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/nqueens'>
        <description>./build/release/examples/cp/int/nqueens 75 -s40 -t0</description>
        <cout>
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 64, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 72, 70, 59, 49, 14, 10, 25, 52, 73, 46, 60, 74, 66, 53, 11, 67, 58, 15, 57, 48, 71, 68, 21, 17, 12, 31, 69, 19, 1, 51, 56, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 62 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 64, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 72, 70, 73, 49, 14, 10, 25, 52, 62, 46, 67, 74, 54, 60, 11, 66, 68, 15, 58, 48, 59, 71, 21, 17, 12, 31, 69, 19, 1, 51, 57, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 56 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 64, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 51, 70, 72, 49, 14, 10, 25, 52, 73, 46, 67, 74, 66, 60, 11, 57, 68, 15, 58, 48, 59, 71, 21, 17, 12, 31, 69, 19, 1, 53, 56, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 62 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 64, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 62, 70, 72, 49, 14, 10, 25, 52, 73, 46, 67, 74, 66, 60, 11, 57, 68, 15, 58, 48, 59, 71, 21, 17, 12, 31, 69, 19, 1, 53, 56, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 51 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 72, 5, 64, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 66, 70, 74, 49, 14, 10, 25, 52, 71, 46, 60, 51, 69, 65, 11, 58, 67, 15, 57, 73, 62, 68, 21, 17, 12, 31, 48, 19, 1, 56, 54, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 59 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 74, 5, 64, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 62, 72, 68, 49, 14, 10, 25, 52, 71, 46, 67, 65, 59, 53, 11, 66, 58, 15, 57, 48, 70, 73, 21, 17, 12, 31, 69, 19, 1, 51, 54, 16, 33, 60, 20, 13, 32, 27, 22, 18, 23, 28, 56 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 74, 5, 64, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 66, 73, 71, 49, 14, 10, 25, 52, 62, 46, 72, 68, 59, 65, 11, 57, 67, 15, 58, 48, 70, 60, 21, 17, 12, 31, 69, 19, 1, 51, 54, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 56 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 74, 5, 64, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 66, 73, 71, 49, 14, 10, 25, 52, 62, 46, 72, 68, 59, 65, 11, 57, 67, 15, 58, 48, 70, 60, 21, 17, 12, 31, 69, 19, 1, 56, 54, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 51 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 64, 41, 39, 7, 26, 44, 55, 62, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 73, 70, 56, 49, 14, 10, 25, 52, 71, 46, 67, 61, 74, 53, 11, 66, 58, 15, 57, 48, 72, 68, 21, 17, 12, 31, 69, 19, 1, 51, 54, 16, 33, 60, 20, 13, 32, 27, 22, 18, 23, 28, 59 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 64, 41, 39, 7, 26, 44, 55, 62, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 71, 73, 56, 49, 14, 10, 25, 52, 70, 46, 67, 74, 54, 60, 11, 66, 59, 15, 68, 48, 72, 61, 21, 17, 12, 31, 53, 19, 1, 51, 69, 16, 33, 57, 20, 13, 32, 27, 22, 18, 23, 28, 58 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 64, 41, 39, 7, 26, 44, 55, 62, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 70, 66, 74, 49, 14, 10, 25, 52, 71, 46, 61, 73, 54, 67, 11, 58, 56, 15, 57, 69, 72, 68, 21, 17, 12, 31, 48, 19, 1, 53, 51, 16, 33, 60, 20, 13, 32, 27, 22, 18, 23, 28, 59 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 64, 41, 39, 7, 26, 44, 55, 62, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 73, 71, 74, 49, 14, 10, 25, 52, 70, 46, 60, 68, 59, 67, 11, 66, 58, 15, 57, 48, 72, 61, 21, 17, 12, 31, 69, 19, 1, 56, 54, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 51 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 64, 41, 39, 7, 26, 44, 55, 62, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 66, 72, 74, 49, 14, 10, 25, 52, 70, 46, 73, 51, 59, 67, 11, 57, 68, 15, 61, 69, 71, 60, 21, 17, 12, 31, 48, 19, 1, 53, 56, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 58 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 70, 5, 64, 41, 39, 7, 26, 44, 55, 62, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 71, 73, 68, 49, 14, 10, 25, 52, 58, 46, 67, 74, 66, 60, 11, 57, 59, 15, 69, 48, 72, 61, 21, 17, 12, 31, 65, 19, 1, 51, 54, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 56 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 72, 5, 64, 41, 39, 7, 26, 44, 55, 62, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 70, 66, 74, 49, 14, 10, 25, 52, 65, 46, 73, 51, 59, 67, 11, 57, 68, 15, 61, 69, 71, 60, 21, 17, 12, 31, 48, 19, 1, 53, 56, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 58 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 70, 5, 64, 41, 39, 7, 26, 44, 55, 65, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 72, 66, 59, 49, 14, 10, 25, 52, 74, 46, 73, 51, 54, 67, 11, 62, 68, 15, 61, 69, 71, 60, 21, 17, 12, 31, 48, 19, 1, 58, 56, 16, 33, 57, 20, 13, 32, 27, 22, 18, 23, 28, 53 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 71, 5, 64, 41, 39, 7, 26, 44, 55, 65, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 62, 72, 59, 49, 14, 10, 25, 52, 73, 46, 61, 74, 66, 53, 11, 67, 58, 15, 57, 48, 70, 68, 21, 17, 12, 31, 69, 19, 1, 51, 54, 16, 33, 60, 20, 13, 32, 27, 22, 18, 23, 28, 56 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 72, 5, 64, 41, 39, 7, 26, 44, 55, 65, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 62, 71, 59, 49, 14, 10, 25, 52, 73, 46, 61, 74, 66, 53, 11, 67, 58, 15, 57, 48, 70, 68, 21, 17, 12, 31, 69, 19, 1, 51, 54, 16, 33, 60, 20, 13, 32, 27, 22, 18, 23, 28, 56 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 72, 5, 64, 41, 39, 7, 26, 44, 55, 65, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 62, 73, 68, 49, 14, 10, 25, 52, 58, 46, 67, 74, 66, 60, 11, 57, 59, 15, 70, 48, 71, 61, 21, 17, 12, 31, 53, 19, 1, 51, 69, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 56 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 72, 5, 64, 41, 39, 7, 26, 44, 55, 65, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 70, 66, 59, 49, 14, 10, 25, 52, 74, 46, 73, 51, 54, 67, 11, 62, 68, 15, 61, 69, 71, 60, 21, 17, 12, 31, 48, 19, 1, 58, 56, 16, 33, 57, 20, 13, 32, 27, 22, 18, 23, 28, 53 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 71, 5, 64, 41, 39, 7, 26, 44, 55, 70, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 62, 73, 68, 49, 14, 10, 25, 52, 58, 46, 67, 74, 66, 60, 11, 57, 59, 15, 69, 48, 72, 61, 21, 17, 12, 31, 65, 19, 1, 51, 54, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 56 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 64, 41, 39, 7, 26, 44, 55, 70, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 72, 66, 59, 49, 14, 10, 25, 52, 74, 46, 73, 51, 54, 67, 11, 62, 68, 15, 61, 69, 71, 60, 21, 17, 12, 31, 48, 19, 1, 58, 56, 16, 33, 57, 20, 13, 32, 27, 22, 18, 23, 28, 53 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 71, 5, 68, 41, 39, 7, 26, 44, 55, 65, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 70, 66, 59, 49, 14, 10, 25, 52, 74, 46, 61, 73, 54, 67, 11, 62, 56, 15, 57, 69, 72, 64, 21, 17, 12, 31, 48, 19, 1, 58, 51, 16, 33, 60, 20, 13, 32, 27, 22, 18, 23, 28, 53 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 72, 5, 68, 41, 39, 7, 26, 44, 55, 65, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 66, 70, 74, 49, 14, 10, 25, 52, 62, 46, 73, 61, 69, 60, 11, 67, 58, 15, 57, 48, 71, 64, 21, 17, 12, 31, 53, 19, 1, 51, 54, 16, 33, 59, 20, 13, 32, 27, 22, 18, 23, 28, 56 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 72, 5, 68, 41, 39, 7, 26, 44, 55, 65, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 66, 70, 74, 49, 14, 10, 25, 52, 62, 46, 73, 61, 69, 60, 11, 67, 58, 15, 57, 48, 71, 64, 21, 17, 12, 31, 53, 19, 1, 51, 56, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 59 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 72, 5, 68, 41, 39, 7, 26, 44, 55, 65, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 66, 71, 74, 49, 14, 10, 25, 52, 62, 46, 61, 73, 69, 60, 11, 67, 58, 15, 57, 48, 70, 64, 21, 17, 12, 31, 53, 19, 1, 51, 56, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 59 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 74, 5, 68, 41, 39, 7, 26, 44, 55, 57, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 66, 71, 73, 49, 14, 10, 25, 52, 70, 46, 60, 62, 64, 67, 11, 72, 58, 15, 65, 48, 59, 61, 21, 17, 12, 31, 69, 19, 1, 56, 54, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 51 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 69, 41, 39, 7, 26, 44, 55, 57, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 72, 74, 59, 49, 14, 10, 25, 52, 70, 46, 73, 51, 64, 67, 11, 62, 66, 15, 61, 48, 71, 60, 21, 17, 12, 31, 68, 19, 1, 56, 54, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 58 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 69, 41, 39, 7, 26, 44, 55, 57, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 74, 72, 59, 49, 14, 10, 25, 52, 70, 46, 73, 51, 64, 67, 11, 62, 66, 15, 61, 48, 71, 60, 21, 17, 12, 31, 68, 19, 1, 56, 54, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 58 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 70, 5, 69, 41, 39, 7, 26, 44, 55, 57, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 73, 71, 68, 49, 14, 10, 25, 52, 58, 46, 64, 74, 59, 65, 11, 72, 67, 15, 61, 48, 62, 60, 21, 17, 12, 31, 66, 19, 1, 51, 54, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 56 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 72, 5, 69, 41, 39, 7, 26, 44, 55, 57, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 70, 66, 74, 49, 14, 10, 25, 52, 65, 46, 61, 73, 54, 67, 11, 62, 56, 15, 68, 71, 59, 64, 21, 17, 12, 31, 48, 19, 1, 53, 51, 16, 33, 60, 20, 13, 32, 27, 22, 18, 23, 28, 58 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 72, 5, 69, 41, 39, 7, 26, 44, 55, 57, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 70, 66, 74, 49, 14, 10, 25, 52, 65, 46, 61, 73, 54, 67, 11, 62, 56, 15, 68, 71, 59, 64, 21, 17, 12, 31, 48, 19, 1, 58, 51, 16, 33, 60, 20, 13, 32, 27, 22, 18, 23, 28, 53 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 72, 5, 69, 41, 39, 7, 26, 44, 55, 57, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 71, 74, 65, 49, 14, 10, 25, 52, 70, 46, 67, 61, 54, 60, 11, 66, 68, 15, 58, 73, 59, 64, 21, 17, 12, 31, 48, 19, 1, 53, 56, 16, 33, 62, 20, 13, 32, 27, 22, 18, 23, 28, 51 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 74, 5, 69, 41, 39, 7, 26, 44, 55, 57, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 62, 72, 68, 49, 14, 10, 25, 52, 71, 46, 64, 61, 54, 70, 11, 66, 59, 15, 58, 48, 67, 73, 21, 17, 12, 31, 65, 19, 1, 51, 56, 16, 33, 60, 20, 13, 32, 27, 22, 18, 23, 28, 53 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 69, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 71, 66, 59, 49, 14, 10, 25, 52, 74, 46, 60, 73, 54, 67, 11, 62, 56, 15, 57, 70, 72, 64, 21, 17, 12, 31, 48, 19, 1, 58, 51, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 68 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 65, 5, 69, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 74, 70, 59, 49, 14, 10, 25, 52, 71, 46, 60, 73, 66, 53, 11, 62, 67, 15, 57, 48, 72, 64, 21, 17, 12, 31, 68, 19, 1, 51, 56, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 58 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 66, 5, 69, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 74, 70, 59, 49, 14, 10, 25, 52, 71, 46, 60, 73, 64, 53, 11, 58, 67, 15, 72, 48, 62, 68, 21, 17, 12, 31, 65, 19, 1, 51, 56, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 57 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 66, 5, 69, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 62, 71, 68, 49, 14, 10, 25, 52, 73, 46, 64, 74, 54, 60, 11, 67, 59, 15, 58, 48, 70, 72, 21, 17, 12, 31, 65, 19, 1, 51, 57, 16, 33, 53, 20, 13, 32, 27, 22, 18, 23, 28, 56 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 66, 5, 69, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 71, 73, 59, 49, 14, 10, 25, 52, 70, 46, 60, 74, 64, 53, 11, 58, 67, 15, 72, 48, 62, 68, 21, 17, 12, 31, 65, 19, 1, 51, 56, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 57 }
{ 0, 2, 4, 38, 47, 3, 29, 6, 40, 37, 63, 66, 5, 69, 41, 39, 7, 26, 44, 55, 61, 50, 8, 35, 45, 42, 30, 43, 24, 9, 36, 34, 71, 73, 59, 49, 14, 10, 25, 52, 62, 46, 72, 74, 64, 53, 11, 58, 67, 15, 60, 48, 70, 68, 21, 17, 12, 31, 65, 19, 1, 51, 56, 16, 33, 54, 20, 13, 32, 27, 22, 18, 23, 28, 57 }
Number of check points        :     48551
Number of restores            :     48490
Maximum depth                 :        69
Peak of reversible heap (KiB) :       992
Number of Boolean domains     :         0
Number of integer domains     :        75
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :    102600
Number of filter executions   :  13250419
Number of fixpoints           :     97040
Number of choice points       :     48549
Number of fails               :     48490
Maximum depth                 :        67
Number of solutions           :        40
</cout>
        <cerr></cerr>
        <secs>42.346562</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/nqueens'>
        <description>./build/release/examples/cp/int/nqueens 206 -t0</description>
        <cout>
{ 0, 2, 4, 106, 94, 3, 91, 6, 87, 103, 92, 99, 5, 105, 109, 114, 7, 100, 118, 124, 129, 131, 8, 98, 122, 126, 134, 142, 146, 9, 141, 135, 60, 63, 110, 132, 101, 10, 65, 61, 117, 85, 93, 58, 64, 66, 11, 107, 77, 81, 89, 68, 111, 78, 96, 49, 12, 88, 95, 47, 112, 80, 72, 116, 121, 40, 23, 13, 123, 119, 86, 97, 42, 195, 198, 115, 82, 189, 136, 14, 201, 130, 120, 190, 145, 48, 133, 90, 52, 38, 113, 125, 15, 182, 53, 140, 108, 104, 161, 185, 193, 41, 46, 194, 200, 186, 16, 176, 181, 187, 51, 179, 1, 169, 45, 199, 203, 184, 180, 183, 168, 17, 165, 102, 204, 57, 192, 197, 164, 54, 83, 202, 178, 205, 188, 170, 177, 18, 56, 172, 137, 67, 138, 22, 127, 25, 128, 50, 152, 26, 55, 143, 160, 62, 19, 144, 151, 73, 171, 27, 174, 148, 79, 24, 175, 155, 150, 139, 70, 75, 147, 156, 20, 84, 69, 59, 30, 74, 154, 31, 29, 149, 76, 71, 34, 159, 191, 196, 157, 167, 32, 21, 173, 153, 33, 162, 158, 163, 35, 37, 28, 36, 43, 39, 44, 166 }
Number of check points        :     11908
Number of restores            :     11720
Maximum depth                 :       195
Peak of reversible heap (KiB) :      8160
Number of Boolean domains     :         0
Number of integer domains     :       206
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     65867
Number of filter executions   :  10740658
Number of fixpoints           :     23627
Number of choice points       :     11906
Number of fails               :     11720
Maximum depth                 :       193
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>55.58155</secs>
        <kb>27024</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/nqueens'>
        <description>./build/release/examples/cp/int/nqueens 1000 -t0</description>
        <cout>
{ 0, 2, 4, 268, 249, 3, 257, 6, 289, 286, 304, 254, 5, 245, 290, 288, 7, 318, 314, 277, 239, 243, 8, 246, 244, 250, 292, 322, 758, 9, 312, 302, 749, 752, 740, 753, 757, 10, 236, 223, 232, 238, 235, 340, 770, 240, 11, 755, 233, 771, 761, 744, 765, 780, 777, 229, 12, 747, 741, 754, 769, 773, 303, 733, 768, 772, 764, 13, 821, 728, 746, 750, 737, 264, 237, 226, 816, 751, 227, 14, 817, 848, 745, 868, 873, 228, 872, 879, 897, 251, 231, 909, 15, 896, 222, 902, 919, 253, 742, 905, 891, 906, 875, 738, 866, 739, 16, 774, 731, 763, 735, 775, 859, 882, 911, 736, 762, 876, 863, 743, 823, 17, 725, 756, 732, 858, 883, 727, 715, 748, 824, 815, 801, 719, 225, 734, 721, 18, 380, 221, 279, 220, 706, 369, 723, 278, 217, 712, 274, 724, 367, 266, 708, 273, 19, 218, 366, 129, 204, 198, 207, 267, 202, 282, 316, 125, 123, 291, 285, 375, 341, 208, 20, 296, 258, 209, 353, 215, 210, 119, 700, 357, 294, 212, 293, 697, 709, 701, 214, 297, 365, 21, 386, 714, 381, 113, 726, 370, 776, 298, 310, 710, 814, 720, 315, 694, 698, 377, 306, 692, 107, 22, 702, 718, 730, 189, 317, 704, 385, 683, 100, 103, 695, 693, 182, 101, 185, 392, 323, 689, 177, 707, 23, 729, 308, 690, 397, 672, 699, 102, 766, 662, 328, 105, 666, 190, 194, 339, 717, 686, 326, 713, 703, 180, 24, 671, 205, 696, 331, 688, 106, 327, 109, 760, 786, 337, 188, 332, 804, 108, 338, 778, 324, 779, 785, 800, 803, 25, 691, 767, 716, 783, 759, 195, 110, 313, 342, 349, 788, 792, 794, 799, 790, 705, 711, 829, 791, 812, 782, 844, 47, 26, 793, 348, 841, 784, 112, 839, 321, 852, 346, 352, 934, 854, 884, 158, 870, 376, 867, 913, 917, 903, 114, 805, 940, 408, 27, 929, 344, 115, 271, 899, 149, 162, 951, 350, 121, 925, 418, 928, 154, 924, 820, 923, 281, 936, 674, 374, 895, 922, 892, 48, 28, 402, 938, 436, 373, 890, 921, 916, 122, 667, 678, 144, 439, 415, 658, 813, 133, 822, 811, 798, 681, 442, 438, 888, 920, 657, 49, 29, 157, 787, 838, 842, 414, 722, 835, 797, 132, 650, 311, 261, 878, 933, 668, 665, 648, 139, 840, 419, 135, 808, 850, 941, 806, 638, 50, 30, 655, 452, 819, 781, 843, 907, 943, 53, 134, 137, 453, 969, 948, 445, 988, 837, 874, 949, 807, 126, 862, 968, 982, 977, 877, 984, 124, 669, 31, 955, 861, 871, 178, 960, 802, 869, 456, 448, 886, 914, 810, 930, 845, 849, 932, 853, 865, 912, 855, 881, 91, 889, 789, 828, 94, 910, 795, 51, 32, 864, 901, 818, 834, 166, 329, 184, 478, 809, 832, 851, 796, 613, 857, 661, 682, 619, 616, 325, 161, 860, 626, 470, 915, 935, 295, 120, 680, 518, 644, 33, 880, 181, 476, 604, 510, 887, 608, 647, 635, 514, 56, 623, 856, 607, 179, 603, 664, 620, 618, 275, 529, 641, 150, 535, 643, 636, 284, 585, 651, 571, 52, 34, 97, 624, 663, 649, 589, 520, 590, 826, 556, 627, 687, 659, 847, 276, 320, 541, 653, 260, 537, 894, 517, 836, 652, 151, 299, 885, 598, 563, 176, 153, 926, 54, 35, 361, 918, 900, 591, 645, 831, 553, 931, 939, 234, 528, 345, 908, 307, 904, 639, 927, 937, 970, 117, 287, 336, 954, 830, 980, 946, 961, 981, 111, 614, 382, 997, 55, 36, 944, 963, 256, 224, 976, 263, 999, 989, 992, 994, 335, 991, 60, 986, 265, 983, 972, 964, 966, 104, 942, 187, 945, 552, 247, 958, 333, 962, 359, 898, 947, 300, 197, 57, 37, 283, 956, 973, 305, 472, 950, 952, 248, 196, 508, 252, 192, 959, 953, 990, 191, 965, 242, 569, 96, 993, 554, 540, 998, 996, 95, 957, 971, 967, 319, 99, 974, 270, 483, 58, 38, 987, 494, 519, 356, 504, 975, 995, 979, 564, 259, 351, 262, 978, 364, 389, 543, 486, 985, 301, 379, 334, 410, 384, 484, 78, 434, 79, 213, 355, 360, 495, 269, 396, 211, 330, 577, 39, 309, 610, 272, 141, 481, 506, 219, 606, 642, 136, 498, 216, 454, 347, 64, 477, 280, 371, 61, 487, 372, 479, 534, 523, 622, 599, 621, 143, 255, 602, 343, 466, 628, 576, 206, 118, 59, 40, 458, 596, 358, 567, 501, 230, 485, 464, 550, 583, 568, 130, 362, 67, 446, 241, 612, 547, 447, 572, 127, 592, 463, 525, 354, 128, 488, 475, 368, 511, 450, 363, 595, 588, 186, 605, 546, 62, 41, 561, 63, 593, 465, 555, 199, 539, 489, 533, 581, 566, 480, 437, 629, 387, 164, 562, 75, 388, 378, 394, 611, 383, 471, 600, 573, 586, 473, 140, 584, 493, 654, 656, 634, 632, 617, 80, 148, 65, 42, 393, 395, 637, 630, 677, 631, 145, 684, 675, 405, 390, 406, 160, 71, 893, 846, 825, 827, 482, 833, 399, 147, 391, 68, 679, 155, 670, 673, 685, 633, 159, 676, 400, 398, 640, 565, 646, 660, 615, 66, 43, 168, 625, 407, 403, 401, 513, 609, 505, 423, 131, 404, 412, 74, 426, 499, 601, 409, 413, 515, 594, 502, 76, 587, 411, 416, 548, 558, 578, 582, 116, 545, 597, 509, 570, 420, 417, 425, 503, 579, 156, 69, 44, 201, 433, 491, 203, 421, 521, 422, 70, 512, 428, 431, 429, 492, 435, 440, 551, 89, 193, 427, 430, 424, 516, 455, 549, 88, 432, 532, 87, 200, 530, 560, 183, 574, 1, 575, 557, 580, 451, 559, 544, 441, 72, 45, 443, 490, 457, 449, 467, 85, 81, 175, 459, 496, 444, 77, 500, 462, 507, 524, 165, 497, 542, 527, 163, 461, 98, 522, 526, 536, 538, 169, 531, 173, 468, 90, 171, 73, 469, 170, 460, 474, 172, 138, 82, 167, 83, 46, 146, 84, 142, 152, 92, 86, 93, 174 }
Number of check points        :       995
Number of restores            :         2
Maximum depth                 :       994
Peak of reversible heap (KiB) :    262112
Number of Boolean domains     :         0
Number of integer domains     :      1000
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :   1000006
Number of filter executions   :   2004743
Number of fixpoints           :       996
Number of choice points       :       993
Number of fails               :         2
Maximum depth                 :       992
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>58.260142</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/allinterval'>
        <description>./build/release/examples/cp/int/allinterval 14 -s2 -t0</description>
        <cout>
{ 0, 13, 1, 12, 2, 11, 3, 10, 4, 9, 5, 8, 6, 7 }
{ 1, 11, 2, 13, 0, 12, 4, 8, 5, 10, 3, 9, 7, 6 }
Number of check points        :    212910
Number of restores            :    212903
Maximum depth                 :        13
Peak of reversible heap (KiB) :        96
Number of Boolean domains     :         0
Number of integer domains     :        27
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :    425839
Number of filter executions   :   6306004
Number of fixpoints           :    515776
Number of choice points       :    212908
Number of fails               :    212903
Maximum depth                 :        11
Number of solutions           :         2
</cout>
        <cerr></cerr>
        <secs>63.115404</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/ortholatin'>
        <description>./build/release/examples/cp/int/ortholatin 5 -s40 -t0</description>
        <cout>
{ { 0, 3, 2, 4, 1 }, { 4, 1, 0, 3, 2 }, { 3, 2, 4, 1, 0 }, { 2, 4, 1, 0, 3 }, { 1, 0, 3, 2, 4 } } { { 1, 3, 2, 4, 0 }, { 0, 1, 3, 2, 4 }, { 4, 0, 1, 3, 2 }, { 3, 2, 4, 0, 1 }, { 2, 4, 0, 1, 3 } }
{ { 0, 3, 4, 2, 1 }, { 4, 2, 1, 0, 3 }, { 3, 4, 2, 1, 0 }, { 2, 1, 0, 3, 4 }, { 1, 0, 3, 4, 2 } } { { 1, 3, 4, 2, 0 }, { 0, 1, 3, 4, 2 }, { 4, 2, 0, 1, 3 }, { 3, 4, 2, 0, 1 }, { 2, 0, 1, 3, 4 } }
{ { 0, 4, 1, 3, 2 }, { 4, 2, 0, 1, 3 }, { 3, 1, 2, 4, 0 }, { 2, 3, 4, 0, 1 }, { 1, 0, 3, 2, 4 } } { { 1, 4, 3, 2, 0 }, { 0, 2, 4, 1, 3 }, { 4, 0, 1, 3, 2 }, { 3, 1, 2, 0, 4 }, { 2, 3, 0, 4, 1 } }
{ { 0, 4, 1, 2, 3 }, { 4, 3, 0, 1, 2 }, { 3, 2, 4, 0, 1 }, { 2, 1, 3, 4, 0 }, { 1, 0, 2, 3, 4 } } { { 1, 4, 3, 0, 2 }, { 0, 3, 2, 4, 1 }, { 4, 2, 1, 3, 0 }, { 3, 1, 0, 2, 4 }, { 2, 0, 4, 1, 3 } }
{ { 0, 4, 1, 3, 2 }, { 4, 3, 0, 2, 1 }, { 3, 2, 4, 1, 0 }, { 2, 1, 3, 0, 4 }, { 1, 0, 2, 4, 3 } } { { 1, 4, 3, 2, 0 }, { 0, 3, 2, 1, 4 }, { 4, 2, 1, 0, 3 }, { 3, 1, 0, 4, 2 }, { 2, 0, 4, 3, 1 } }
{ { 0, 4, 2, 1, 3 }, { 4, 3, 1, 0, 2 }, { 3, 2, 0, 4, 1 }, { 2, 1, 4, 3, 0 }, { 1, 0, 3, 2, 4 } } { { 1, 4, 0, 3, 2 }, { 0, 3, 4, 2, 1 }, { 4, 2, 3, 1, 0 }, { 3, 1, 2, 0, 4 }, { 2, 0, 1, 4, 3 } }
{ { 0, 4, 2, 3, 1 }, { 4, 3, 1, 2, 0 }, { 3, 2, 0, 1, 4 }, { 2, 1, 4, 0, 3 }, { 1, 0, 3, 4, 2 } } { { 1, 4, 0, 2, 3 }, { 0, 3, 4, 1, 2 }, { 4, 2, 3, 0, 1 }, { 3, 1, 2, 4, 0 }, { 2, 0, 1, 3, 4 } }
{ { 0, 4, 3, 1, 2 }, { 4, 3, 2, 0, 1 }, { 3, 2, 1, 4, 0 }, { 2, 1, 0, 3, 4 }, { 1, 0, 4, 2, 3 } } { { 1, 4, 2, 3, 0 }, { 0, 3, 1, 2, 4 }, { 4, 2, 0, 1, 3 }, { 3, 1, 4, 0, 2 }, { 2, 0, 3, 4, 1 } }
{ { 0, 4, 3, 2, 1 }, { 4, 3, 2, 1, 0 }, { 3, 2, 1, 0, 4 }, { 2, 1, 0, 4, 3 }, { 1, 0, 4, 3, 2 } } { { 1, 4, 2, 0, 3 }, { 0, 3, 1, 4, 2 }, { 4, 2, 0, 3, 1 }, { 3, 1, 4, 2, 0 }, { 2, 0, 3, 1, 4 } }
{ { 0, 3, 1, 4, 2 }, { 3, 2, 0, 1, 4 }, { 4, 1, 2, 3, 0 }, { 2, 4, 3, 0, 1 }, { 1, 0, 4, 2, 3 } } { { 1, 3, 4, 2, 0 }, { 0, 2, 3, 1, 4 }, { 3, 0, 1, 4, 2 }, { 4, 1, 2, 0, 3 }, { 2, 4, 0, 3, 1 } }
{ { 0, 4, 2, 3, 1 }, { 3, 1, 0, 4, 2 }, { 4, 2, 3, 1, 0 }, { 2, 3, 1, 0, 4 }, { 1, 0, 4, 2, 3 } } { { 1, 4, 2, 3, 0 }, { 0, 1, 4, 2, 3 }, { 3, 0, 1, 4, 2 }, { 4, 2, 3, 0, 1 }, { 2, 3, 0, 1, 4 } }
{ { 0, 4, 3, 2, 1 }, { 3, 2, 1, 0, 4 }, { 4, 3, 2, 1, 0 }, { 2, 1, 0, 4, 3 }, { 1, 0, 4, 3, 2 } } { { 1, 4, 3, 2, 0 }, { 0, 1, 4, 3, 2 }, { 3, 2, 0, 1, 4 }, { 4, 3, 2, 0, 1 }, { 2, 0, 1, 4, 3 } }
{ { 0, 2, 3, 4, 1 }, { 4, 1, 0, 2, 3 }, { 2, 3, 4, 1, 0 }, { 3, 4, 1, 0, 2 }, { 1, 0, 2, 3, 4 } } { { 1, 2, 3, 4, 0 }, { 0, 1, 2, 3, 4 }, { 4, 0, 1, 2, 3 }, { 2, 3, 4, 0, 1 }, { 3, 4, 0, 1, 2 } }
{ { 0, 2, 4, 3, 1 }, { 4, 3, 1, 0, 2 }, { 2, 4, 3, 1, 0 }, { 3, 1, 0, 2, 4 }, { 1, 0, 2, 4, 3 } } { { 1, 2, 4, 3, 0 }, { 0, 1, 2, 4, 3 }, { 4, 3, 0, 1, 2 }, { 2, 4, 3, 0, 1 }, { 3, 0, 1, 2, 4 } }
{ { 0, 1, 3, 4, 2 }, { 4, 3, 2, 1, 0 }, { 2, 4, 1, 0, 3 }, { 3, 0, 4, 2, 1 }, { 1, 2, 0, 3, 4 } } { { 1, 4, 0, 3, 2 }, { 0, 1, 3, 2, 4 }, { 4, 2, 1, 0, 3 }, { 2, 3, 4, 1, 0 }, { 3, 0, 2, 4, 1 } }
{ { 0, 4, 1, 2, 3 }, { 4, 3, 0, 1, 2 }, { 2, 1, 3, 4, 0 }, { 3, 2, 4, 0, 1 }, { 1, 0, 2, 3, 4 } } { { 1, 4, 2, 3, 0 }, { 0, 3, 4, 1, 2 }, { 4, 0, 1, 2, 3 }, { 2, 1, 3, 0, 4 }, { 3, 2, 0, 4, 1 } }
{ { 0, 4, 2, 1, 3 }, { 2, 1, 4, 3, 0 }, { 4, 3, 1, 0, 2 }, { 3, 2, 0, 4, 1 }, { 1, 0, 3, 2, 4 } } { { 1, 3, 4, 2, 0 }, { 0, 4, 1, 3, 2 }, { 2, 1, 0, 4, 3 }, { 4, 2, 3, 0, 1 }, { 3, 0, 2, 1, 4 } }
{ { 0, 4, 2, 3, 1 }, { 2, 1, 4, 0, 3 }, { 4, 3, 1, 2, 0 }, { 3, 2, 0, 1, 4 }, { 1, 0, 3, 4, 2 } } { { 1, 3, 4, 0, 2 }, { 0, 4, 1, 2, 3 }, { 2, 1, 0, 3, 4 }, { 4, 2, 3, 1, 0 }, { 3, 0, 2, 4, 1 } }
{ { 0, 4, 2, 3, 1 }, { 2, 3, 1, 0, 4 }, { 4, 2, 3, 1, 0 }, { 3, 1, 0, 4, 2 }, { 1, 0, 4, 2, 3 } } { { 1, 4, 2, 3, 0 }, { 0, 1, 4, 2, 3 }, { 2, 3, 0, 1, 4 }, { 4, 2, 3, 0, 1 }, { 3, 0, 1, 4, 2 } }
{ { 0, 4, 3, 2, 1 }, { 2, 1, 0, 4, 3 }, { 4, 3, 2, 1, 0 }, { 3, 2, 1, 0, 4 }, { 1, 0, 4, 3, 2 } } { { 1, 4, 3, 2, 0 }, { 0, 1, 4, 3, 2 }, { 2, 0, 1, 4, 3 }, { 4, 3, 2, 0, 1 }, { 3, 2, 0, 1, 4 } }
{ { 0, 2, 4, 3, 1 }, { 3, 1, 0, 2, 4 }, { 2, 4, 3, 1, 0 }, { 4, 3, 1, 0, 2 }, { 1, 0, 2, 4, 3 } } { { 1, 2, 4, 3, 0 }, { 0, 1, 2, 4, 3 }, { 3, 0, 1, 2, 4 }, { 2, 4, 3, 0, 1 }, { 4, 3, 0, 1, 2 } }
{ { 0, 2, 3, 4, 1 }, { 3, 4, 1, 0, 2 }, { 2, 3, 4, 1, 0 }, { 4, 1, 0, 2, 3 }, { 1, 0, 2, 3, 4 } } { { 1, 2, 3, 4, 0 }, { 0, 1, 2, 3, 4 }, { 3, 4, 0, 1, 2 }, { 2, 3, 4, 0, 1 }, { 4, 0, 1, 2, 3 } }
{ { 0, 2, 3, 4, 1 }, { 3, 1, 2, 0, 4 }, { 2, 4, 1, 3, 0 }, { 4, 3, 0, 1, 2 }, { 1, 0, 4, 2, 3 } } { { 1, 4, 2, 0, 3 }, { 0, 2, 1, 3, 4 }, { 3, 1, 0, 4, 2 }, { 2, 3, 4, 1, 0 }, { 4, 0, 3, 2, 1 } }
{ { 0, 2, 3, 1, 4 }, { 3, 1, 2, 4, 0 }, { 2, 4, 1, 0, 3 }, { 4, 3, 0, 2, 1 }, { 1, 0, 4, 3, 2 } } { { 1, 4, 2, 3, 0 }, { 0, 2, 1, 4, 3 }, { 3, 1, 0, 2, 4 }, { 2, 3, 4, 0, 1 }, { 4, 0, 3, 1, 2 } }
{ { 0, 2, 3, 4, 1 }, { 2, 4, 1, 3, 0 }, { 3, 1, 2, 0, 4 }, { 4, 3, 0, 1, 2 }, { 1, 0, 4, 2, 3 } } { { 1, 4, 3, 2, 0 }, { 0, 1, 2, 4, 3 }, { 2, 3, 1, 0, 4 }, { 3, 0, 4, 1, 2 }, { 4, 2, 0, 3, 1 } }
{ { 0, 2, 3, 1, 4 }, { 2, 4, 1, 0, 3 }, { 3, 1, 2, 4, 0 }, { 4, 3, 0, 2, 1 }, { 1, 0, 4, 3, 2 } } { { 1, 4, 3, 0, 2 }, { 0, 1, 2, 3, 4 }, { 2, 3, 1, 4, 0 }, { 3, 0, 4, 2, 1 }, { 4, 2, 0, 1, 3 } }
{ { 0, 2, 4, 1, 3 }, { 2, 4, 3, 0, 1 }, { 3, 1, 0, 4, 2 }, { 4, 3, 1, 2, 0 }, { 1, 0, 2, 3, 4 } } { { 1, 4, 2, 0, 3 }, { 0, 1, 4, 3, 2 }, { 2, 3, 0, 4, 1 }, { 3, 0, 1, 2, 4 }, { 4, 2, 3, 1, 0 } }
{ { 0, 2, 4, 3, 1 }, { 2, 4, 3, 1, 0 }, { 3, 1, 0, 2, 4 }, { 4, 3, 1, 0, 2 }, { 1, 0, 2, 4, 3 } } { { 1, 4, 2, 3, 0 }, { 0, 1, 4, 2, 3 }, { 2, 3, 0, 1, 4 }, { 3, 0, 1, 4, 2 }, { 4, 2, 3, 0, 1 } }
{ { 0, 2, 1, 3, 4 }, { 2, 4, 0, 1, 3 }, { 3, 1, 4, 2, 0 }, { 4, 3, 2, 0, 1 }, { 1, 0, 3, 4, 2 } } { { 1, 4, 0, 3, 2 }, { 0, 1, 3, 2, 4 }, { 2, 3, 4, 1, 0 }, { 3, 0, 2, 4, 1 }, { 4, 2, 1, 0, 3 } }
{ { 0, 2, 1, 4, 3 }, { 2, 4, 0, 3, 1 }, { 3, 1, 4, 0, 2 }, { 4, 3, 2, 1, 0 }, { 1, 0, 3, 2, 4 } } { { 1, 4, 0, 2, 3 }, { 0, 1, 3, 4, 2 }, { 2, 3, 4, 0, 1 }, { 3, 0, 2, 1, 4 }, { 4, 2, 1, 3, 0 } }
{ { 0, 3, 2, 4, 1 }, { 2, 4, 1, 0, 3 }, { 3, 2, 4, 1, 0 }, { 4, 1, 0, 3, 2 }, { 1, 0, 3, 2, 4 } } { { 1, 3, 2, 4, 0 }, { 0, 1, 3, 2, 4 }, { 2, 4, 0, 1, 3 }, { 3, 2, 4, 0, 1 }, { 4, 0, 1, 3, 2 } }
{ { 0, 3, 4, 2, 1 }, { 2, 1, 0, 3, 4 }, { 3, 4, 2, 1, 0 }, { 4, 2, 1, 0, 3 }, { 1, 0, 3, 4, 2 } } { { 1, 3, 4, 2, 0 }, { 0, 1, 3, 4, 2 }, { 2, 0, 1, 3, 4 }, { 3, 4, 2, 0, 1 }, { 4, 2, 0, 1, 3 } }
{ { 0, 3, 2, 4, 1 }, { 2, 1, 3, 0, 4 }, { 3, 4, 1, 2, 0 }, { 4, 2, 0, 1, 3 }, { 1, 0, 4, 3, 2 } } { { 1, 4, 3, 0, 2 }, { 0, 3, 1, 2, 4 }, { 2, 1, 0, 4, 3 }, { 3, 2, 4, 1, 0 }, { 4, 0, 2, 3, 1 } }
{ { 0, 3, 2, 1, 4 }, { 2, 1, 3, 4, 0 }, { 3, 4, 1, 0, 2 }, { 4, 2, 0, 3, 1 }, { 1, 0, 4, 2, 3 } } { { 1, 4, 3, 2, 0 }, { 0, 3, 1, 4, 2 }, { 2, 1, 0, 3, 4 }, { 3, 2, 4, 0, 1 }, { 4, 0, 2, 1, 3 } }
{ { 0, 3, 2, 1, 4 }, { 1, 4, 0, 3, 2 }, { 4, 0, 3, 2, 1 }, { 3, 2, 1, 4, 0 }, { 2, 1, 4, 0, 3 } } { { 2, 3, 1, 4, 0 }, { 0, 2, 3, 1, 4 }, { 1, 4, 0, 2, 3 }, { 4, 0, 2, 3, 1 }, { 3, 1, 4, 0, 2 } }
{ { 0, 4, 3, 2, 1 }, { 1, 0, 4, 3, 2 }, { 4, 3, 2, 1, 0 }, { 3, 2, 1, 0, 4 }, { 2, 1, 0, 4, 3 } } { { 2, 3, 1, 0, 4 }, { 0, 4, 2, 3, 1 }, { 1, 0, 4, 2, 3 }, { 4, 2, 3, 1, 0 }, { 3, 1, 0, 4, 2 } }
{ { 0, 4, 3, 1, 2 }, { 1, 2, 0, 4, 3 }, { 4, 3, 1, 2, 0 }, { 3, 1, 2, 0, 4 }, { 2, 0, 4, 3, 1 } } { { 2, 4, 3, 1, 0 }, { 0, 2, 4, 3, 1 }, { 1, 0, 2, 4, 3 }, { 4, 3, 1, 0, 2 }, { 3, 1, 0, 2, 4 } }
{ { 0, 4, 1, 3, 2 }, { 1, 3, 2, 0, 4 }, { 4, 1, 3, 2, 0 }, { 3, 2, 0, 4, 1 }, { 2, 0, 4, 1, 3 } } { { 2, 4, 1, 3, 0 }, { 0, 2, 4, 1, 3 }, { 1, 3, 0, 2, 4 }, { 4, 1, 3, 0, 2 }, { 3, 0, 2, 4, 1 } }
{ { 0, 3, 4, 1, 2 }, { 1, 2, 0, 3, 4 }, { 3, 4, 1, 2, 0 }, { 4, 1, 2, 0, 3 }, { 2, 0, 3, 4, 1 } } { { 2, 3, 4, 1, 0 }, { 0, 2, 3, 4, 1 }, { 1, 0, 2, 3, 4 }, { 3, 4, 1, 0, 2 }, { 4, 1, 0, 2, 3 } }
{ { 0, 3, 1, 4, 2 }, { 1, 4, 2, 0, 3 }, { 3, 1, 4, 2, 0 }, { 4, 2, 0, 3, 1 }, { 2, 0, 3, 1, 4 } } { { 2, 3, 1, 4, 0 }, { 0, 2, 3, 1, 4 }, { 1, 4, 0, 2, 3 }, { 3, 1, 4, 0, 2 }, { 4, 0, 2, 3, 1 } }
Number of check points        :      9078
Number of restores            :      9072
Maximum depth                 :        11
Peak of reversible heap (KiB) :       480
Number of Boolean domains     :         0
Number of integer domains     :       125
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :     20541
Number of filter executions   :    503466
Number of fixpoints           :     21081
Number of choice points       :      9076
Number of fails               :      9072
Maximum depth                 :         9
Number of solutions           :        40
</cout>
        <cerr></cerr>
        <secs>73.706794</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/labs'>
        <description>./build/release/examples/cp/int/labs 21 -t0</description>
        <cout>
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 } 2870
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1 } 2110
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1 } 2042
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1 } 1570
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1 } 1502
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1 } 1442
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1 } 1218
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1 } 1134
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1 } 1074
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1 } 1038
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1 } 1022
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1 } 978
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1 } 922
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1 } 862
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, 1 } 810
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, -1 } 798
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1 } 766
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, -1 } 722
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1 } 698
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, -1 } 686
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1 } 670
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, 1, -1 } 642
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, 1, 1, -1 } 634
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, -1, 1 } 618
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, -1, -1 } 570
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1, -1 } 562
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, -1, -1 } 558
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1, -1 } 546
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1, -1 } 526
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, 1, -1, -1 } 522
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, 1, 1, -1 } 502
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, -1, 1, -1 } 498
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, -1, 1, 1 } 482
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, -1, -1, 1 } 434
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1, 1, -1 } 422
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, -1, 1, -1 } 402
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1 } 390
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, 1, -1, -1, 1 } 370
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, 1, 1, -1, -1, 1 } 362
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, -1, 1, 1, -1 } 358
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, 1, -1, -1 } 342
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, -1, -1, -1, 1 } 330
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, -1, -1, 1, -1 } 326
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1 } 322
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1, 1, -1, -1 } 306
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1, -1, -1, 1 } 294
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, -1 } 290
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, 1, -1, -1, 1, -1 } 278
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1 } 274
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, -1 } 270
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, 1 } 262
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, -1, -1, -1, 1, 1 } 254
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, -1, -1, 1, -1, 1 } 250
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1 } 246
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, 1, 1 } 230
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, -1, 1, -1, 1, -1 } 222
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, -1, 1 } 214
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1 } 206
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, 1, -1, -1, 1, -1, 1 } 202
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, 1, -1, 1, -1, -1, 1 } 190
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, 1, 1 } 170
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, 1, -1, -1, -1, 1 } 166
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, 1, 1 } 158
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, 1 } 150
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1, -1, -1, 1, -1, 1 } 134
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1 } 118
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, -1, -1, -1, 1, 1, -1, 1 } 102
{ -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, 1, -1, 1, -1, -1, 1, 1, -1 } 98
{ -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, 1, 1, -1, -1, 1, -1, -1, 1, 1 } 94
{ -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, -1, 1, -1, -1, 1, 1, 1, -1 } 90
{ -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, 1, 1, 1, -1 } 70
{ -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, 1, -1 } 54
{ -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, 1, -1, 1 } 50
{ -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1, -1, 1 } 46
{ -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1 } 34
{ -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1 } 26
Number of check points        :    105274
Number of restores            :    105273
Maximum depth                 :        21
Peak of reversible heap (KiB) :       224
Number of Boolean domains     :         0
Number of integer domains     :        22
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :    211020
Number of filter executions   :   6020117
Number of fixpoints           :    210545
Number of choice points       :    105272
Number of fails               :    105273
Maximum depth                 :        19
Number of solutions           :        76
</cout>
        <cerr></cerr>
        <secs>73.059893</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/labs'>
        <description>./build/release/examples/cp/int/labs 22 -t0</description>
        <cout></cout>
        <cerr></cerr>
        <secs>0.0</secs>
        <kb>0.0</kb>
        <result>skipped</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/codes'>
        <description>./build/release/examples/cp/int/codes 3 15 35 --distance=11 -t0</description>
        <cout></cout>
        <cerr></cerr>
        <secs>0.0</secs>
        <kb>0.0</kb>
        <result>skipped</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/int/codes'>
        <description>./build/release/examples/cp/int/codes 3 15 35 --lee=1 --distance=9 -t0</description>
        <cout>
{ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 2, 2, 2 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 0, 0, 0, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 2, 2, 2 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 2, 0, 1, 2, 0, 1, 2, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 0, 1, 2, 0, 1, 2, 0, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 0, 0, 1, 2, 1, 2, 0, 2, 0, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 2, 0, 2, 0, 1, 0, 1, 2 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 0, 2, 0, 1, 0, 1, 2, 1, 2, 0 } } : 9
Number of check points        :    108635
Number of restores            :    108178
Maximum depth                 :       460
Peak of reversible heap (KiB) :      4064
Number of Boolean domains     :         0
Number of integer domains     :       526
Number of set domains         :         0
Number of range domains       :         0
Number of filters             :    216976
Number of filter executions   :   2353896
Number of fixpoints           :    216812
Number of choice points       :    108633
Number of fails               :    108178
Maximum depth                 :       458
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>122.422388</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/set/golfer'>
        <description>./build/release/examples/cp/set/golfer 4 7 4 --heuristic 0 -t0</description>
        <cout>
{ { { 1 2 3 4 }, { 5 6 7 8 }, { 9 10 11 12 }, { 13 14 15 16 }, { 17 18 19 20 }, { 21 22 23 24 }, { 25 26 27 28 } }, { { 1 5 9 13 }, { 2 6 10 14 }, { 3 7 11 15 }, { 4 17 21 25 }, { 8 18 22 26 }, { 12 19 23 27 }, { 16 20 24 28 } }, { { 1 6 11 16 }, { 2 5 12 15 }, { 3 8 9 14 }, { 4 18 23 28 }, { 7 17 22 27 }, { 10 19 24 25 }, { 13 20 21 26 } }, { { 1 7 10 18 }, { 2 8 11 13 }, { 3 5 16 17 }, { 4 6 24 27 }, { 9 15 23 26 }, { 12 20 22 25 }, { 14 19 21 28 } } }
Number of check points        :     26602
Number of restores            :     26538
Maximum depth                 :        68
Peak of reversible heap (KiB) :      4064
Number of Boolean domains     :         0
Number of integer domains     :         0
Number of set domains         :        28
Number of range domains       :         0
Number of filters             :      6920
Number of filter executions   :  20964503
Number of fixpoints           :     62174
Number of choice points       :     26600
Number of fails               :     26538
Maximum depth                 :        66
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>245.74964</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/set/golfer'>
        <description>./build/release/examples/cp/set/golfer 5 7 4 --heuristic 0 -t0</description>
        <cout>
{ { { 1 2 3 4 }, { 5 6 7 8 }, { 9 10 11 12 }, { 13 14 15 16 }, { 17 18 19 20 }, { 21 22 23 24 }, { 25 26 27 28 } }, { { 1 5 9 13 }, { 2 6 10 14 }, { 3 7 11 15 }, { 4 17 21 25 }, { 8 18 22 26 }, { 12 19 23 27 }, { 16 20 24 28 } }, { { 1 6 11 16 }, { 2 5 12 15 }, { 3 8 9 14 }, { 4 18 23 28 }, { 7 17 22 27 }, { 10 19 24 25 }, { 13 20 21 26 } }, { { 1 7 10 18 }, { 2 8 11 13 }, { 3 5 16 17 }, { 4 6 24 27 }, { 9 15 23 26 }, { 12 20 22 25 }, { 14 19 21 28 } }, { { 1 8 12 17 }, { 2 7 9 19 }, { 3 13 23 25 }, { 4 5 10 20 }, { 6 15 22 28 }, { 11 14 24 26 }, { 16 18 21 27 } } }
Number of check points        :     30714
Number of restores            :     30640
Maximum depth                 :        80
Peak of reversible heap (KiB) :      8160
Number of Boolean domains     :         0
Number of integer domains     :         0
Number of set domains         :        35
Number of range domains       :         0
Number of filters             :     11465
Number of filter executions   :  32686134
Number of fixpoints           :     71335
Number of choice points       :     30712
Number of fails               :     30640
Maximum depth                 :        78
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>274.056336</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/set/golfer'>
        <description>./build/release/examples/cp/set/golfer 3 6 3 --heuristic 1 -t0</description>
        <cout>
{ { { 1 2 3 }, { 4 5 6 }, { 7 8 9 }, { 10 11 12 }, { 13 14 15 }, { 16 17 18 } }, { { 1 4 7 }, { 2 5 8 }, { 3 6 9 }, { 10 13 16 }, { 11 14 17 }, { 12 15 18 } }, { { 1 5 9 }, { 2 4 10 }, { 3 7 15 }, { 6 8 17 }, { 11 13 18 }, { 12 14 16 } } }
Number of check points        :    194208
Number of restores            :    194152
Maximum depth                 :        56
Peak of reversible heap (KiB) :      2016
Number of Boolean domains     :         0
Number of integer domains     :         0
Number of set domains         :        18
Number of range domains       :         0
Number of filters             :    389871
Number of filter executions   :   9552081
Number of fixpoints           :    218887
Number of choice points       :    194206
Number of fails               :    194152
Maximum depth                 :        54
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>278.966589</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/set/golfer'>
        <description>./build/release/examples/cp/set/golfer 3 6 3 --heuristic 2 -t0</description>
        <cout>
{ { { 1 2 3 }, { 4 5 6 }, { 7 8 9 }, { 10 11 12 }, { 13 14 15 }, { 16 17 18 } }, { { 1 4 7 }, { 2 5 8 }, { 3 6 9 }, { 10 13 16 }, { 11 14 17 }, { 12 15 18 } }, { { 1 5 9 }, { 2 4 10 }, { 3 7 15 }, { 6 8 17 }, { 11 13 18 }, { 12 14 16 } } }
Number of check points        :     24710
Number of restores            :     24680
Maximum depth                 :        31
Peak of reversible heap (KiB) :      2016
Number of Boolean domains     :         0
Number of integer domains     :         0
Number of set domains         :        18
Number of range domains       :         0
Number of filters             :     51978
Number of filter executions   :   9214188
Number of fixpoints           :     74098
Number of choice points       :     24708
Number of fails               :     24680
Maximum depth                 :        29
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>389.335811</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/set/steiner'>
        <description>./build/release/examples/cp/set/steiner 7 -t0</description>
        <cout>
{ { 1 2 3 }, { 1 4 5 }, { 1 6 7 }, { 2 4 6 }, { 2 5 7 }, { 3 4 7 }, { 3 5 6 } }
Number of check points        :        18
Number of restores            :         2
Maximum depth                 :        16
Peak of reversible heap (KiB) :       224
Number of Boolean domains     :         0
Number of integer domains     :         0
Number of set domains         :         7
Number of range domains       :         0
Number of filters             :       528
Number of filter executions   :      2302
Number of fixpoints           :        27
Number of choice points       :        16
Number of fails               :         2
Maximum depth                 :        14
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>283.206945</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/set/steiner'>
        <description>./build/release/examples/cp/set/steiner 9 -t0</description>
        <cout>
{ { 1 2 3 }, { 1 4 5 }, { 1 6 7 }, { 1 8 9 }, { 2 4 6 }, { 2 5 8 }, { 2 7 9 }, { 3 4 9 }, { 3 5 7 }, { 3 6 8 }, { 4 7 8 }, { 5 6 9 } }
Number of check points        :       649
Number of restores            :       623
Maximum depth                 :        28
Peak of reversible heap (KiB) :       992
Number of Boolean domains     :         0
Number of integer domains     :         0
Number of set domains         :        12
Number of range domains       :         0
Number of filters             :      1588
Number of filter executions   :    246706
Number of fixpoints           :      1514
Number of choice points       :       647
Number of fails               :       623
Maximum depth                 :        26
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>283.479904</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/set/hamming'>
        <description>./build/release/examples/cp/set/hamming 10 20 --distance 9 -t0</description>
        <cout>
{ { 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 }, { 0 1 2 3 4 5 6 7 8 9 10 11 }, { 0 1 2 3 4 5 6 12 13 14 15 16 }, { 0 1 2 3 4 5 6 17 18 19 20 }, { 0 1 2 3 7 8 9 12 13 14 17 18 }, { 0 1 2 3 7 8 9 15 16 19 20 }, { 0 1 2 3 10 11 12 13 14 19 20 }, { 0 1 2 3 10 11 15 16 17 18 }, { 0 1 4 5 7 8 10 12 13 15 17 19 }, { 0 1 4 5 7 8 10 14 16 18 20 } } : 9
Number of check points        :     59244
Number of restores            :     59137
Maximum depth                 :       112
Peak of reversible heap (KiB) :      2016
Number of Boolean domains     :         0
Number of integer domains     :         1
Number of set domains         :        20
Number of range domains       :         0
Number of filters             :      2117
Number of filter executions   :  30596048
Number of fixpoints           :    118391
Number of choice points       :     59242
Number of fails               :     59137
Maximum depth                 :       110
Number of solutions           :         1
</cout>
        <cerr></cerr>
        <secs>302.704981</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
    <test id='./build/release/examples/cp/set/hamming'>
        <description>./build/release/examples/cp/set/hamming 5 5 --maximize 1 -t0</description>
        <cout>
{ { 0 1 2 3 4 5 }, { 0 1 2 3 4 5 }, { 0 1 2 3 4 5 }, { 0 1 2 3 4 5 }, { 0 1 2 3 4 5 } } : 0
{ { 0 1 2 3 4 5 }, { 0 1 2 3 4 }, { 0 1 2 3 5 }, { 0 1 2 3 }, { 0 1 2 4 5 } } : 1
{ { 0 1 2 3 4 5 }, { 0 1 2 3 }, { 0 1 2 4 }, { 0 1 2 5 }, { 0 1 3 4 } } : 2
{ { 0 1 2 3 4 5 }, { 0 1 2 }, { 0 3 4 }, { 0 5 }, { 1 3 5 } } : 3
Number of check points        :     39538
Number of restores            :     39537
Maximum depth                 :        32
Peak of reversible heap (KiB) :       224
Number of Boolean domains     :         0
Number of integer domains     :         1
Number of set domains         :        10
Number of range domains       :         0
Number of filters             :       501
Number of filter executions   :  14476650
Number of fixpoints           :     87493
Number of choice points       :     39536
Number of fails               :     39537
Maximum depth                 :        30
Number of solutions           :         4
</cout>
        <cerr></cerr>
        <secs>307.165302</secs>
        <kb>166504</kb>
        <result>ok</result>
        <categories>
            <category>Benchmark</category>
        </categories>
    </test>
</testsuite>
