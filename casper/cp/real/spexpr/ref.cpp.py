
import sys
import os

libPath = os.path.abspath('pyutils')
sys.path.append(libPath)

import objdb


print "/* THIS FILE WAS AUTOGENERATED FROM view.cpp.py */"
print "#include <casper/kernel/spexpr/expr.h>"
print "namespace Casper {"
print "namespace Detail {"

class RefCreator:
	def __init__(self,t,ev=None,m=None):
		self.t = t
		self.ev = ev
		self.m = m
	def print1(self,f):
		print "template<>"
		print self.t+" Create<"+f+","+self.t+">::operator()(State& state, const "+f+"& f)"
		print "{	return "+self.t+"(state,f);	}"		
	def __call__(self,r,f):
		if r.properties["ev"]==self.ev and objdb.getCPModule(r)==self.m:
			self.print1(f)

def refArg(ev):
	if ev!="float":
		return None
	return "Ref<"+ev+">"

RefCreator("Ref<CP::Var<float> >").print1("CP::Var<float>")
RefCreator("Ref<CP::Var<float> >").print1("Ref<float>")

objdb.forAllRelOper(RefCreator("Ref<CP::Var<float> >","float","real"),refArg)
objdb.forAllRelPred(RefCreator("Ref<CP::Var<float> >","float","real"))

print "}"
print "}"

