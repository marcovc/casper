
import sys
import os

libPath = os.path.abspath('pyutils')
sys.path.append(libPath)

import objdb


print "/* THIS FILE WAS AUTOGENERATED FROM post.cpp.py */"
print "#include <casper/kernel/spexpr/expr.h>"
print "namespace Casper {"
print "namespace Detail {"

class PostCreator:
	def __init__(self,m=None):
		self.m = m
	def print1(self,f):
		print "template<>"
		print "bool PostFilter<"+f+">::dom(CP::Store& store, const "+f+"& f)"
		print "{	return Casper::CP::postDomFilter(store,f);	}"
		print "template<>"
		print "bool PostFilter<"+f+">::bnd(CP::Store& store, const "+f+"& f)"
		print "{	return Casper::CP::postBndFilter(store,f);	}"
		print "template<>"
		print "bool PostFilter<"+f+">::val(CP::Store& store, const "+f+"& f)"
		print "{	return Casper::CP::postValFilter(store,f);	}"
	def __call__(self,r,f):
		if r.properties["ev"]=="bool" and objdb.getCPModule(r)==self.m:
			self.print1(f)

def varArg(ev):
	if ev!="float":
		return None
	return "CP::Var<"+ev+" >"

def goalArg(ev):
	if ev!="bool":
		return None
	return "Goal"

objdb.forAllRelOper(PostCreator("real"),varArg)
objdb.forAllRelOper(PostCreator("real"),goalArg)

objdb.forAllRelPred(PostCreator("real"))


print "}"
print "}"

